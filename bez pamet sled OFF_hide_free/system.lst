CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 1

ADDR   CODE       LINE  SOURCE

                  00001 
                  00002 ; CC8E Version 1.1E, Copyright (c) B Knudsen Data
                  00003 ; C compiler for the PIC18 microcontrollers
                  00004 ; ************  17. Mar 2016   2:04  *************
                  00005 
                  00006 	processor  PIC18F4520
                  00007 	radix  DEC
                  00008 
       0FF6       00009 TBLPTR      EQU   0xFF6
       0FF5       00010 TABLAT      EQU   0xFF5
       0FF4       00011 PRODH       EQU   0xFF4
       0FF3       00012 PRODL       EQU   0xFF3
       0FF2       00013 INTCON      EQU   0xFF2
       0FF1       00014 INTCON2     EQU   0xFF1
       0FF0       00015 INTCON3     EQU   0xFF0
       0FEE       00016 POSTINC0    EQU   0xFEE
       0FEA       00017 FSR0H       EQU   0xFEA
       0FE9       00018 FSR0        EQU   0xFE9
       0FE0       00019 BSR         EQU   0xFE0
       0FD8       00020 STATUS      EQU   0xFD8
       0000       00021 Carry       EQU   0
       0002       00022 Zero_       EQU   2
       0FD7       00023 TMR0H       EQU   0xFD7
       0FD6       00024 TMR0L       EQU   0xFD6
       0FD5       00025 T0CON       EQU   0xFD5
       0FCF       00026 TMR1H       EQU   0xFCF
       0FCE       00027 TMR1L       EQU   0xFCE
       0FCD       00028 T1CON       EQU   0xFCD
       0FCC       00029 TMR2        EQU   0xFCC
       0FCA       00030 T2CON       EQU   0xFCA
       0FC9       00031 SSPBUF      EQU   0xFC9
       0FC6       00032 SSPCON1     EQU   0xFC6
       0FC4       00033 ADRESH      EQU   0xFC4
       0FC3       00034 ADRESL      EQU   0xFC3
       0FC2       00035 ADCON0      EQU   0xFC2
       0FC1       00036 ADCON1      EQU   0xFC1
       0FB4       00037 CMCON       EQU   0xFB4
       0FB1       00038 T3CON       EQU   0xFB1
       0FAE       00039 RCREG       EQU   0xFAE
       0FAD       00040 TXREG       EQU   0xFAD
       0FA9       00041 EEADR       EQU   0xFA9
       0FA8       00042 EEDATA      EQU   0xFA8
       0FA7       00043 EECON2      EQU   0xFA7
       0FA2       00044 IPR2        EQU   0xFA2
       0FA1       00045 PIR2        EQU   0xFA1
       0FA0       00046 PIE2        EQU   0xFA0
       0F9F       00047 IPR1        EQU   0xF9F
       0F9E       00048 PIR1        EQU   0xF9E
       0F9D       00049 PIE1        EQU   0xF9D
       0F96       00050 TRISE       EQU   0xF96
       0F95       00051 TRISD       EQU   0xF95
       0F94       00052 TRISC       EQU   0xF94
       0F93       00053 TRISB       EQU   0xF93
       0F92       00054 TRISA       EQU   0xF92
       0F84       00055 PORTE       EQU   0xF84
       0F83       00056 PORTD       EQU   0xF83
       0F82       00057 PORTC       EQU   0xF82
       0F81       00058 PORTB       EQU   0xF81
       0F80       00059 PORTA       EQU   0xF80
       0001       00060 INT0IF      EQU   1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 2

ADDR   CODE       LINE  SOURCE

       0002       00061 TMR0IF      EQU   2
       0005       00062 TMR0IE      EQU   5
       0006       00063 GIEL        EQU   6
       0007       00064 GIEH        EQU   7
       0002       00065 TMR0IP      EQU   2
       0000       00066 INT1IF      EQU   0
       0001       00067 INT2IF      EQU   1
       0007       00068 IPEN        EQU   7
       0000       00069 BF          EQU   0
       0006       00070 CKE         EQU   6
       0007       00071 SMP         EQU   7
       0004       00072 CKP         EQU   4
       0005       00073 SSPEN       EQU   5
       0001       00074 GO          EQU   1
       0001       00075 TRMT        EQU   1
       0000       00076 RD          EQU   0
       0001       00077 WR          EQU   1
       0002       00078 WREN        EQU   2
       0006       00079 CFGS        EQU   6
       0007       00080 EEPGD       EQU   7
       0000       00081 TMR1IP      EQU   0
       0000       00082 TMR1IF      EQU   0
       0005       00083 RCIF        EQU   5
       0000       00084 TMR1IE      EQU   0
       0000       00085 EBUT4       EQU   0
       0001       00086 EBUT3       EQU   1
       0000       00087 OPA         EQU   0
       0001       00088 OPB         EQU   1
       0002       00089 OPC         EQU   2
       0003       00090 INHALL      EQU   3
       0005       00091 OPD         EQU   5
       0006       00092 OPE         EQU   6
       0007       00093 OPF         EQU   7
       0000       00094 REL6        EQU   0
       0001       00095 REL1        EQU   1
       0002       00096 REL2        EQU   2
       0003       00097 IN_PC       EQU   3
       0004       00098 OUT_PC      EQU   4
       0005       00099 EBUT6       EQU   5
       0006       00100 REL3        EQU   6
       0007       00101 REL4        EQU   7
       0000       00102 REL5        EQU   0
       0001       00103 EBUT5       EQU   1
       0002       00104 ESC         EQU   2
       0003       00105 DOWN        EQU   3
       0004       00106 UP          EQU   4
       0005       00107 ENTER       EQU   5
       0006       00108 EBUT1       EQU   6
       0007       00109 EBUT2       EQU   7
       0000       00110 LCD_EN      EQU   0
       0001       00111 LCD_RS      EQU   1
       0002       00112 EBUT_COUNTER EQU   2
       0096       00113 SECcount    EQU   0x96
       0098       00114 ADC_value   EQU   0x98
       009A       00115 credit      EQU   0x9A
       009C       00116 temp        EQU   0x9C
       00A3       00117 cred1       EQU   0xA3
       00A6       00118 cred2       EQU   0xA6
       00A9       00119 cred3       EQU   0xA9
       00AC       00120 cred4       EQU   0xAC
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 3

ADDR   CODE       LINE  SOURCE

       00AF       00121 cred6       EQU   0xAF
       00B2       00122 value       EQU   0xB2
       00B5       00123 tot         EQU   0xB5
       00B8       00124 total1      EQU   0xB8
       00BB       00125 total2      EQU   0xBB
       00BE       00126 total3      EQU   0xBE
       00C1       00127 total4      EQU   0xC1
       00C4       00128 total6      EQU   0xC4
       00C7       00129 overpay     EQU   0xC7
       00CA       00130 NONpay      EQU   0xCA
       00DC       00131 wHour       EQU   0xDC
       0022       00132 rem1        EQU   0x22
       0023       00133 rem2        EQU   0x23
       0024       00134 rem3        EQU   0x24
       0025       00135 rem4        EQU   0x25
       0026       00136 rem6        EQU   0x26
       0027       00137 err1        EQU   0x27
       0028       00138 err2        EQU   0x28
       0029       00139 err3        EQU   0x29
       002A       00140 err4        EQU   0x2A
       002B       00141 err6        EQU   0x2B
       002C       00142 ind         EQU   0x2C
       002E       00143 hour        EQU   0x2E
       002F       00144 min         EQU   0x2F
       0030       00145 sec         EQU   0x30
       0031       00146 stot        EQU   0x31
       0032       00147 lev         EQU   0x32
       0033       00148 check       EQU   0x33
       0034       00149 vINH        EQU   0x34
       0035       00150 vComm       EQU   0x35
       0036       00151 vEN1        EQU   0x36
       0037       00152 vEN2        EQU   0x37
       0038       00153 vEN3        EQU   0x38
       0039       00154 vEN4        EQU   0x39
       003A       00155 vEN6        EQU   0x3A
       003B       00156 vBL         EQU   0x3B
       0044       00157 vAUTOSTART  EQU   0x44
       0046       00158 sysB        EQU   0x46
       0047       00159 retvalue    EQU   0x47
       0048       00160 vOPA        EQU   0x48
       0049       00161 vOPB        EQU   0x49
       004A       00162 vOPC        EQU   0x4A
       004B       00163 vOPD        EQU   0x4B
       004C       00164 vOPE        EQU   0x4C
       004D       00165 vOPF        EQU   0x4D
       004E       00166 ubyte       EQU   0x4E
       004F       00167 overTIME    EQU   0x4F
       0050       00168 wTIME       EQU   0x50
       0052       00169 vCounter    EQU   0x52
       0054       00170 pause       EQU   0x54
       0055       00171 WORK        EQU   0x55
       0056       00172 OPA_count   EQU   0x56
       0057       00173 OPB_count   EQU   0x57
       0058       00174 OPC_count   EQU   0x58
       0059       00175 OPD_count   EQU   0x59
       005A       00176 OPE_count   EQU   0x5A
       005B       00177 OPF_count   EQU   0x5B
       005C       00178 credit_tmp  EQU   0x5C
       005F       00179 OUT_PC_count EQU   0x5F
       0060       00180 PC_count    EQU   0x60
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 4

ADDR   CODE       LINE  SOURCE

       0061       00181 PC          EQU   0x61
       0062       00182 free_flag   EQU   0x62
       0000       00183 tmpSTATUS   EQU   0x00
       0001       00184 tmpBSR      EQU   0x01
       0002       00185 tmpWREG     EQU   0x02
       007F       00186 dat         EQU   0x7F
       007F       00187 cmd         EQU   0x7F
       007F       00188 smb         EQU   0x7F
       001C       00189 arg1        EQU   0x1C
       001E       00190 arg2        EQU   0x1E
       001F       00191 rm          EQU   0x1F
       0020       00192 counter     EQU   0x20
       0021       00193 tmp         EQU   0x21
       001C       00194 arg1_5      EQU   0x1C
       001E       00195 arg2_5      EQU   0x1E
       001F       00196 rm_5        EQU   0x1F
       0020       00197 counter_5   EQU   0x20
       0021       00198 tmp_2       EQU   0x21
       007F       00199 ch          EQU   0x7F
       001E       00200 count       EQU   0x1E
       007F       00201 second      EQU   0x7F
       0012       00202 pr          EQU   0x12
       0015       00203 pr_n        EQU   0x15
       0018       00204 C1cnt       EQU   0x18
       0019       00205 C2tmp       EQU   0x19
       001C       00206 C3rem       EQU   0x1C
       0018       00207 C8cnt       EQU   0x18
       0019       00208 C9tmp       EQU   0x19
       001C       00209 C10rem      EQU   0x1C
       0018       00210 C11cnt      EQU   0x18
       0019       00211 C12tmp      EQU   0x19
       007F       00212 hex         EQU   0x7F
       007F       00213 dec         EQU   0x7F
       0018       00214 address     EQU   0x18
       0019       00215 byte        EQU   0x19
       0014       00216 smb_2       EQU   0x14
       0015       00217 addr        EQU   0x15
       0009       00218 ch_2        EQU   0x09
       000A       00219 overload    EQU   0x0A
       000B       00220 addr_2      EQU   0x0B
       000C       00221 val         EQU   0x0C
       000D       00222 x2          EQU   0x0D
       000F       00223 a           EQU   0x0F
       0011       00224 b           EQU   0x11
       0013       00225 y2          EQU   0x13
       0016       00226 C21cnt      EQU   0x16
       0017       00227 C22tmp      EQU   0x17
       001A       00228 C23rem      EQU   0x1A
       0016       00229 C24cnt      EQU   0x16
       0017       00230 C25tmp      EQU   0x17
       0016       00231 C30cnt      EQU   0x16
       0017       00232 C31tmp      EQU   0x17
       001A       00233 C32rem      EQU   0x1A
       0009       00234 ch_3        EQU   0x09
       000A       00235 overload_2  EQU   0x0A
       000B       00236 addr_3      EQU   0x0B
       000C       00237 val_2       EQU   0x0C
       000D       00238 x2_2        EQU   0x0D
       000F       00239 a_2         EQU   0x0F
       0011       00240 b_2         EQU   0x11
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 5

ADDR   CODE       LINE  SOURCE

       0013       00241 cred        EQU   0x13
       0015       00242 y2_2        EQU   0x15
       0018       00243 C39cnt      EQU   0x18
       0019       00244 C40tmp      EQU   0x19
       001C       00245 C41rem      EQU   0x1C
       0018       00246 C42cnt      EQU   0x18
       0019       00247 C43tmp      EQU   0x19
       0018       00248 C48cnt      EQU   0x18
       0019       00249 C49tmp      EQU   0x19
       001C       00250 C50rem      EQU   0x1C
       001C       00251 c           EQU   0x1C
       001D       00252 tmp_3       EQU   0x1D
       0011       00253 mode        EQU   0x11
       0014       00254 pos         EQU   0x14
       0014       00255 s           EQU   0x14
       0013       00256 symb        EQU   0x13
       0014       00257 elem        EQU   0x14
       0015       00258 scyr        EQU   0x15
       0011       00259 s_2         EQU   0x11
       0012       00260 cyr_tmp     EQU   0x12
       0011       00261 x           EQU   0x11
       0014       00262 a_3         EQU   0x14
       0016       00263 b_3         EQU   0x16
       0018       00264 a1          EQU   0x18
       0019       00265 b1          EQU   0x19
       001A       00266 a2          EQU   0x1A
       001B       00267 b2          EQU   0x1B
       001C       00268 C51cnt      EQU   0x1C
       001D       00269 C52tmp      EQU   0x1D
       0020       00270 C53rem      EQU   0x20
       001C       00271 C54cnt      EQU   0x1C
       001D       00272 C55tmp      EQU   0x1D
       0009       00273 point       EQU   0x09
       000A       00274 k           EQU   0x0A
       000B       00275 change      EQU   0x0B
       000C       00276 esc         EQU   0x0C
       000D       00277 digit       EQU   0x0D
       000E       00278 dmax        EQU   0x0E
       000F       00279 lcd_adr     EQU   0x0F
       0010       00280 eadr        EQU   0x10
       0011       00281 ENbit       EQU   0x11
       0012       00282 ENaddr      EQU   0x12
       0013       00283 new_value   EQU   0x13
       0011       00284 en          EQU   0x11
       0003       00285 pp          EQU   0x03
       0004       00286 val_tmp     EQU   0x04
       0006       00287 x2_tmp      EQU   0x06
       0008       00288 pause_flag  EQU   0x08
       0016       00289 ci_2        EQU   0x16
       0016       00290 ci_3        EQU   0x16
       0013       00291 ci_4        EQU   0x13
                  00292 
000000 EFCF F00F  00293 	GOTO main
                  00294 
                  00295   ; FILE interrupt.h
                  00296 			;extern void scan(void);
                  00297 			;extern void REL1_ON(void);
                  00298 			;extern void REL2_ON(void);
                  00299 			;extern void REL3_ON(void);
                  00300 			;extern void REL4_ON(void);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 6

ADDR   CODE       LINE  SOURCE

                  00301 			;extern void REL6_ON(void);
                  00302 			;extern void REL_OFF(void);
                  00303 			;
                  00304 			;void _highPriorityInt(void);
                  00305 			;
                  00306 			;/*-----------------------------------------*/
                  00307 			;
                  00308 			;#pragma origin 0x8
       0000       00309 	ORG 0x0008
                  00310 			;interrupt highPriorityIntServer(void)
                  00311 			;{
                  00312 highPriorityIntServer
                  00313 			; _highPriorityInt();
000008 D89F       00314 	RCALL _highPriorityInt
                  00315 			; #pragma fastMode
                  00316 			;}
00000A 0011       00317 	RETFIE 1
                  00318 			;
                  00319 			;/*-----------------------------------------*/
                  00320 			;
                  00321 			;#pragma origin 0x18
       0000       00322 	ORG 0x0018
                  00323 			;interrupt lowPriorityIntServer(void)
                  00324 			;{
                  00325 lowPriorityIntServer
                  00326 			;low_save_registers						// back up W, STATUS and BSR
000018 CFD8 F000  00327 	MOVFF STATUS,tmpSTATUS
00001C CFE0 F001  00328 	MOVFF BSR,tmpBSR
000020 6E02       00329 	MOVWF tmpWREG,0
                  00330 			;
                  00331 			;if(TMR1IF)								
000022 0100       00332 	MOVLB 0
000024 A09E       00333 	BTFSS 0xF9E,TMR1IF,0
000026 D008       00334 	BRA   m001
                  00335 			;	{
                  00336 			;	TMR1H = 0xF1;						// delay 10ms		
000028 0EF1       00337 	MOVLW 241
00002A 6ECF       00338 	MOVWF TMR1H,0
                  00339 			;	TMR1L = 0x5C;
00002C 0E5C       00340 	MOVLW 92
00002E 6ECE       00341 	MOVWF TMR1L,0
                  00342 			;	if(!check) scan();
000030 5233       00343 	MOVF  check,1,0
000032 B4D8       00344 	BTFSC 0xFD8,Zero_,0
000034 D9BB       00345 	RCALL scan
                  00346 			;	TMR1IF = 0;
000036 909E       00347 	BCF   0xF9E,TMR1IF,0
                  00348 			;	}
                  00349 			;
                  00350 			;if(TMR0IF)
000038 A4F2       00351 m001	BTFSS 0xFF2,TMR0IF,0
00003A D07D       00352 	BRA   m008
                  00353 			;	{
                  00354 			;	TMR0H = 0x48;						// overflow after 1000ms
00003C 0E48       00355 	MOVLW 72
00003E 6ED7       00356 	MOVWF TMR0H,0
                  00357 			;	TMR0L = 0xE4;
000040 0EE4       00358 	MOVLW 228
000042 6ED6       00359 	MOVWF TMR0L,0
                  00360 			;	SECcount ++;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 7

ADDR   CODE       LINE  SOURCE

000044 2B96       00361 	INCF  SECcount,1,1
000046 0E00       00362 	MOVLW 0
000048 2397       00363 	ADDWFC SECcount+1,1,1
                  00364 			;	wTIME ++;
00004A 2A50       00365 	INCF  wTIME,1,0
00004C 2251       00366 	ADDWFC wTIME+1,1,0
                  00367 			;	overTIME ++;
00004E 2A4F       00368 	INCF  overTIME,1,0
                  00369 			;	if((cred1 > 0) && (vEN1) && pause == 0) 
000050 51A3       00370 	MOVF  cred1,W,1
000052 11A4       00371 	IORWF cred1+1,W,1
000054 11A5       00372 	IORWF cred1+2,W,1
000056 E009       00373 	BZ    m002
000058 5236       00374 	MOVF  vEN1,1,0
00005A E007       00375 	BZ    m002
00005C 6654       00376 	TSTFSZ pause,0
00005E D005       00377 	BRA   m002
                  00378 			;		{		
                  00379 			;		cred1 --;
000060 07A3       00380 	DECF  cred1,1,1
000062 0E00       00381 	MOVLW 0
000064 5BA4       00382 	SUBWFB cred1+1,1,1
000066 5BA5       00383 	SUBWFB cred1+2,1,1
                  00384 			;		REL1_ON();
000068 D9F8       00385 	RCALL REL1_ON
                  00386 			;		}
                  00387 			;//	else REL1_OFF();
                  00388 			;	if((cred2 > 0) && (vEN2) && pause == 0) 
00006A 51A6       00389 m002	MOVF  cred2,W,1
00006C 11A7       00390 	IORWF cred2+1,W,1
00006E 11A8       00391 	IORWF cred2+2,W,1
000070 E009       00392 	BZ    m003
000072 5237       00393 	MOVF  vEN2,1,0
000074 E007       00394 	BZ    m003
000076 6654       00395 	TSTFSZ pause,0
000078 D005       00396 	BRA   m003
                  00397 			;		{		
                  00398 			;		cred2 --;
00007A 07A6       00399 	DECF  cred2,1,1
00007C 0E00       00400 	MOVLW 0
00007E 5BA7       00401 	SUBWFB cred2+1,1,1
000080 5BA8       00402 	SUBWFB cred2+2,1,1
                  00403 			;		REL2_ON();
000082 D9F2       00404 	RCALL REL2_ON
                  00405 			;		}
                  00406 			;//	else REL2_OFF();
                  00407 			;	if((cred3 > 0) && (vEN3) && pause == 0) 
000084 51A9       00408 m003	MOVF  cred3,W,1
000086 11AA       00409 	IORWF cred3+1,W,1
000088 11AB       00410 	IORWF cred3+2,W,1
00008A E009       00411 	BZ    m004
00008C 5238       00412 	MOVF  vEN3,1,0
00008E E007       00413 	BZ    m004
000090 6654       00414 	TSTFSZ pause,0
000092 D005       00415 	BRA   m004
                  00416 			;		{		
                  00417 			;		cred3 --;
000094 07A9       00418 	DECF  cred3,1,1
000096 0E00       00419 	MOVLW 0
000098 5BAA       00420 	SUBWFB cred3+1,1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 8

ADDR   CODE       LINE  SOURCE

00009A 5BAB       00421 	SUBWFB cred3+2,1,1
                  00422 			;		REL3_ON();
00009C D9EC       00423 	RCALL REL3_ON
                  00424 			;		}
                  00425 			;//	else REL3_OFF();
                  00426 			;	if((cred4 > 0) && (vEN4) && pause == 0) 
00009E 51AC       00427 m004	MOVF  cred4,W,1
0000A0 11AD       00428 	IORWF cred4+1,W,1
0000A2 11AE       00429 	IORWF cred4+2,W,1
0000A4 E009       00430 	BZ    m005
0000A6 5239       00431 	MOVF  vEN4,1,0
0000A8 E007       00432 	BZ    m005
0000AA 6654       00433 	TSTFSZ pause,0
0000AC D005       00434 	BRA   m005
                  00435 			;		{		
                  00436 			;		cred4 --;
0000AE 07AC       00437 	DECF  cred4,1,1
0000B0 0E00       00438 	MOVLW 0
0000B2 5BAD       00439 	SUBWFB cred4+1,1,1
0000B4 5BAE       00440 	SUBWFB cred4+2,1,1
                  00441 			;		REL4_ON();
0000B6 D9E6       00442 	RCALL REL4_ON
                  00443 			;		}
                  00444 			;//	else REL4_OFF();
                  00445 			;	if((cred6 > 0) && (vEN6) && pause == 0) 
0000B8 51AF       00446 m005	MOVF  cred6,W,1
0000BA 11B0       00447 	IORWF cred6+1,W,1
0000BC 11B1       00448 	IORWF cred6+2,W,1
0000BE E009       00449 	BZ    m006
0000C0 523A       00450 	MOVF  vEN6,1,0
0000C2 E007       00451 	BZ    m006
0000C4 6654       00452 	TSTFSZ pause,0
0000C6 D005       00453 	BRA   m006
                  00454 			;		{		
                  00455 			;		cred6 --;
0000C8 07AF       00456 	DECF  cred6,1,1
0000CA 0E00       00457 	MOVLW 0
0000CC 5BB0       00458 	SUBWFB cred6+1,1,1
0000CE 5BB1       00459 	SUBWFB cred6+2,1,1
                  00460 			;		REL6_ON();
0000D0 D9E0       00461 	RCALL REL6_ON
                  00462 			;		}
                  00463 			;//	else REL4_OFF();
                  00464 			;	
                  00465 			;	if (pause == 1)	REL_OFF();
0000D2 4C54       00466 m006	DCFSNZ pause,W,0
0000D4 D9E5       00467 	RCALL REL_OFF
                  00468 			;
                  00469 			;	if((cred1 == 0) && (cred2 == 0) && (cred3 == 0) && (cred4 == 0) && (cred6 == 0))	REL_OFF();
0000D6 51A3       00470 	MOVF  cred1,W,1
0000D8 11A4       00471 	IORWF cred1+1,W,1
0000DA 11A5       00472 	IORWF cred1+2,W,1
0000DC E111       00473 	BNZ   m007
0000DE 51A6       00474 	MOVF  cred2,W,1
0000E0 11A7       00475 	IORWF cred2+1,W,1
0000E2 11A8       00476 	IORWF cred2+2,W,1
0000E4 E10D       00477 	BNZ   m007
0000E6 51A9       00478 	MOVF  cred3,W,1
0000E8 11AA       00479 	IORWF cred3+1,W,1
0000EA 11AB       00480 	IORWF cred3+2,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 9

ADDR   CODE       LINE  SOURCE

0000EC E109       00481 	BNZ   m007
0000EE 51AC       00482 	MOVF  cred4,W,1
0000F0 11AD       00483 	IORWF cred4+1,W,1
0000F2 11AE       00484 	IORWF cred4+2,W,1
0000F4 E105       00485 	BNZ   m007
0000F6 51AF       00486 	MOVF  cred6,W,1
0000F8 11B0       00487 	IORWF cred6+1,W,1
0000FA 11B1       00488 	IORWF cred6+2,W,1
0000FC B4D8       00489 	BTFSC 0xFD8,Zero_,0
0000FE D9D0       00490 	RCALL REL_OFF
                  00491 			;	if(cred1 == 0)	rem1 = 0;
000100 51A3       00492 m007	MOVF  cred1,W,1
000102 11A4       00493 	IORWF cred1+1,W,1
000104 11A5       00494 	IORWF cred1+2,W,1
000106 B4D8       00495 	BTFSC 0xFD8,Zero_,0
000108 6A22       00496 	CLRF  rem1,0
                  00497 			;	if(cred2 == 0)	rem2 = 0;
00010A 51A6       00498 	MOVF  cred2,W,1
00010C 11A7       00499 	IORWF cred2+1,W,1
00010E 11A8       00500 	IORWF cred2+2,W,1
000110 B4D8       00501 	BTFSC 0xFD8,Zero_,0
000112 6A23       00502 	CLRF  rem2,0
                  00503 			;	if(cred3 == 0)	rem3 = 0;
000114 51A9       00504 	MOVF  cred3,W,1
000116 11AA       00505 	IORWF cred3+1,W,1
000118 11AB       00506 	IORWF cred3+2,W,1
00011A B4D8       00507 	BTFSC 0xFD8,Zero_,0
00011C 6A24       00508 	CLRF  rem3,0
                  00509 			;	if(cred4 == 0) 	rem4 = 0;
00011E 51AC       00510 	MOVF  cred4,W,1
000120 11AD       00511 	IORWF cred4+1,W,1
000122 11AE       00512 	IORWF cred4+2,W,1
000124 B4D8       00513 	BTFSC 0xFD8,Zero_,0
000126 6A25       00514 	CLRF  rem4,0
                  00515 			;	if(cred6 == 0) 	rem6 = 0;
000128 51AF       00516 	MOVF  cred6,W,1
00012A 11B0       00517 	IORWF cred6+1,W,1
00012C 11B1       00518 	IORWF cred6+2,W,1
00012E B4D8       00519 	BTFSC 0xFD8,Zero_,0
000130 6A26       00520 	CLRF  rem6,0
                  00521 			;	clrwdt();
000132 0004       00522 	CLRWDT
                  00523 			;	TMR0IF = 0;							// clear bit
000134 94F2       00524 	BCF   0xFF2,TMR0IF,0
                  00525 			;	}
                  00526 			;
                  00527 			;/*
                  00528 			;if(TMR1IF)								//!!!!!!!!!
                  00529 			;	{
                  00530 			;	TMR1H = 0x06;						// delay 170ms		
                  00531 			;	TMR1L = 0xF9;
                  00532 			;//	if(vOpto1 && vEN1) comp1 = C1OUT;
                  00533 			;//	else comp1 = 1;
                  00534 			;//	if(vOpto2 && vEN2) comp2 = C2OUT;
                  00535 			;//	else comp2 = 1;
                  00536 			;	TMR1IF = 0;
                  00537 			;	}
                  00538 			;*/
                  00539 			;
                  00540 			;if(RCIF)								//!!!!!!!!!
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 10

ADDR   CODE       LINE  SOURCE

000136 BA9E       00541 m008	BTFSC 0xF9E,RCIF,0
                  00542 			;	{
                  00543 			;	ubyte = RCREG;
000138 CFAE F04E  00544 	MOVFF RCREG,ubyte
                  00545 			;	}
                  00546 			;
                  00547 			;
                  00548 			;low_restore_registers 		// restore W, STATUS and BSR
00013C 5002       00549 	MOVF  tmpWREG,W,0
00013E C001 FFE0  00550 	MOVFF tmpBSR,BSR
000142 C000 FFD8  00551 	MOVFF tmpSTATUS,STATUS
                  00552 			;}
000146 0010       00553 	RETFIE
                  00554 			;
                  00555 			;/*-----------------------------------------*/
                  00556 			;
                  00557 			;void _highPriorityInt(void)
                  00558 			;{
                  00559 _highPriorityInt
                  00560 			;// sysB = PORTB;
                  00561 			;// sysB |= 0x10;
                  00562 			;// sysB &= 0xF7;
                  00563 			;
                  00564 			;INT0IF = 0;
000148 92F2       00565 	BCF   0xFF2,INT0IF,0
                  00566 			;INT1IF = 0;
00014A 90F0       00567 	BCF   0xFF0,INT1IF,0
                  00568 			;INT2IF = 0;
00014C 92F0       00569 	BCF   0xFF0,INT2IF,0
                  00570 			;// RBIF = 0;
                  00571 			;
                  00572 			;// check = 1;
                  00573 			;}
00014E 0012       00574 	RETURN
                  00575 
                  00576   ; FILE spi.h
                  00577 			;uns8 SPI_Send(uns8);							// SPI send routine
                  00578 			;void SPI_setup(void);							// slow speed SPI Init low speed routine
                  00579 			;
                  00580 			;/*----------------------------------------*/
                  00581 			;
                  00582 			;uns8 SPI_Send(uns8 dat)
                  00583 			;{
                  00584 SPI_Send
000150 6E7F       00585 	MOVWF dat,0
                  00586 			;	SSPBUF = dat;									// send character
000152 C07F FFC9  00587 	MOVFF dat,SSPBUF
                  00588 			;	while(!BF);										// wait until sent
000156 A0C7       00589 m009	BTFSS 0xFC7,BF,0
000158 D7FE       00590 	BRA   m009
                  00591 			;	return SSPBUF;									// and return the received character
00015A 50C9       00592 	MOVF  SSPBUF,W,0
00015C 0012       00593 	RETURN
                  00594 			;}
                  00595 			;
                  00596 			;/*----------------------------------------*/
                  00597 			;
                  00598 			;void SPI_setup(void)
                  00599 			;{
                  00600 SPI_setup
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 11

ADDR   CODE       LINE  SOURCE

                  00601 			;	SSPCON1 = 0x02;									// clear register, Master, Fosc/64	(250kbps @ 16MHz)
00015E 0E02       00602 	MOVLW 2
000160 6EC6       00603 	MOVWF SSPCON1,0
                  00604 			;	SMP = 0;										// input is valid in the middle of clock
000162 9EC7       00605 	BCF   0xFC7,SMP,0
                  00606 			;	CKE = 0;										// rising edge is data capture
000164 9CC7       00607 	BCF   0xFC7,CKE,0
                  00608 			;	CKP = 1;										// high value is passive state
000166 88C6       00609 	BSF   0xFC6,CKP,0
                  00610 			;	SSPEN = 1;
000168 8AC6       00611 	BSF   0xFC6,SSPEN,0
                  00612 			;}
00016A 0012       00613 	RETURN
                  00614 
                  00615   ; FILE pc.h
                  00616 			;void PCcmd(const char*);					// send string to PC
                  00617 			;void terminate(void);						// Send CR/LF
                  00618 			;void PC_TX(uns8);							// send char to PC
                  00619 			;
                  00620 			;/*----------------------------------------*/
                  00621 			;
                  00622 			;void PCcmd(const char *cmd)
                  00623 			;{
                  00624 PCcmd
                  00625 			;while(*cmd) PC_TX(*cmd++);
00016C 507F       00626 m010	MOVF  cmd,W,0
00016E EC83 F018  00627 	CALL  _const1
000172 0A00       00628 	XORLW 0
000174 E006       00629 	BZ    m011
000176 507F       00630 	MOVF  cmd,W,0
000178 EC83 F018  00631 	CALL  _const1
00017C D807       00632 	RCALL PC_TX
00017E 2A7F       00633 	INCF  cmd,1,0
000180 D7F5       00634 	BRA   m010
                  00635 			;}
000182 0012       00636 m011	RETURN
                  00637 			;
                  00638 			;/*-----------------------------------------*/
                  00639 			;void terminate(void)						// Send CR/LF
                  00640 			;{
                  00641 terminate
                  00642 			;PC_TX(CR);
000184 0E0D       00643 	MOVLW 13
000186 D802       00644 	RCALL PC_TX
                  00645 			;PC_TX(LF);
000188 0E0A       00646 	MOVLW 10
00018A D000       00647 	BRA   PC_TX
                  00648 			;}
                  00649 			;
                  00650 			;/*-----------------------------------------*/
                  00651 			;
                  00652 			;void PC_TX(uns8 smb)
                  00653 			;{
                  00654 PC_TX
00018C 6E7F       00655 	MOVWF smb,0
                  00656 			;TXREG = smb;								// send symbol
00018E C07F FFAD  00657 	MOVFF smb,TXREG
                  00658 			;while(!TRMT);
000192 A2AC       00659 m012	BTFSS 0xFAC,TRMT,0
000194 D7FE       00660 	BRA   m012
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 12

ADDR   CODE       LINE  SOURCE

                  00661 			;}
000196 0012       00662 	RETURN
                  00663 
                  00664   ; FILE math16.h
                  00665 			;// SIZE
                  00666 			;
                  00667 			;#pragma library 1
                  00668 			;/*
                  00669 			;uns16 operator* _mult8x8( uns8 arg1, uns8 arg2);
                  00670 			;uns16 operator* _multU16x8( uns16 arg1, uns8 arg2);
                  00671 			;uns16 operator* _mult16x16( uns16 arg1, uns16 arg2);
                  00672 			;uns16 operator/ _divU16_8( uns16 arg1, uns8 arg2);
                  00673 			;uns16 operator/ _divU16_16( uns16 arg1, uns16 arg2);
                  00674 			;int16 operator/ _divS16_8( int16 arg1, int8 arg2);
                  00675 			;int16 operator/ _divS16_16( int16 arg1, int16 arg2);
                  00676 			;uns8 operator% _remU16_8( uns16 arg1, uns8 arg2);
                  00677 			;uns16 operator% _remU16_16( uns16 arg1, uns16 arg2);
                  00678 			;int8 operator% _remS16_8( int16 arg1, int8 arg2);
                  00679 			;int16 operator% _remS16_16( int16 arg1, int16 arg2);
                  00680 			;*/
                  00681 			;
                  00682 			;#if __CoreSet__ < 1600
                  00683 			; #define genAdd(r,a) W=a; btsc(Carry); W=incsz(a); r+=W;
                  00684 			; #define genSub(r,a) W=a; btss(Carry); W=incsz(a); r-=W;
                  00685 			; #define genAddW(r,a) W=a; btsc(Carry); W=incsz(a); W=r+W;
                  00686 			; #define genSubW(r,a) W=a; btss(Carry); W=incsz(a); W=r-W;
                  00687 			;#else
                  00688 			; #define genAdd(r,a) W=a; r=addWFC(r);
                  00689 			; #define genSub(r,a) W=a; r=subWFB(r);
                  00690 			; #define genAddW(r,a) W=a; W=addWFC(r);
                  00691 			; #define genSubW(r,a) W=a; W=subWFB(r);
                  00692 			;#endif
                  00693 			;
                  00694 			;#if __CoreSet__ == 1700 || __CoreSet__ == 1800
                  00695 			; #define hw_mult8x8(a,b)  { W = a; multiply(b); }
                  00696 			; #define loRES PRODL
                  00697 			; #define hiRES PRODH
                  00698 			;#endif
                  00699 			;
                  00700 			;#if __CoreSet__ == 2000
                  00701 			; #define hw_mult8x8(a,b)  { W = a; multiply(b); }
                  00702 			; #define loRES W
                  00703 			; #define hiRES MULH
                  00704 			;#endif
                  00705 			;
                  00706 			;
                  00707 			;
                  00708 			;#ifdef hw_mult8x8
                  00709 			;
                  00710 			;inline int16 operator*( int8 arg1, int8 arg2);
                  00711 			;inline uns16 operator*( uns8 arg1, uns8 arg2);
                  00712 			;inline int16 operator*( int8 arg1, int16 arg2);
                  00713 			;inline uns16 operator*( uns8 arg1, uns16 arg2);
                  00714 			;inline int16 operator*( int16 arg1, int8 arg2);
                  00715 			;inline uns16 operator*( uns16 arg1, uns8 arg2);
                  00716 			;inline int16 operator*( int16 arg1, int16 arg2);
                  00717 			;inline uns16 operator*( uns16 arg1, uns16 arg2);
                  00718 			;
                  00719 			;#undef hw_mult8x8
                  00720 			;#undef loRES
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 13

ADDR   CODE       LINE  SOURCE

                  00721 			;#undef hiRES
                  00722 			;
                  00723 			;#else
                  00724 			;
                  00725 			;int8 operator*( int8 arg1, int8 arg2)  @
                  00726 			;
                  00727 			;uns16 operator* _mult8x8( uns8 arg1, uns8 arg2)
                  00728 			;{
                  00729 			;    uns16 rval;
                  00730 			;    char counter = sizeof(arg2)*8;
                  00731 			;    rval.high8 = 0;
                  00732 			;    W = arg1;
                  00733 			;    do  {
                  00734 			;        arg2 = rr( arg2);
                  00735 			;        if (Carry)
                  00736 			;            rval.high8 += W;
                  00737 			;        rval = rr( rval);
                  00738 			;        counter = decsz(counter);
                  00739 			;    } while (1);
                  00740 			;    return rval;
                  00741 			;}
                  00742 			;
                  00743 			;
                  00744 			;uns16 operator*( uns8 arg1, uns16 arg2) exchangeArgs @
                  00745 			;
                  00746 			;uns16 operator* _multU16x8( uns16 arg1, uns8 arg2)
                  00747 			;{
                  00748 			;    uns16 rval;
                  00749 			;    uns8 rvalH = 0;
                  00750 			;    char counter = sizeof(arg1)*8;
                  00751 			;    W = arg2;
                  00752 			;    do  {
                  00753 			;        arg1 = rr( arg1);
                  00754 			;        if (Carry)
                  00755 			;            rvalH += W;
                  00756 			;        rvalH = rr(rvalH);
                  00757 			;        rval = rr(rval);
                  00758 			;        counter = decsz(counter);
                  00759 			;    } while (1);
                  00760 			;    return rval;
                  00761 			;}
                  00762 			;
                  00763 			;
                  00764 			;int16 operator*( int16 arg1, int16 arg2) @
                  00765 			;
                  00766 			;uns16 operator* _mult16x16( uns16 arg1, uns16 arg2)
                  00767 			;{
                  00768 			;    uns16 rval;
                  00769 			;    char counter = sizeof(arg1)*8;
                  00770 			;    do  {
                  00771 			;        Carry = 0;
                  00772 			;        rval = rl( rval);
                  00773 			;        arg1 = rl( arg1);
                  00774 			;        if (Carry)
                  00775 			;            rval += arg2;
                  00776 			;        counter = decsz(counter);
                  00777 			;    } while (1);
                  00778 			;    return rval;
                  00779 			;}
                  00780 			;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 14

ADDR   CODE       LINE  SOURCE

                  00781 			;#endif
                  00782 			;
                  00783 			;
                  00784 			;uns16 operator/ _divU16_8( uns16 arg1, uns8 arg2)
                  00785 			;{
                  00786 _divU16_8
000198 6E1E       00787 	MOVWF arg2,0
                  00788 			;    uns8 rm = 0;
00019A 6A1F       00789 	CLRF  rm,0
                  00790 			;    char counter = sizeof(arg1)*8+1;
00019C 0E11       00791 	MOVLW 17
00019E 6E20       00792 	MOVWF counter,0
                  00793 			;    goto ENTRY;
0001A0 D008       00794 	BRA   m014
                  00795 			;    do  {
                  00796 			;        rm = rl( rm);
0001A2 361F       00797 m013	RLCF  rm,1,0
                  00798 			;        uns8 tmp = rl( tmp);
0001A4 3621       00799 	RLCF  tmp,1,0
                  00800 			;        W = rm - arg2;
0001A6 501E       00801 	MOVF  arg2,W,0
0001A8 5C1F       00802 	SUBWF rm,W,0
                  00803 			;        if (tmp&1)
0001AA B021       00804 	BTFSC tmp,0,0
                  00805 			;            Carry = 1;
0001AC 80D8       00806 	BSF   0xFD8,Carry,0
                  00807 			;        if (Carry)
0001AE B0D8       00808 	BTFSC 0xFD8,Carry,0
                  00809 			;            rm = W;
0001B0 6E1F       00810 	MOVWF rm,0
                  00811 			;       ENTRY:
                  00812 			;        arg1 = rl( arg1);
0001B2 361C       00813 m014	RLCF  arg1,1,0
0001B4 361D       00814 	RLCF  arg1+1,1,0
                  00815 			;        counter = decsz(counter);
0001B6 2E20       00816 	DECFSZ counter,1,0
                  00817 			;    } while (1);
0001B8 D7F4       00818 	BRA   m013
                  00819 			;    return arg1;
0001BA 501C       00820 	MOVF  arg1,W,0
0001BC 0012       00821 	RETURN
                  00822 			;}
                  00823 			;
                  00824 			;
                  00825 			;uns16 operator/ _divU16_16( uns16 arg1, uns16 arg2)
                  00826 			;{
                  00827 _divU16_16
                  00828 			;    uns16 rm = 0;
                  00829 			;    char counter = sizeof(arg1)*8+1;
                  00830 			;    goto ENTRY;
                  00831 			;    do  {
                  00832 			;        rm = rl( rm);
                  00833 			;        W = rm.low8 - arg2.low8;
                  00834 			;        genSubW( rm.high8, arg2.high8);
                  00835 			;        if (!Carry)
                  00836 			;            goto ENTRY;
                  00837 			;        rm.high8 = W;
                  00838 			;        rm.low8 -= arg2.low8;
                  00839 			;        Carry = 1;
                  00840 			;       ENTRY:
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 15

ADDR   CODE       LINE  SOURCE

                  00841 			;        arg1 = rl( arg1);
                  00842 			;        counter = decsz(counter);
                  00843 			;    } while (1);
                  00844 			;    return arg1;
                  00845 			;}
                  00846 			;
                  00847 			;
                  00848 			;int8  operator/ (int8 arg1, int8 arg2) @
                  00849 			;
                  00850 			;int16 operator/ _divS16_8( int16 arg1, int8 arg2)
                  00851 			;{
                  00852 _divS16_8
                  00853 			;    uns8 rm = 0;
                  00854 			;    char counter = 16+1;
                  00855 			;    char sign = arg1.high8 ^ arg2.high8;
                  00856 			;    if (arg1 < 0)  {
                  00857 			;       INVERT:
                  00858 			;        arg1 = -arg1;
                  00859 			;        if (!counter)
                  00860 			;            return arg1;
                  00861 			;    }
                  00862 			;    if (arg2 < 0)
                  00863 			;        arg2 = -arg2;
                  00864 			;    goto ENTRY;
                  00865 			;    do  {
                  00866 			;        rm = rl( rm);
                  00867 			;        W = rm - arg2;
                  00868 			;        if (Carry)
                  00869 			;            rm = W;
                  00870 			;       ENTRY:
                  00871 			;        arg1 = rl( arg1);
                  00872 			;        counter = decsz(counter);
                  00873 			;    } while (1);
                  00874 			;    if (sign & 0x80)
                  00875 			;        goto INVERT;
                  00876 			;    return arg1;
                  00877 			;}
                  00878 			;
                  00879 			;
                  00880 			;int16 operator/ _divS16_16( int16 arg1, int16 arg2)
                  00881 			;{
                  00882 _divS16_16
                  00883 			;    uns16 rm = 0;
                  00884 			;    char counter = sizeof(arg1)*8+1;
                  00885 			;    char sign = arg1.high8 ^ arg2.high8;
                  00886 			;    if (arg1 < 0)  {
                  00887 			;       INVERT:
                  00888 			;        arg1 = -arg1;
                  00889 			;        if (!counter)
                  00890 			;            return arg1;
                  00891 			;    }
                  00892 			;    if (arg2 < 0)
                  00893 			;        arg2 = -arg2;
                  00894 			;    goto ENTRY;
                  00895 			;    do  {
                  00896 			;        rm = rl( rm);
                  00897 			;        W = rm.low8 - arg2.low8;
                  00898 			;        genSubW( rm.high8, arg2.high8);
                  00899 			;        if (!Carry)
                  00900 			;            goto ENTRY;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 16

ADDR   CODE       LINE  SOURCE

                  00901 			;        rm.high8 = W;
                  00902 			;        rm.low8 -= arg2.low8;
                  00903 			;        Carry = 1;
                  00904 			;       ENTRY:
                  00905 			;        arg1 = rl( arg1);
                  00906 			;        counter = decsz(counter);
                  00907 			;    } while (1);
                  00908 			;    if (sign & 0x80)
                  00909 			;        goto INVERT;
                  00910 			;    return arg1;
                  00911 			;}
                  00912 			;
                  00913 			;
                  00914 			;uns8 operator% _remU16_8( uns16 arg1, uns8 arg2)
                  00915 			;{
                  00916 _remU16_8
0001BE 6E1E       00917 	MOVWF arg2_5,0
                  00918 			;    uns8 rm = 0;
0001C0 6A1F       00919 	CLRF  rm_5,0
                  00920 			;    char counter = sizeof(arg1)*8;
0001C2 0E10       00921 	MOVLW 16
0001C4 6E20       00922 	MOVWF counter_5,0
                  00923 			;    do  {
                  00924 			;        arg1 = rl( arg1);
0001C6 361C       00925 m015	RLCF  arg1_5,1,0
0001C8 361D       00926 	RLCF  arg1_5+1,1,0
                  00927 			;        rm = rl( rm);
0001CA 361F       00928 	RLCF  rm_5,1,0
                  00929 			;        uns8 tmp = rl( tmp);
0001CC 3621       00930 	RLCF  tmp_2,1,0
                  00931 			;        W = rm - arg2;
0001CE 501E       00932 	MOVF  arg2_5,W,0
0001D0 5C1F       00933 	SUBWF rm_5,W,0
                  00934 			;        if (tmp&1)
0001D2 B021       00935 	BTFSC tmp_2,0,0
                  00936 			;            Carry = 1;
0001D4 80D8       00937 	BSF   0xFD8,Carry,0
                  00938 			;        if (Carry)
0001D6 B0D8       00939 	BTFSC 0xFD8,Carry,0
                  00940 			;            rm = W;
0001D8 6E1F       00941 	MOVWF rm_5,0
                  00942 			;        counter = decsz(counter);
0001DA 2E20       00943 	DECFSZ counter_5,1,0
                  00944 			;    } while (1);
0001DC D7F4       00945 	BRA   m015
                  00946 			;    return rm;
0001DE 501F       00947 	MOVF  rm_5,W,0
0001E0 0012       00948 	RETURN
                  00949 			;}
                  00950 			;
                  00951 			;
                  00952 			;uns16 operator% _remU16_16( uns16 arg1, uns16 arg2)
                  00953 			;{
                  00954 _remU16_16
                  00955 			;    uns16 rm = 0;
                  00956 			;    char counter = sizeof(arg1)*8;
                  00957 			;    do  {
                  00958 			;        arg1 = rl( arg1);
                  00959 			;        rm = rl( rm);
                  00960 			;        W = rm.low8 - arg2.low8;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 17

ADDR   CODE       LINE  SOURCE

                  00961 			;        genSubW( rm.high8, arg2.high8);
                  00962 			;        if (!Carry)
                  00963 			;            goto NOSUB;
                  00964 			;        rm.high8 = W;
                  00965 			;        rm.low8 -= arg2.low8;
                  00966 			;      NOSUB:
                  00967 			;        counter = decsz(counter);
                  00968 			;    } while (1);
                  00969 			;    return rm;
                  00970 			;}
                  00971 			;
                  00972 			;
                  00973 			;int8 operator% (int8 arg1, int8 arg2) @
                  00974 			;
                  00975 			;int8 operator% _remS16_8( int16 arg1, int8 arg2)
                  00976 			;{
                  00977 _remS16_8
                  00978 			;    int8 rm = 0;
                  00979 			;    char counter = 16;
                  00980 			;    char sign = arg1.high8;
                  00981 			;    if (arg1 < 0)
                  00982 			;        arg1 = -arg1;
                  00983 			;    if (arg2 < 0)
                  00984 			;        arg2 = -arg2;
                  00985 			;    do  {
                  00986 			;        arg1 = rl( arg1);
                  00987 			;        rm = rl( rm);
                  00988 			;        W = rm - arg2;
                  00989 			;        if (Carry)
                  00990 			;            rm = W;
                  00991 			;        counter = decsz(counter);
                  00992 			;    } while (1);
                  00993 			;    if (sign & 0x80)
                  00994 			;        rm = -rm;
                  00995 			;    return rm;
                  00996 			;}
                  00997 			;
                  00998 			;
                  00999 			;int16 operator% _remS16_16( int16 arg1, int16 arg2)
                  01000 			;{
                  01001 _remS16_16
                  01002 			;    int16 rm = 0;
                  01003 			;    char counter = sizeof(arg1)*8;
                  01004 			;    char sign = arg1.high8;
                  01005 			;    if (arg1 < 0)
                  01006 			;        arg1 = -arg1;
                  01007 			;    if (arg2 < 0)
                  01008 			;        arg2 = -arg2;
                  01009 			;    do  {
                  01010 			;        arg1 = rl( arg1);
                  01011 			;        rm = rl( rm);
                  01012 			;        W = rm.low8 - arg2.low8;
                  01013 			;        genSubW( rm.high8, arg2.high8);
                  01014 			;        if (!Carry)
                  01015 			;            goto NOSUB;
                  01016 			;        rm.high8 = W;
                  01017 			;        rm.low8 -= arg2.low8;
                  01018 			;      NOSUB:
                  01019 			;        counter = decsz(counter);
                  01020 			;    } while (1);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 18

ADDR   CODE       LINE  SOURCE

                  01021 			;    if (sign & 0x80)
                  01022 			;        rm = -rm;
                  01023 			;    return rm;
                  01024 
                  01025   ; FILE functions.h
                  01026 			;/*----------- FUNCTIONS ---------------*/
                  01027 			;
                  01028 			;void SYSTEM_setup(void);	// system ini routine
                  01029 			;void ini(void);				// Load ini values
                  01030 			;void ADC(char);				// ADC config routine
                  01031 			;void delay(char);			// delay 1ms
                  01032 			;void delaySec(char);		// delay 1s
                  01033 			;void uart(void);			// USART ini routine
                  01034 			;void conv(uns24);			// convert sec to hh/mm/ss
                  01035 			;void start_int(void);		// start interrupts
                  01036 			;void ESCbut(void);			// press ESC
                  01037 			;char hex2dec(char hex);		// convert hsx to dec
                  01038 			;void scan(void);
                  01039 			;void REL1_ON(void);		//puska nqkolko triaka na 1 buton void REL1_ON(void);
                  01040 			;void REL2_ON(void);
                  01041 			;void REL3_ON(void);
                  01042 			;void REL4_ON(void);
                  01043 			;void REL6_ON(void);
                  01044 			;void REL_OFF(void);
                  01045 			;
                  01046 			;/*----------------------------------------*/
                  01047 			;
                  01048 			;void SYSTEM_setup(void)
                  01049 			;{
                  01050 SYSTEM_setup
                  01051 			;PORTA = 0;				// Initialization port A
0001E2 6A80       01052 	CLRF  PORTA,0
                  01053 			;PORTB = 0;				// Initialization port B
0001E4 6A81       01054 	CLRF  PORTB,0
                  01055 			;PORTC = 0;				// Initialization port C
0001E6 6A82       01056 	CLRF  PORTC,0
                  01057 			;PORTD = 0;				// Initialization port D
0001E8 6A83       01058 	CLRF  PORTD,0
                  01059 			;PORTE = 0;				// Initialization port E
0001EA 6A84       01060 	CLRF  PORTE,0
                  01061 			;
                  01062 			;TRISA = 0b11000011;		// configure I/O port A 1 - Input
0001EC 0EC3       01063 	MOVLW 195
0001EE 6E92       01064 	MOVWF TRISA,0
                  01065 			;TRISB = 0b11110111;		// configure I/O port B	0 - Output
0001F0 0EF7       01066 	MOVLW 247
0001F2 6E93       01067 	MOVWF TRISB,0
                  01068 			;TRISC = 0b00101000;		// configure I/O port C
0001F4 0E28       01069 	MOVLW 40
0001F6 6E94       01070 	MOVWF TRISC,0
                  01071 			;TRISD = 0b11111110;		// configure I/O port D
0001F8 0EFE       01072 	MOVLW 254
0001FA 6E95       01073 	MOVWF TRISD,0
                  01074 			;TRISE = 0b00000100;		// configure I/O port E
0001FC 0E04       01075 	MOVLW 4
0001FE 6E96       01076 	MOVWF TRISE,0
                  01077 			;
                  01078 			;
                  01079 			;ADCON1 = 0x0F;			// all digital
000200 0E0F       01080 	MOVLW 15
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 19

ADDR   CODE       LINE  SOURCE

000202 6EC1       01081 	MOVWF ADCON1,0
                  01082 			;ADCON0 = 0b00000000;	// turn off ADC module
000204 6AC2       01083 	CLRF  ADCON0,0
                  01084 			;CMCON  = 0b00000111;	// comparator off
000206 0E07       01085 	MOVLW 7
000208 6EB4       01086 	MOVWF CMCON,0
                  01087 			;
                  01088 			;T0CON = 0b10000101;		// enable TMR0; 1:64 prescaler
00020A 0E85       01089 	MOVLW 133
00020C 6ED5       01090 	MOVWF T0CON,0
                  01091 			;T1CON = 0b00110001;		// enable TMR1; 1:8  prescaler 
00020E 0E31       01092 	MOVLW 49
000210 6ECD       01093 	MOVWF T1CON,0
                  01094 			;T2CON = 0b00000111;		// enable TMR2; 1:16 prescaler
000212 0E07       01095 	MOVLW 7
000214 6ECA       01096 	MOVWF T2CON,0
                  01097 			;T3CON = 0b00110001;		// enable TMR3; 1:8  prescaler 
000216 0E31       01098 	MOVLW 49
000218 6EB1       01099 	MOVWF T3CON,0
                  01100 			;
                  01101 			;INTCON  = 0;			// disable all unmasked and peripheral interrupts
00021A 6AF2       01102 	CLRF  INTCON,0
                  01103 			;INTCON2 = 0xC0;			// PORTB pull up disabled; 
00021C 0EC0       01104 	MOVLW 192
00021E 6EF1       01105 	MOVWF INTCON2,0
                  01106 			;INTCON3 = 0;
000220 6AF0       01107 	CLRF  INTCON3,0
                  01108 			;
                  01109 			;PIE1 = 0;				// disable peripheral interrupts
000222 6A9D       01110 	CLRF  PIE1,0
                  01111 			;PIE2 = 0;			
000224 6AA0       01112 	CLRF  PIE2,0
                  01113 			;PIR1 = 0;
000226 6A9E       01114 	CLRF  PIR1,0
                  01115 			;PIR2 = 0;
000228 6AA1       01116 	CLRF  PIR2,0
                  01117 			;IPR1 = 0;				
00022A 6A9F       01118 	CLRF  IPR1,0
                  01119 			;IPR2 = 0;	
00022C 6AA2       01120 	CLRF  IPR2,0
                  01121 			;IPEN = 1;				// enable interrupt priority
00022E 8ED0       01122 	BSF   0xFD0,IPEN,0
                  01123 			;GIEL = 1;				// enable low priority interrupts
000230 8CF2       01124 	BSF   0xFF2,GIEL,0
                  01125 			;GIEH = 1;				// enable high priority interrupts
000232 8EF2       01126 	BSF   0xFF2,GIEH,0
                  01127 			;STATUS = 0;
000234 6AD8       01128 	CLRF  STATUS,0
                  01129 			;}
000236 0012       01130 	RETURN
                  01131 			;
                  01132 			;/*----------------------------------------*/
                  01133 			;
                  01134 			;void ini(void)
                  01135 			;{
                  01136 ini
                  01137 			;//BLCTRL = 1;
                  01138 			;SECcount = 0;
000238 6B96       01139 	CLRF  SECcount,1
00023A 6B97       01140 	CLRF  SECcount+1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 20

ADDR   CODE       LINE  SOURCE

                  01141 			;credit = 0;
00023C 6B9A       01142 	CLRF  credit,1
00023E 6B9B       01143 	CLRF  credit+1,1
                  01144 			;credit_tmp = 0;
000240 6A5C       01145 	CLRF  credit_tmp,0
000242 6A5D       01146 	CLRF  credit_tmp+1,0
000244 6A5E       01147 	CLRF  credit_tmp+2,0
                  01148 			;if(vINH) INHALL = 1;
000246 5234       01149 	MOVF  vINH,1,0
000248 E002       01150 	BZ    m016
00024A 8681       01151 	BSF   0xF81,INHALL,0
                  01152 			;else INHALL = 0;
00024C D001       01153 	BRA   m017
00024E 9681       01154 m016	BCF   0xF81,INHALL,0
                  01155 			;OUT_PC_count = 0;
000250 6A5F       01156 m017	CLRF  OUT_PC_count,0
                  01157 			;free_flag = 0;
000252 6A62       01158 	CLRF  free_flag,0
                  01159 			;}
000254 0012       01160 	RETURN
                  01161 			;
                  01162 			;/*----------------------------------------*/
                  01163 			;
                  01164 			;void ADC(char ch)
                  01165 			;{
                  01166 ADC
000256 6E7F       01167 	MOVWF ch,0
                  01168 			;ADRESL = 0;					// resetting ADRES register
000258 6AC3       01169 	CLRF  ADRESL,0
                  01170 			;ADRESH = 0;
00025A 6AC4       01171 	CLRF  ADRESH,0
                  01172 			;if(ch) ADCON0 = 0b00000101;
00025C 527F       01173 	MOVF  ch,1,0
00025E E003       01174 	BZ    m018
000260 0E05       01175 	MOVLW 5
000262 6EC2       01176 	MOVWF ADCON0,0
                  01177 			;else ADCON0 = 0b00000001;
000264 D002       01178 	BRA   m019
000266 0E01       01179 m018	MOVLW 1
000268 6EC2       01180 	MOVWF ADCON0,0
                  01181 			;GO = 1;
00026A 82C2       01182 m019	BSF   0xFC2,GO,0
                  01183 			;while(GO);
00026C B2C2       01184 m020	BTFSC 0xFC2,GO,0
00026E D7FE       01185 	BRA   m020
                  01186 			;ADC_value.high8 = ADRESH;
000270 CFC4 F099  01187 	MOVFF ADRESH,ADC_value+1
                  01188 			;ADC_value.low8  = ADRESL;
000274 CFC3 F098  01189 	MOVFF ADRESL,ADC_value
                  01190 			;}
000278 0012       01191 	RETURN
                  01192 			;
                  01193 			;/*-----------------------------------------*/
                  01194 			;
                  01195 			;void delay(char count)			// 1ms at 12MHz
                  01196 			;{
                  01197 delay
00027A 6E1E       01198 	MOVWF count,0
                  01199 			;do  
                  01200 			;   {
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 21

ADDR   CODE       LINE  SOURCE

                  01201 			;    TMR2 = 0;					// used TMR2
00027C 6ACC       01202 m021	CLRF  TMR2,0
                  01203 			;    while(TMR2 < 187);
00027E 0EBA       01204 m022	MOVLW 186
000280 64CC       01205 	CPFSGT TMR2,0
000282 D7FD       01206 	BRA   m022
                  01207 			;   } 
                  01208 			;while(--count>0);
000284 2E1E       01209 	DECFSZ count,1,0
000286 D7FA       01210 	BRA   m021
                  01211 			;}
000288 0012       01212 	RETURN
                  01213 			;
                  01214 			;/*-----------------------------------------*/
                  01215 			;
                  01216 			;void delaySec(char second)			// 1s at 12MHz
                  01217 			;{
                  01218 delaySec
00028A 6E7F       01219 	MOVWF second,0
                  01220 			;do  
                  01221 			;   {
                  01222 			;	delay(250);
00028C 0EFA       01223 m023	MOVLW 250
00028E DFF5       01224 	RCALL delay
                  01225 			;	delay(250);
000290 0EFA       01226 	MOVLW 250
000292 DFF3       01227 	RCALL delay
                  01228 			;	delay(250);
000294 0EFA       01229 	MOVLW 250
000296 DFF1       01230 	RCALL delay
                  01231 			;	delay(250);
000298 0EFA       01232 	MOVLW 250
00029A DFEF       01233 	RCALL delay
                  01234 			;   } 
                  01235 			;while(--second>0);
00029C 2E7F       01236 	DECFSZ second,1,0
00029E D7F6       01237 	BRA   m023
                  01238 			;}
0002A0 0012       01239 	RETURN
                  01240 			;
                  01241 			;/*-----------------------------------------*/
                  01242 			;
                  01243 			;/*				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                  01244 			;void uart(void)
                  01245 			;{
                  01246 			; SPBRG = 38;			// 19200bps @ 12MHz
                  01247 			; BRGH = 1;				// high speed clock
                  01248 			; SYNC = 0;				// asynchronous serial i/o
                  01249 			; SPEN = 1;				// enable serial port
                  01250 			; TX9 = 0;				// transmit 8 data bits
                  01251 			; RX9 = 0;				// receive 8 data bits
                  01252 			; RCIE = 1;				// enable USART receive interrupt
                  01253 			; CREN = 1;				// enable serial receive
                  01254 			; TXEN = 1;				// enable serial transmit
                  01255 			;}
                  01256 			;
                  01257 			;*/
                  01258 			;/*-----------------------------------------*/
                  01259 			;
                  01260 			;void conv(uns24 pr)
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 22

ADDR   CODE       LINE  SOURCE

                  01261 			;{
                  01262 conv
                  01263 			;uns24 pr_n;
                  01264 			;
                  01265 			;hour = pr / 3600;
0002A2 5012       01266 	MOVF  pr,W,0
0002A4 6E19       01267 	MOVWF C2tmp,0
0002A6 5013       01268 	MOVF  pr+1,W,0
0002A8 6E1A       01269 	MOVWF C2tmp+1,0
0002AA 5014       01270 	MOVF  pr+2,W,0
0002AC 6E1B       01271 	MOVWF C2tmp+2,0
0002AE 6A1C       01272 	CLRF  C3rem,0
0002B0 6A1D       01273 	CLRF  C3rem+1,0
0002B2 0E18       01274 	MOVLW 24
0002B4 6E18       01275 	MOVWF C1cnt,0
0002B6 3619       01276 m024	RLCF  C2tmp,1,0
0002B8 361A       01277 	RLCF  C2tmp+1,1,0
0002BA 361B       01278 	RLCF  C2tmp+2,1,0
0002BC 361C       01279 	RLCF  C3rem,1,0
0002BE 361D       01280 	RLCF  C3rem+1,1,0
0002C0 E205       01281 	BC    m025
0002C2 0E10       01282 	MOVLW 16
0002C4 5C1C       01283 	SUBWF C3rem,W,0
0002C6 0E0E       01284 	MOVLW 14
0002C8 581D       01285 	SUBWFB C3rem+1,W,0
0002CA E305       01286 	BNC   m026
0002CC 0E10       01287 m025	MOVLW 16
0002CE 5E1C       01288 	SUBWF C3rem,1,0
0002D0 0E0E       01289 	MOVLW 14
0002D2 5A1D       01290 	SUBWFB C3rem+1,1,0
0002D4 80D8       01291 	BSF   0xFD8,Carry,0
0002D6 362E       01292 m026	RLCF  hour,1,0
0002D8 2E18       01293 	DECFSZ C1cnt,1,0
0002DA D7ED       01294 	BRA   m024
                  01295 			;temp = (uns16)hour * 60;
0002DC 6B9E       01296 	CLRF  temp+2,1
0002DE 502E       01297 	MOVF  hour,W,0
0002E0 0D3C       01298 	MULLW 60
0002E2 CFF3 F09C  01299 	MOVFF PRODL,temp
0002E6 CFF4 F09D  01300 	MOVFF PRODH,temp+1
                  01301 			;pr_n = (uns24)temp * 60;
0002EA 0E3C       01302 	MOVLW 60
0002EC 039E       01303 	MULWF temp+2,1
0002EE CFF3 F017  01304 	MOVFF PRODL,pr_n+2
0002F2 039C       01305 	MULWF temp,1
0002F4 CFF3 F015  01306 	MOVFF PRODL,pr_n
0002F8 CFF4 F016  01307 	MOVFF PRODH,pr_n+1
0002FC 039D       01308 	MULWF temp+1,1
0002FE 50F3       01309 	MOVF  PRODL,W,0
000300 2616       01310 	ADDWF pr_n+1,1,0
000302 50F4       01311 	MOVF  PRODH,W,0
000304 2217       01312 	ADDWFC pr_n+2,1,0
                  01313 			;temp = pr - pr_n;
000306 5015       01314 	MOVF  pr_n,W,0
000308 5C12       01315 	SUBWF pr,W,0
00030A 6F9C       01316 	MOVWF temp,1
00030C 5016       01317 	MOVF  pr_n+1,W,0
00030E 5813       01318 	SUBWFB pr+1,W,0
000310 6F9D       01319 	MOVWF temp+1,1
000312 5017       01320 	MOVF  pr_n+2,W,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 23

ADDR   CODE       LINE  SOURCE

000314 5814       01321 	SUBWFB pr+2,W,0
000316 6F9E       01322 	MOVWF temp+2,1
                  01323 			;min  = temp / 60;
000318 519C       01324 	MOVF  temp,W,1
00031A 6E19       01325 	MOVWF C9tmp,0
00031C 519D       01326 	MOVF  temp+1,W,1
00031E 6E1A       01327 	MOVWF C9tmp+1,0
000320 519E       01328 	MOVF  temp+2,W,1
000322 6E1B       01329 	MOVWF C9tmp+2,0
000324 6A1C       01330 	CLRF  C10rem,0
000326 0E18       01331 	MOVLW 24
000328 6E18       01332 	MOVWF C8cnt,0
00032A 3619       01333 m027	RLCF  C9tmp,1,0
00032C 361A       01334 	RLCF  C9tmp+1,1,0
00032E 361B       01335 	RLCF  C9tmp+2,1,0
000330 361C       01336 	RLCF  C10rem,1,0
000332 E203       01337 	BC    m028
000334 0E3C       01338 	MOVLW 60
000336 5C1C       01339 	SUBWF C10rem,W,0
000338 E303       01340 	BNC   m029
00033A 0E3C       01341 m028	MOVLW 60
00033C 5E1C       01342 	SUBWF C10rem,1,0
00033E 80D8       01343 	BSF   0xFD8,Carry,0
000340 362F       01344 m029	RLCF  min,1,0
000342 2E18       01345 	DECFSZ C8cnt,1,0
000344 D7F2       01346 	BRA   m027
                  01347 			;sec = temp % 60;
000346 519C       01348 	MOVF  temp,W,1
000348 6E19       01349 	MOVWF C12tmp,0
00034A 519D       01350 	MOVF  temp+1,W,1
00034C 6E1A       01351 	MOVWF C12tmp+1,0
00034E 519E       01352 	MOVF  temp+2,W,1
000350 6E1B       01353 	MOVWF C12tmp+2,0
000352 6A30       01354 	CLRF  sec,0
000354 0E18       01355 	MOVLW 24
000356 6E18       01356 	MOVWF C11cnt,0
000358 3619       01357 m030	RLCF  C12tmp,1,0
00035A 361A       01358 	RLCF  C12tmp+1,1,0
00035C 361B       01359 	RLCF  C12tmp+2,1,0
00035E 3630       01360 	RLCF  sec,1,0
000360 E203       01361 	BC    m031
000362 0E3C       01362 	MOVLW 60
000364 5C30       01363 	SUBWF sec,W,0
000366 E302       01364 	BNC   m032
000368 0E3C       01365 m031	MOVLW 60
00036A 5E30       01366 	SUBWF sec,1,0
00036C 2E18       01367 m032	DECFSZ C11cnt,1,0
00036E D7F4       01368 	BRA   m030
                  01369 			;}
000370 0012       01370 	RETURN
                  01371 			;
                  01372 			;/*-----------------------------------------*/
                  01373 			;
                  01374 			;void start_int(void)
                  01375 			;{
                  01376 start_int
                  01377 			;// INTEDG0 = 0;
                  01378 			;// INTEDG1 = 0;
                  01379 			;// INTEDG2 = 0;
                  01380 			;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 24

ADDR   CODE       LINE  SOURCE

                  01381 			;TMR0IP = 0;
000372 94F1       01382 	BCF   0xFF1,TMR0IP,0
                  01383 			;TMR0IF = 0;
000374 94F2       01384 	BCF   0xFF2,TMR0IF,0
                  01385 			;TMR0IE = 1;
000376 8AF2       01386 	BSF   0xFF2,TMR0IE,0
                  01387 			;
                  01388 			;TMR1IP = 0;	
000378 909F       01389 	BCF   0xF9F,TMR1IP,0
                  01390 			;TMR1IF = 0;	
00037A 909E       01391 	BCF   0xF9E,TMR1IF,0
                  01392 			;TMR1IE = 1;	
00037C 809D       01393 	BSF   0xF9D,TMR1IE,0
                  01394 			;
                  01395 			;// INT0IF = 1;
                  01396 			;// INT0IE = 1;
                  01397 			;
                  01398 			;// INT1IP = 1;
                  01399 			;// INT1IF = 0;
                  01400 			;// INT1IE = 1;
                  01401 			;
                  01402 			;// INT2IP = 1;
                  01403 			;// INT2IF = 0;
                  01404 			;// INT2IE = 1;
                  01405 			;
                  01406 			;// RBIP = 1;
                  01407 			;// RBIF = 0;
                  01408 			;// RBIE = 1;
                  01409 			;}
00037E 0012       01410 	RETURN
                  01411 			;
                  01412 			;/*-----------------------------------------*/
                  01413 			;
                  01414 			;void ESCbut(void)
                  01415 			;{
                  01416 ESCbut
                  01417 			;while(ESC); delay(100);
000380 B483       01418 m033	BTFSC 0xF83,ESC,0
000382 D7FE       01419 	BRA   m033
000384 0E64       01420 	MOVLW 100
000386 DF79       01421 	RCALL delay
                  01422 			;while(!ESC); delay(100);
000388 A483       01423 m034	BTFSS 0xF83,ESC,0
00038A D7FE       01424 	BRA   m034
00038C 0E64       01425 	MOVLW 100
00038E D775       01426 	BRA   delay
                  01427 			;}
                  01428 			;
                  01429 			;/*--------------------------------------*/
                  01430 			;
                  01431 			;char hex2dec(char hex)
                  01432 			;{
                  01433 hex2dec
000390 6E7F       01434 	MOVWF hex,0
                  01435 			;char dec;
                  01436 			;
                  01437 			;dec = hex >> 4;
000392 387F       01438 	SWAPF hex,W,0
000394 0B0F       01439 	ANDLW 15
000396 6E7F       01440 	MOVWF dec,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 25

ADDR   CODE       LINE  SOURCE

                  01441 			;dec *= 10;
000398 0E0A       01442 	MOVLW 10
00039A 027F       01443 	MULWF dec,0
00039C CFF3 F07F  01444 	MOVFF PRODL,dec
                  01445 			;hex &= 0x0F;
0003A0 0E0F       01446 	MOVLW 15
0003A2 167F       01447 	ANDWF hex,1,0
                  01448 			;dec += hex;
0003A4 507F       01449 	MOVF  hex,W,0
0003A6 267F       01450 	ADDWF dec,1,0
                  01451 			;return dec;
0003A8 507F       01452 	MOVF  dec,W,0
0003AA 0012       01453 	RETURN
                  01454 			;}
                  01455 			;
                  01456 			;/*-----------------------------------------*/
                  01457 			;
                  01458 			;void scan(void)
                  01459 			;{
                  01460 scan
                  01461 			;if(!OPA) OPA_count ++;
0003AC B081       01462 	BTFSC 0xF81,OPA,0
0003AE D002       01463 	BRA   m035
0003B0 2A56       01464 	INCF  OPA_count,1,0
                  01465 			;else OPA_count = 0;
0003B2 D001       01466 	BRA   m036
0003B4 6A56       01467 m035	CLRF  OPA_count,0
                  01468 			;if(!OPB) OPB_count ++;
0003B6 B281       01469 m036	BTFSC 0xF81,OPB,0
0003B8 D002       01470 	BRA   m037
0003BA 2A57       01471 	INCF  OPB_count,1,0
                  01472 			;else OPB_count = 0;
0003BC D001       01473 	BRA   m038
0003BE 6A57       01474 m037	CLRF  OPB_count,0
                  01475 			;if(!OPC) OPC_count ++;
0003C0 B481       01476 m038	BTFSC 0xF81,OPC,0
0003C2 D002       01477 	BRA   m039
0003C4 2A58       01478 	INCF  OPC_count,1,0
                  01479 			;else OPC_count = 0;
0003C6 D001       01480 	BRA   m040
0003C8 6A58       01481 m039	CLRF  OPC_count,0
                  01482 			;if(!OPD) OPD_count ++;
0003CA BA81       01483 m040	BTFSC 0xF81,OPD,0
0003CC D002       01484 	BRA   m041
0003CE 2A59       01485 	INCF  OPD_count,1,0
                  01486 			;else OPD_count = 0;
0003D0 D001       01487 	BRA   m042
0003D2 6A59       01488 m041	CLRF  OPD_count,0
                  01489 			;if(!OPE) OPE_count ++;
0003D4 BC81       01490 m042	BTFSC 0xF81,OPE,0
0003D6 D002       01491 	BRA   m043
0003D8 2A5A       01492 	INCF  OPE_count,1,0
                  01493 			;else OPE_count = 0;
0003DA D001       01494 	BRA   m044
0003DC 6A5A       01495 m043	CLRF  OPE_count,0
                  01496 			;if(!OPF) OPF_count ++;
0003DE BE81       01497 m044	BTFSC 0xF81,OPF,0
0003E0 D002       01498 	BRA   m045
0003E2 2A5B       01499 	INCF  OPF_count,1,0
                  01500 			;else OPF_count = 0;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 26

ADDR   CODE       LINE  SOURCE

0003E4 D001       01501 	BRA   m046
0003E6 6A5B       01502 m045	CLRF  OPF_count,0
                  01503 			;if(PC == 1)
0003E8 2C61       01504 m046	DECFSZ PC,W,0
0003EA D005       01505 	BRA   m048
                  01506 			;	{
                  01507 			;	if(!IN_PC) PC_count ++;     //PC_in
0003EC B682       01508 	BTFSC 0xF82,IN_PC,0
0003EE D002       01509 	BRA   m047
0003F0 2A60       01510 	INCF  PC_count,1,0
                  01511 			;	else PC_count = 0;			//PC_in
0003F2 D001       01512 	BRA   m048
0003F4 6A60       01513 m047	CLRF  PC_count,0
                  01514 			;	}
                  01515 			;
                  01516 			;if(OPA_count > OP_limit) { sysB = 0x77; check = 1; }
0003F6 0E03       01517 m048	MOVLW 3
0003F8 6456       01518 	CPFSGT OPA_count,0
0003FA D004       01519 	BRA   m049
0003FC 0E77       01520 	MOVLW 119
0003FE 6E46       01521 	MOVWF sysB,0
000400 0E01       01522 	MOVLW 1
000402 6E33       01523 	MOVWF check,0
                  01524 			;if(OPB_count > OP_limit) { sysB = 0xB7; check = 1; }
000404 0E03       01525 m049	MOVLW 3
000406 6457       01526 	CPFSGT OPB_count,0
000408 D004       01527 	BRA   m050
00040A 0EB7       01528 	MOVLW 183
00040C 6E46       01529 	MOVWF sysB,0
00040E 0E01       01530 	MOVLW 1
000410 6E33       01531 	MOVWF check,0
                  01532 			;if(OPC_count > OP_limit) { sysB = 0xD7; check = 1; }
000412 0E03       01533 m050	MOVLW 3
000414 6458       01534 	CPFSGT OPC_count,0
000416 D004       01535 	BRA   m051
000418 0ED7       01536 	MOVLW 215
00041A 6E46       01537 	MOVWF sysB,0
00041C 0E01       01538 	MOVLW 1
00041E 6E33       01539 	MOVWF check,0
                  01540 			;if(OPD_count > OP_limit) { sysB = 0xF3; check = 1; }
000420 0E03       01541 m051	MOVLW 3
000422 6459       01542 	CPFSGT OPD_count,0
000424 D004       01543 	BRA   m052
000426 0EF3       01544 	MOVLW 243
000428 6E46       01545 	MOVWF sysB,0
00042A 0E01       01546 	MOVLW 1
00042C 6E33       01547 	MOVWF check,0
                  01548 			;if(OPE_count > OP_limit) { sysB = 0xF5; check = 1; }
00042E 0E03       01549 m052	MOVLW 3
000430 645A       01550 	CPFSGT OPE_count,0
000432 D004       01551 	BRA   m053
000434 0EF5       01552 	MOVLW 245
000436 6E46       01553 	MOVWF sysB,0
000438 0E01       01554 	MOVLW 1
00043A 6E33       01555 	MOVWF check,0
                  01556 			;if(OPF_count > OP_limit) { sysB = 0xF6; check = 1; }
00043C 0E03       01557 m053	MOVLW 3
00043E 645B       01558 	CPFSGT OPF_count,0
000440 D004       01559 	BRA   m054
000442 0EF6       01560 	MOVLW 246
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 27

ADDR   CODE       LINE  SOURCE

000444 6E46       01561 	MOVWF sysB,0
000446 0E01       01562 	MOVLW 1
000448 6E33       01563 	MOVWF check,0
                  01564 			;if(PC_count > OP_PC_limit) { sysB = 0xA5; check = 1; }    //PC_in
00044A 0E3C       01565 m054	MOVLW 60
00044C 6460       01566 	CPFSGT PC_count,0
00044E D004       01567 	BRA   m055
000450 0EA5       01568 	MOVLW 165
000452 6E46       01569 	MOVWF sysB,0
000454 0E01       01570 	MOVLW 1
000456 6E33       01571 	MOVWF check,0
                  01572 			;}
000458 0012       01573 m055	RETURN
                  01574 			;
                  01575 			;/*-----------------------------------------*/
                  01576 			;
                  01577 			;
                  01578 			;void REL1_ON(void)		//100100 - vodostrukia; 110000 - parapstruika; 001000 - preparat; 000110 - chetka; 000001 - vaksa
                  01579 			;{
                  01580 REL1_ON
                  01581 			;	REL1 = 0;			// kontaktor vodostuika
00045A 9282       01582 	BCF   0xF82,REL1,0
                  01583 			;	REL2 = 0;			// klapan topla H20
00045C 9482       01584 	BCF   0xF82,REL2,0
                  01585 			;	REL3 = 1;			// prepatar
00045E 8C82       01586 	BSF   0xF82,REL3,0
                  01587 			;	REL4 = 0; 			// klapan studena H20 
000460 9E82       01588 	BCF   0xF82,REL4,0
                  01589 			;	REL5 = 0; 			// chetka
000462 9083       01590 	BCF   0xF83,REL5,0
                  01591 			;	REL6 = 0;		    // vaksa
000464 9082       01592 	BCF   0xF82,REL6,0
                  01593 			;}
000466 0012       01594 	RETURN
                  01595 			;void REL2_ON(void)		//100100 - vodostrukia; 110000 - parapstruika; 001000 - preparat; 000110 - chetka; 000001 - vaksa
                  01596 			;{
                  01597 REL2_ON
                  01598 			;	REL1 = 1;			// kontaktor vodostuika
000468 8282       01599 	BSF   0xF82,REL1,0
                  01600 			;	REL2 = 1;			// klapan topla H20
00046A 8482       01601 	BSF   0xF82,REL2,0
                  01602 			;	REL3 = 0;			// prepatar
00046C 9C82       01603 	BCF   0xF82,REL3,0
                  01604 			;	REL4 = 0; 			// klapan studena H20 
00046E 9E82       01605 	BCF   0xF82,REL4,0
                  01606 			;	REL5 = 0; 			// chetka
000470 9083       01607 	BCF   0xF83,REL5,0
                  01608 			;	REL6 = 0;		    // vaksa
000472 9082       01609 	BCF   0xF82,REL6,0
                  01610 			;}
000474 0012       01611 	RETURN
                  01612 			;void REL3_ON(void)		//100100 - vodostrukia; 110000 - parapstruika; 001000 - preparat; 000110 - chetka; 000001 - vaksa
                  01613 			;{
                  01614 REL3_ON
                  01615 			;	REL1 = 1;			// kontaktor vodostuika
000476 8282       01616 	BSF   0xF82,REL1,0
                  01617 			;	REL2 = 0;			// klapan topla H20
000478 9482       01618 	BCF   0xF82,REL2,0
                  01619 			;	REL3 = 0;			// prepatar
00047A 9C82       01620 	BCF   0xF82,REL3,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 28

ADDR   CODE       LINE  SOURCE

                  01621 			;	REL4 = 1; 			// klapan studena H20 
00047C 8E82       01622 	BSF   0xF82,REL4,0
                  01623 			;	REL5 = 0; 			// chetka
00047E 9083       01624 	BCF   0xF83,REL5,0
                  01625 			;	REL6 = 0;		    // vaksa
000480 9082       01626 	BCF   0xF82,REL6,0
                  01627 			;}
000482 0012       01628 	RETURN
                  01629 			;void REL4_ON(void)		//100100 - vodostrukia; 110000 - parapstruika; 001000 - preparat; 000110 - chetka; 000001 - vaksa
                  01630 			;{
                  01631 REL4_ON
                  01632 			;	REL1 = 0;			// kontaktor vodostuika
000484 9282       01633 	BCF   0xF82,REL1,0
                  01634 			;	REL2 = 0;			// klapan topla H20
000486 9482       01635 	BCF   0xF82,REL2,0
                  01636 			;	REL3 = 0;			// prepatar
000488 9C82       01637 	BCF   0xF82,REL3,0
                  01638 			;	REL4 = 0; 			// klapan studena H20 
00048A 9E82       01639 	BCF   0xF82,REL4,0
                  01640 			;	REL5 = 1; 			// chetka
00048C 8083       01641 	BSF   0xF83,REL5,0
                  01642 			;	REL6 = 0;		    // vaksa
00048E 9082       01643 	BCF   0xF82,REL6,0
                  01644 			;}
000490 0012       01645 	RETURN
                  01646 			;void REL6_ON(void)		//100100 - vodostrukia; 110000 - parapstruika; 001000 - preparat; 000110 - chetka; 000001 - vaksa
                  01647 			;{
                  01648 REL6_ON
                  01649 			;	REL1 = 0;			// kontaktor vodostuika
000492 9282       01650 	BCF   0xF82,REL1,0
                  01651 			;	REL2 = 0;			// klapan topla H20
000494 9482       01652 	BCF   0xF82,REL2,0
                  01653 			;	REL3 = 0;			// prepatar
000496 9C82       01654 	BCF   0xF82,REL3,0
                  01655 			;	REL4 = 0; 			// klapan studena H20 
000498 9E82       01656 	BCF   0xF82,REL4,0
                  01657 			;	REL5 = 0; 			// chetka
00049A 9083       01658 	BCF   0xF83,REL5,0
                  01659 			;	REL6 = 1;		    // vaksa
00049C 8082       01660 	BSF   0xF82,REL6,0
                  01661 			;}
00049E 0012       01662 	RETURN
                  01663 			;void REL_OFF(void)
                  01664 			;{
                  01665 REL_OFF
                  01666 			;	REL1 = 0;
0004A0 9282       01667 	BCF   0xF82,REL1,0
                  01668 			;	REL2 = 0;
0004A2 9482       01669 	BCF   0xF82,REL2,0
                  01670 			;	REL3 = 0;
0004A4 9C82       01671 	BCF   0xF82,REL3,0
                  01672 			;	REL4 = 0;
0004A6 9E82       01673 	BCF   0xF82,REL4,0
                  01674 			;	REL5 = 0; 
0004A8 9083       01675 	BCF   0xF83,REL5,0
                  01676 			;	REL6 = 0; 
0004AA 9082       01677 	BCF   0xF82,REL6,0
                  01678 			;}
0004AC 0012       01679 	RETURN
                  01680 
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 29

ADDR   CODE       LINE  SOURCE

                  01681   ; FILE eeprom.h
                  01682 			;uns8 readEEPROM(uns8);			// read EEPROM cells
                  01683 			;void writeEEPROM(uns8, uns8);	// write to eeprom
                  01684 			;void Load(void);				// Load EEPROM values
                  01685 			;void cr_to_time(char);			// convert credit to time
                  01686 			;void time_to_cr(char);			// convert left time to credit
                  01687 			;/*-----------------------------------------*/
                  01688 			;
                  01689 			;uns8 readEEPROM(uns8 address)
                  01690 			;{
                  01691 readEEPROM
0004AE 6E18       01692 	MOVWF address,0
                  01693 			;uns8 byte;                     	// Variable hold the data that is read
                  01694 			;
                  01695 			;EEADR = address;               	// Read from this address
0004B0 C018 FFA9  01696 	MOVFF address,EEADR
                  01697 			;EEPGD = 0;                     	// Point to EE memory
0004B4 9EA6       01698 	BCF   0xFA6,EEPGD,0
                  01699 			;CFGS = 0;						// EEPROM address
0004B6 9CA6       01700 	BCF   0xFA6,CFGS,0
                  01701 			;RD = 1;                     	// Initiate a read cycle
0004B8 80A6       01702 	BSF   0xFA6,RD,0
                  01703 			;byte = EEDATA;                 	// Fetch byte from data register
0004BA CFA8 F019  01704 	MOVFF EEDATA,byte
                  01705 			;
                  01706 			;return byte;                   	// Return the read byte
0004BE 5019       01707 	MOVF  byte,W,0
0004C0 0012       01708 	RETURN
                  01709 			;}
                  01710 			;
                  01711 			;/*-----------------------------------------*/
                  01712 			;
                  01713 			;void writeEEPROM(uns8 smb, uns8 addr)
                  01714 			;{
                  01715 writeEEPROM
0004C2 6E15       01716 	MOVWF addr,0
                  01717 			;EEADR = addr;		// set address
0004C4 C015 FFA9  01718 	MOVFF addr,EEADR
                  01719 			;EEDATA = smb;		// set symbol to be written
0004C8 C014 FFA8  01720 	MOVFF smb_2,EEDATA
                  01721 			;CFGS = 0;			// EEPROM address
0004CC 9CA6       01722 	BCF   0xFA6,CFGS,0
                  01723 			;WREN = 1;			// enable write
0004CE 84A6       01724 	BSF   0xFA6,WREN,0
                  01725 			;EECON2 = 0x55;		// Write "password" to EECON2
0004D0 0E55       01726 	MOVLW 85
0004D2 6EA7       01727 	MOVWF EECON2,0
                  01728 			;EECON2 = 0xAA;
0004D4 0EAA       01729 	MOVLW 170
0004D6 6EA7       01730 	MOVWF EECON2,0
                  01731 			;WR = 1;				// Initiate a write cycle
0004D8 82A6       01732 	BSF   0xFA6,WR,0
                  01733 			;while(WR);			// Wait for write to complete
0004DA B2A6       01734 m056	BTFSC 0xFA6,WR,0
0004DC D7FE       01735 	BRA   m056
                  01736 			;WREN = 0;			// disable write
0004DE 94A6       01737 	BCF   0xFA6,WREN,0
                  01738 			;}
0004E0 0012       01739 	RETURN
                  01740 			;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 30

ADDR   CODE       LINE  SOURCE

                  01741 			;/*----------------------------------------*/
                  01742 			;
                  01743 			;void Load(void)
                  01744 			;{
                  01745 Load
                  01746 			;vEN1 = readEEPROM(eEN1); delay(1);
0004E2 0EF6       01747 	MOVLW 246
0004E4 DFE4       01748 	RCALL readEEPROM
0004E6 6E36       01749 	MOVWF vEN1,0
0004E8 0E01       01750 	MOVLW 1
0004EA DEC7       01751 	RCALL delay
                  01752 			;vEN2 = readEEPROM(eEN2); delay(1);
0004EC 0EF7       01753 	MOVLW 247
0004EE DFDF       01754 	RCALL readEEPROM
0004F0 6E37       01755 	MOVWF vEN2,0
0004F2 0E01       01756 	MOVLW 1
0004F4 DEC2       01757 	RCALL delay
                  01758 			;vEN3 = readEEPROM(eEN3); delay(1);
0004F6 0EC6       01759 	MOVLW 198
0004F8 DFDA       01760 	RCALL readEEPROM
0004FA 6E38       01761 	MOVWF vEN3,0
0004FC 0E01       01762 	MOVLW 1
0004FE DEBD       01763 	RCALL delay
                  01764 			;vEN4 = readEEPROM(eEN4); delay(1);
000500 0EC7       01765 	MOVLW 199
000502 DFD5       01766 	RCALL readEEPROM
000504 6E39       01767 	MOVWF vEN4,0
000506 0E01       01768 	MOVLW 1
000508 DEB8       01769 	RCALL delay
                  01770 			;vEN6 = readEEPROM(eEN6); delay(1);
00050A 0EC8       01771 	MOVLW 200
00050C DFD0       01772 	RCALL readEEPROM
00050E 6E3A       01773 	MOVWF vEN6,0
000510 0E01       01774 	MOVLW 1
000512 DEB3       01775 	RCALL delay
                  01776 			;//vZumer = readEEPROM(eZumer); delay(1);
                  01777 			;//vOpto1 = readEEPROM(eOpto1); delay(1);
                  01778 			;//vOpto2 = readEEPROM(eOpto2); delay(1);
                  01779 			;vBL = readEEPROM(eBL); delay(1);
000514 0EFB       01780 	MOVLW 251
000516 DFCB       01781 	RCALL readEEPROM
000518 6E3B       01782 	MOVWF vBL,0
00051A 0E01       01783 	MOVLW 1
00051C DEAE       01784 	RCALL delay
                  01785 			;vAUTOSTART = readEEPROM(eAUTOSTART); delay(1);
00051E 0EDF       01786 	MOVLW 223
000520 DFC6       01787 	RCALL readEEPROM
000522 6E44       01788 	MOVWF vAUTOSTART,0
000524 0E01       01789 	MOVLW 1
000526 DEA9       01790 	RCALL delay
                  01791 			;vCounter.high8 = readEEPROM(eCounterH); delay(1);
000528 0EDA       01792 	MOVLW 218
00052A DFC1       01793 	RCALL readEEPROM
00052C 6E53       01794 	MOVWF vCounter+1,0
00052E 0E01       01795 	MOVLW 1
000530 DEA4       01796 	RCALL delay
                  01797 			;vCounter.low8  = readEEPROM(eCounterL); delay(1);
000532 0EDB       01798 	MOVLW 219
000534 DFBC       01799 	RCALL readEEPROM
000536 6E52       01800 	MOVWF vCounter,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 31

ADDR   CODE       LINE  SOURCE

000538 0E01       01801 	MOVLW 1
00053A DE9F       01802 	RCALL delay
                  01803 			;
                  01804 			;vOPA = readEEPROM(eOPA); delay(1);
00053C 0EF5       01805 	MOVLW 245
00053E DFB7       01806 	RCALL readEEPROM
000540 6E48       01807 	MOVWF vOPA,0
000542 0E01       01808 	MOVLW 1
000544 DE9A       01809 	RCALL delay
                  01810 			;vOPB = readEEPROM(eOPB); delay(1);
000546 0EF4       01811 	MOVLW 244
000548 DFB2       01812 	RCALL readEEPROM
00054A 6E49       01813 	MOVWF vOPB,0
00054C 0E01       01814 	MOVLW 1
00054E DE95       01815 	RCALL delay
                  01816 			;vOPC = readEEPROM(eOPC); delay(1);
000550 0EF3       01817 	MOVLW 243
000552 DFAD       01818 	RCALL readEEPROM
000554 6E4A       01819 	MOVWF vOPC,0
000556 0E01       01820 	MOVLW 1
000558 DE90       01821 	RCALL delay
                  01822 			;vOPD = readEEPROM(eOPD); delay(1);
00055A 0EF2       01823 	MOVLW 242
00055C DFA8       01824 	RCALL readEEPROM
00055E 6E4B       01825 	MOVWF vOPD,0
000560 0E01       01826 	MOVLW 1
000562 DE8B       01827 	RCALL delay
                  01828 			;vOPE = readEEPROM(eOPE); delay(1);
000564 0EF1       01829 	MOVLW 241
000566 DFA3       01830 	RCALL readEEPROM
000568 6E4C       01831 	MOVWF vOPE,0
00056A 0E01       01832 	MOVLW 1
00056C DE86       01833 	RCALL delay
                  01834 			;vOPF = readEEPROM(eOPF); delay(1);
00056E 0EF0       01835 	MOVLW 240
000570 DF9E       01836 	RCALL readEEPROM
000572 6E4D       01837 	MOVWF vOPF,0
000574 0E01       01838 	MOVLW 1
000576 DE81       01839 	RCALL delay
                  01840 			;
                  01841 			;/*
                  01842 			;// calculate remaining time
                  01843 			;retvalue = readEEPROM(etime1H); delay(1);
                  01844 			;cred1 = (uns24)retvalue * 60;
                  01845 			;retvalue  = readEEPROM(etime1M); delay(1);
                  01846 			;cred1 += retvalue;
                  01847 			;cred1 *= 60;
                  01848 			;retvalue = readEEPROM(etime2H); delay(1);
                  01849 			;cred2 = (uns24)retvalue * 60;
                  01850 			;retvalue  = readEEPROM(etime2M); delay(1);
                  01851 			;cred2 += retvalue;
                  01852 			;cred2 *= 60;
                  01853 			;retvalue = readEEPROM(etime3H); delay(1);
                  01854 			;cred3 = (uns24)retvalue * 60;
                  01855 			;retvalue  = readEEPROM(etime3M); delay(1);
                  01856 			;cred3 += retvalue;
                  01857 			;cred3 *= 60;
                  01858 			;retvalue = readEEPROM(etime4H); delay(1);
                  01859 			;cred4 = (uns24)retvalue * 60;
                  01860 			;retvalue  = readEEPROM(etime4M); delay(1);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 32

ADDR   CODE       LINE  SOURCE

                  01861 			;cred4 += retvalue;
                  01862 			;cred4 *= 60;
                  01863 			;retvalue = readEEPROM(etime6H); delay(1);
                  01864 			;cred6 = (uns24)retvalue * 60;
                  01865 			;retvalue  = readEEPROM(etime6M); delay(1);
                  01866 			;cred6 += retvalue;
                  01867 			;cred6 *= 60;
                  01868 			;
                  01869 			;*/
                  01870 			;
                  01871 			;vINH = readEEPROM(eINH); delay(1);
000578 0EFF       01872 	MOVLW 255
00057A DF99       01873 	RCALL readEEPROM
00057C 6E34       01874 	MOVWF vINH,0
00057E 0E01       01875 	MOVLW 1
000580 DE7C       01876 	RCALL delay
                  01877 			;vComm = readEEPROM(eComm); delay(1);
000582 0EFE       01878 	MOVLW 254
000584 DF94       01879 	RCALL readEEPROM
000586 6E35       01880 	MOVWF vComm,0
000588 0E01       01881 	MOVLW 1
00058A DE77       01882 	RCALL delay
                  01883 			;
                  01884 			;overpay.high8 = readEEPROM(eoverH); delay(1);
00058C 0EE7       01885 	MOVLW 231
00058E DF8F       01886 	RCALL readEEPROM
000590 6FC9       01887 	MOVWF overpay+2,1
000592 0E01       01888 	MOVLW 1
000594 DE72       01889 	RCALL delay
                  01890 			;overpay.mid8  = readEEPROM(eoverM); delay(1);
000596 0EE8       01891 	MOVLW 232
000598 DF8A       01892 	RCALL readEEPROM
00059A 6FC8       01893 	MOVWF overpay+1,1
00059C 0E01       01894 	MOVLW 1
00059E DE6D       01895 	RCALL delay
                  01896 			;overpay.low8  = readEEPROM(eoverL); delay(1);
0005A0 0EE9       01897 	MOVLW 233
0005A2 DF85       01898 	RCALL readEEPROM
0005A4 6FC7       01899 	MOVWF overpay,1
0005A6 0E01       01900 	MOVLW 1
0005A8 DE68       01901 	RCALL delay
                  01902 			;
                  01903 			;total1.high8 = readEEPROM(etotal1H); delay(1);
0005AA 0EEA       01904 	MOVLW 234
0005AC DF80       01905 	RCALL readEEPROM
0005AE 6FBA       01906 	MOVWF total1+2,1
0005B0 0E01       01907 	MOVLW 1
0005B2 DE63       01908 	RCALL delay
                  01909 			;total1.mid8  = readEEPROM(etotal1M); delay(1);
0005B4 0EEB       01910 	MOVLW 235
0005B6 DF7B       01911 	RCALL readEEPROM
0005B8 6FB9       01912 	MOVWF total1+1,1
0005BA 0E01       01913 	MOVLW 1
0005BC DE5E       01914 	RCALL delay
                  01915 			;total1.low8  = readEEPROM(etotal1L); delay(1);
0005BE 0EEC       01916 	MOVLW 236
0005C0 DF76       01917 	RCALL readEEPROM
0005C2 6FB8       01918 	MOVWF total1,1
0005C4 0E01       01919 	MOVLW 1
0005C6 DE59       01920 	RCALL delay
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 33

ADDR   CODE       LINE  SOURCE

                  01921 			;
                  01922 			;total2.high8 = readEEPROM(etotal2H); delay(1);
0005C8 0EED       01923 	MOVLW 237
0005CA DF71       01924 	RCALL readEEPROM
0005CC 6FBD       01925 	MOVWF total2+2,1
0005CE 0E01       01926 	MOVLW 1
0005D0 DE54       01927 	RCALL delay
                  01928 			;total2.mid8  = readEEPROM(etotal2M); delay(1);
0005D2 0EEE       01929 	MOVLW 238
0005D4 DF6C       01930 	RCALL readEEPROM
0005D6 6FBC       01931 	MOVWF total2+1,1
0005D8 0E01       01932 	MOVLW 1
0005DA DE4F       01933 	RCALL delay
                  01934 			;total2.low8  = readEEPROM(etotal2L); delay(1);
0005DC 0EEF       01935 	MOVLW 239
0005DE DF67       01936 	RCALL readEEPROM
0005E0 6FBB       01937 	MOVWF total2,1
0005E2 0E01       01938 	MOVLW 1
0005E4 DE4A       01939 	RCALL delay
                  01940 			;
                  01941 			;total3.high8 = readEEPROM(etotal3H); delay(1);
0005E6 0ECA       01942 	MOVLW 202
0005E8 DF62       01943 	RCALL readEEPROM
0005EA 6FC0       01944 	MOVWF total3+2,1
0005EC 0E01       01945 	MOVLW 1
0005EE DE45       01946 	RCALL delay
                  01947 			;total3.mid8  = readEEPROM(etotal3M); delay(1);
0005F0 0ECB       01948 	MOVLW 203
0005F2 DF5D       01949 	RCALL readEEPROM
0005F4 6FBF       01950 	MOVWF total3+1,1
0005F6 0E01       01951 	MOVLW 1
0005F8 DE40       01952 	RCALL delay
                  01953 			;total3.low8  = readEEPROM(etotal3L); delay(1);
0005FA 0ECC       01954 	MOVLW 204
0005FC DF58       01955 	RCALL readEEPROM
0005FE 6FBE       01956 	MOVWF total3,1
000600 0E01       01957 	MOVLW 1
000602 DE3B       01958 	RCALL delay
                  01959 			;
                  01960 			;total4.high8 = readEEPROM(etotal4H); delay(1);
000604 0ECD       01961 	MOVLW 205
000606 DF53       01962 	RCALL readEEPROM
000608 6FC3       01963 	MOVWF total4+2,1
00060A 0E01       01964 	MOVLW 1
00060C DE36       01965 	RCALL delay
                  01966 			;total4.mid8  = readEEPROM(etotal4M); delay(1);
00060E 0ECE       01967 	MOVLW 206
000610 DF4E       01968 	RCALL readEEPROM
000612 6FC2       01969 	MOVWF total4+1,1
000614 0E01       01970 	MOVLW 1
000616 DE31       01971 	RCALL delay
                  01972 			;total4.low8  = readEEPROM(etotal4L); delay(1);
000618 0ECF       01973 	MOVLW 207
00061A DF49       01974 	RCALL readEEPROM
00061C 6FC1       01975 	MOVWF total4,1
00061E 0E01       01976 	MOVLW 1
000620 DE2C       01977 	RCALL delay
                  01978 			;
                  01979 			;total6.high8 = readEEPROM(etotal6H); delay(1);
000622 0EBA       01980 	MOVLW 186
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 34

ADDR   CODE       LINE  SOURCE

000624 DF44       01981 	RCALL readEEPROM
000626 6FC6       01982 	MOVWF total6+2,1
000628 0E01       01983 	MOVLW 1
00062A DE27       01984 	RCALL delay
                  01985 			;total6.mid8  = readEEPROM(etotal6M); delay(1);
00062C 0EBB       01986 	MOVLW 187
00062E DF3F       01987 	RCALL readEEPROM
000630 6FC5       01988 	MOVWF total6+1,1
000632 0E01       01989 	MOVLW 1
000634 DE22       01990 	RCALL delay
                  01991 			;total6.low8  = readEEPROM(etotal6L); delay(1);
000636 0EBC       01992 	MOVLW 188
000638 DF3A       01993 	RCALL readEEPROM
00063A 6FC4       01994 	MOVWF total6,1
00063C 0E01       01995 	MOVLW 1
00063E DE1D       01996 	RCALL delay
                  01997 			;
                  01998 			;NONpay.high8 = readEEPROM(eNONpayH); delay(1);
000640 0EE4       01999 	MOVLW 228
000642 DF35       02000 	RCALL readEEPROM
000644 6FCC       02001 	MOVWF NONpay+2,1
000646 0E01       02002 	MOVLW 1
000648 DE18       02003 	RCALL delay
                  02004 			;NONpay.mid8  = readEEPROM(eNONpayM); delay(1);
00064A 0EE5       02005 	MOVLW 229
00064C DF30       02006 	RCALL readEEPROM
00064E 6FCB       02007 	MOVWF NONpay+1,1
000650 0E01       02008 	MOVLW 1
000652 DE13       02009 	RCALL delay
                  02010 			;NONpay.low8  = readEEPROM(eNONpayL); delay(1);
000654 0EE6       02011 	MOVLW 230
000656 DF2B       02012 	RCALL readEEPROM
000658 6FCA       02013 	MOVWF NONpay,1
00065A 0E01       02014 	MOVLW 1
00065C DE0E       02015 	RCALL delay
                  02016 			;
                  02017 			;wHour.high8  = readEEPROM(eHour); delay(1);
00065E 0EDC       02018 	MOVLW 220
000660 DF26       02019 	RCALL readEEPROM
000662 6FDE       02020 	MOVWF wHour+2,1
000664 0E01       02021 	MOVLW 1
000666 DE09       02022 	RCALL delay
                  02023 			;wHour.mid8   = readEEPROM(eHour+1); delay(1);
000668 0EDD       02024 	MOVLW 221
00066A DF21       02025 	RCALL readEEPROM
00066C 6FDD       02026 	MOVWF wHour+1,1
00066E 0E01       02027 	MOVLW 1
000670 DE04       02028 	RCALL delay
                  02029 			;wHour.low8   = readEEPROM(eHour+2); delay(1);
000672 0EDE       02030 	MOVLW 222
000674 DF1C       02031 	RCALL readEEPROM
000676 6FDC       02032 	MOVWF wHour,1
000678 0E01       02033 	MOVLW 1
00067A D5FF       02034 	BRA   delay
                  02035 			;}
                  02036 			;
                  02037 			;/*-----------------------------------------*/
                  02038 			;
                  02039 			;void cr_to_time(char ch)
                  02040 			;{
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 35

ADDR   CODE       LINE  SOURCE

                  02041 cr_to_time
00067C 6E09       02042 	MOVWF ch_2,0
                  02043 			;char overload;
                  02044 			;char addr;
                  02045 			;uns8 val;
                  02046 			;uns16 x2;
                  02047 			;uns16 a,b;
                  02048 			;uns24 y2;
                  02049 			;
                  02050 			;if(credit == 0)	
00067E 519A       02051 	MOVF  credit,W,1
000680 119B       02052 	IORWF credit+1,W,1
000682 E104       02053 	BNZ   m057
                  02054 			;	{
                  02055 			;	value = 0;
000684 6BB2       02056 	CLRF  value,1
000686 6BB3       02057 	CLRF  value+1,1
000688 6BB4       02058 	CLRF  value+2,1
                  02059 			;	return;
00068A 0012       02060 	RETURN
                  02061 			;	}
                  02062 			;
                  02063 			;overload = 0;
00068C 6A0A       02064 m057	CLRF  overload,0
                  02065 			;if(ch == 1) addr = eeprom_start;
00068E 4C09       02066 	DCFSNZ ch_2,W,0
000690 6A0B       02067 	CLRF  addr_2,0
                  02068 			;if(ch == 2) addr = eeprom_start + 5;
000692 0E02       02069 	MOVLW 2
000694 6209       02070 	CPFSEQ ch_2,0
000696 D002       02071 	BRA   m058
000698 0E05       02072 	MOVLW 5
00069A 6E0B       02073 	MOVWF addr_2,0
                  02074 			;if(ch == 3) addr = eeprom_start + 0x60;
00069C 0E03       02075 m058	MOVLW 3
00069E 6209       02076 	CPFSEQ ch_2,0
0006A0 D002       02077 	BRA   m059
0006A2 0E60       02078 	MOVLW 96
0006A4 6E0B       02079 	MOVWF addr_2,0
                  02080 			;if(ch == 4) 
0006A6 0E04       02081 m059	MOVLW 4
0006A8 6209       02082 	CPFSEQ ch_2,0
0006AA D004       02083 	BRA   m060
                  02084 			;	{
                  02085 			;	addr = eeprom_start + 0x60;
0006AC 0E60       02086 	MOVLW 96
0006AE 6E0B       02087 	MOVWF addr_2,0
                  02088 			;	addr = addr + 5;
0006B0 0E05       02089 	MOVLW 5
0006B2 260B       02090 	ADDWF addr_2,1,0
                  02091 			;	}
                  02092 			;if(ch == 6) addr = eeprom_start + 0x0B;
0006B4 0E06       02093 m060	MOVLW 6
0006B6 6209       02094 	CPFSEQ ch_2,0
0006B8 D002       02095 	BRA   m061
0006BA 0E0B       02096 	MOVLW 11
0006BC 6E0B       02097 	MOVWF addr_2,0
                  02098 			;
                  02099 			;for(ind=0;ind<10;ind++)
0006BE 6A2C       02100 m061	CLRF  ind,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 36

ADDR   CODE       LINE  SOURCE

0006C0 0E0A       02101 m062	MOVLW 10
0006C2 602C       02102 	CPFSLT ind,0
0006C4 D01E       02103 	BRA   m064
                  02104 			;	{
                  02105 			;	val = readEEPROM(addr);	
0006C6 500B       02106 	MOVF  addr_2,W,0
0006C8 DEF2       02107 	RCALL readEEPROM
0006CA 6E0C       02108 	MOVWF val,0
                  02109 			;	if(val == 0xFF) overload = 1;
0006CC 3C0C       02110 	INCFSZ val,W,0
0006CE D002       02111 	BRA   m063
0006D0 0E01       02112 	MOVLW 1
0006D2 6E0A       02113 	MOVWF overload,0
                  02114 			;	if(overload) break;	
0006D4 660A       02115 m063	TSTFSZ overload,0
0006D6 D015       02116 	BRA   m064
                  02117 			;	x2 = (uns16)val * 100;
0006D8 500C       02118 	MOVF  val,W,0
0006DA 0D64       02119 	MULLW 100
0006DC CFF3 F00D  02120 	MOVFF PRODL,x2
0006E0 CFF4 F00E  02121 	MOVFF PRODH,x2+1
                  02122 			;	val = readEEPROM(addr+1);	
0006E4 280B       02123 	INCF  addr_2,W,0
0006E6 DEE3       02124 	RCALL readEEPROM
0006E8 6E0C       02125 	MOVWF val,0
                  02126 			;	x2 +=(uns16)val;
0006EA 260D       02127 	ADDWF x2,1,0
0006EC 0E00       02128 	MOVLW 0
0006EE 220E       02129 	ADDWFC x2+1,1,0
                  02130 			;	if(credit <= x2) break;
0006F0 519A       02131 	MOVF  credit,W,1
0006F2 5C0D       02132 	SUBWF x2,W,0
0006F4 519B       02133 	MOVF  credit+1,W,1
0006F6 580E       02134 	SUBWFB x2+1,W,0
0006F8 E204       02135 	BC    m064
                  02136 			;	addr += 0x10;
0006FA 0E10       02137 	MOVLW 16
0006FC 260B       02138 	ADDWF addr_2,1,0
                  02139 			;	}
0006FE 2A2C       02140 	INCF  ind,1,0
000700 D7DF       02141 	BRA   m062
                  02142 			;
                  02143 			;if(overload) addr -= 0x10;
000702 520A       02144 m064	MOVF  overload,1,0
000704 E002       02145 	BZ    m065
000706 0E10       02146 	MOVLW 16
000708 5E0B       02147 	SUBWF addr_2,1,0
                  02148 			;addr += 2;
00070A 0E02       02149 m065	MOVLW 2
00070C 260B       02150 	ADDWF addr_2,1,0
                  02151 			;val = readEEPROM(addr); 	y2 = (uns24)val * 3600;
00070E 500B       02152 	MOVF  addr_2,W,0
000710 DECE       02153 	RCALL readEEPROM
000712 6E0C       02154 	MOVWF val,0
000714 0D10       02155 	MULLW 16
000716 CFF3 F013  02156 	MOVFF PRODL,y2
00071A CFF4 F014  02157 	MOVFF PRODH,y2+1
00071E 6A15       02158 	CLRF  y2+2,0
000720 0D0E       02159 	MULLW 14
000722 50F3       02160 	MOVF  PRODL,W,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 37

ADDR   CODE       LINE  SOURCE

000724 2614       02161 	ADDWF y2+1,1,0
000726 50F4       02162 	MOVF  PRODH,W,0
000728 2215       02163 	ADDWFC y2+2,1,0
                  02164 			;val = readEEPROM(addr+1); 	
00072A 280B       02165 	INCF  addr_2,W,0
00072C DEC0       02166 	RCALL readEEPROM
00072E 6E0C       02167 	MOVWF val,0
                  02168 			;temp = (uns16)val * 60;		y2 += (uns24)temp;
000730 6B9E       02169 	CLRF  temp+2,1
000732 0D3C       02170 	MULLW 60
000734 CFF3 F09C  02171 	MOVFF PRODL,temp
000738 CFF4 F09D  02172 	MOVFF PRODH,temp+1
00073C 519C       02173 	MOVF  temp,W,1
00073E 2613       02174 	ADDWF y2,1,0
000740 519D       02175 	MOVF  temp+1,W,1
000742 2214       02176 	ADDWFC y2+1,1,0
000744 519E       02177 	MOVF  temp+2,W,1
000746 2215       02178 	ADDWFC y2+2,1,0
                  02179 			;val = readEEPROM(addr+2); 	y2 += (uns24)val;
000748 0E02       02180 	MOVLW 2
00074A 240B       02181 	ADDWF addr_2,W,0
00074C DEB0       02182 	RCALL readEEPROM
00074E 6E0C       02183 	MOVWF val,0
000750 2613       02184 	ADDWF y2,1,0
000752 0E00       02185 	MOVLW 0
000754 2214       02186 	ADDWFC y2+1,1,0
000756 2215       02187 	ADDWFC y2+2,1,0
                  02188 			;
                  02189 			;a = y2 / x2;
000758 5013       02190 	MOVF  y2,W,0
00075A 6E17       02191 	MOVWF C22tmp,0
00075C 5014       02192 	MOVF  y2+1,W,0
00075E 6E18       02193 	MOVWF C22tmp+1,0
000760 5015       02194 	MOVF  y2+2,W,0
000762 6E19       02195 	MOVWF C22tmp+2,0
000764 6A1A       02196 	CLRF  C23rem,0
000766 6A1B       02197 	CLRF  C23rem+1,0
000768 0E18       02198 	MOVLW 24
00076A 6E16       02199 	MOVWF C21cnt,0
00076C 3617       02200 m066	RLCF  C22tmp,1,0
00076E 3618       02201 	RLCF  C22tmp+1,1,0
000770 3619       02202 	RLCF  C22tmp+2,1,0
000772 361A       02203 	RLCF  C23rem,1,0
000774 361B       02204 	RLCF  C23rem+1,1,0
000776 E205       02205 	BC    m067
000778 500D       02206 	MOVF  x2,W,0
00077A 5C1A       02207 	SUBWF C23rem,W,0
00077C 500E       02208 	MOVF  x2+1,W,0
00077E 581B       02209 	SUBWFB C23rem+1,W,0
000780 E305       02210 	BNC   m068
000782 500D       02211 m067	MOVF  x2,W,0
000784 5E1A       02212 	SUBWF C23rem,1,0
000786 500E       02213 	MOVF  x2+1,W,0
000788 5A1B       02214 	SUBWFB C23rem+1,1,0
00078A 80D8       02215 	BSF   0xFD8,Carry,0
00078C 360F       02216 m068	RLCF  a,1,0
00078E 3610       02217 	RLCF  a+1,1,0
000790 2E16       02218 	DECFSZ C21cnt,1,0
000792 D7EC       02219 	BRA   m066
                  02220 			;b = y2 % x2;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 38

ADDR   CODE       LINE  SOURCE

000794 5013       02221 	MOVF  y2,W,0
000796 6E17       02222 	MOVWF C25tmp,0
000798 5014       02223 	MOVF  y2+1,W,0
00079A 6E18       02224 	MOVWF C25tmp+1,0
00079C 5015       02225 	MOVF  y2+2,W,0
00079E 6E19       02226 	MOVWF C25tmp+2,0
0007A0 6A11       02227 	CLRF  b,0
0007A2 6A12       02228 	CLRF  b+1,0
0007A4 0E18       02229 	MOVLW 24
0007A6 6E16       02230 	MOVWF C24cnt,0
0007A8 3617       02231 m069	RLCF  C25tmp,1,0
0007AA 3618       02232 	RLCF  C25tmp+1,1,0
0007AC 3619       02233 	RLCF  C25tmp+2,1,0
0007AE 3611       02234 	RLCF  b,1,0
0007B0 3612       02235 	RLCF  b+1,1,0
0007B2 E205       02236 	BC    m070
0007B4 500D       02237 	MOVF  x2,W,0
0007B6 5C11       02238 	SUBWF b,W,0
0007B8 500E       02239 	MOVF  x2+1,W,0
0007BA 5812       02240 	SUBWFB b+1,W,0
0007BC E304       02241 	BNC   m071
0007BE 500D       02242 m070	MOVF  x2,W,0
0007C0 5E11       02243 	SUBWF b,1,0
0007C2 500E       02244 	MOVF  x2+1,W,0
0007C4 5A12       02245 	SUBWFB b+1,1,0
0007C6 2E16       02246 m071	DECFSZ C24cnt,1,0
0007C8 D7EF       02247 	BRA   m069
                  02248 			;value = (uns24)a * credit;
0007CA 5010       02249 	MOVF  a+1,W,0
0007CC 039B       02250 	MULWF credit+1,1
0007CE CFF3 F0B4  02251 	MOVFF PRODL,value+2
0007D2 500F       02252 	MOVF  a,W,0
0007D4 039A       02253 	MULWF credit,1
0007D6 CFF3 F0B2  02254 	MOVFF PRODL,value
0007DA CFF4 F0B3  02255 	MOVFF PRODH,value+1
0007DE 5010       02256 	MOVF  a+1,W,0
0007E0 039A       02257 	MULWF credit,1
0007E2 50F3       02258 	MOVF  PRODL,W,0
0007E4 27B3       02259 	ADDWF value+1,1,1
0007E6 50F4       02260 	MOVF  PRODH,W,0
0007E8 23B4       02261 	ADDWFC value+2,1,1
0007EA 500F       02262 	MOVF  a,W,0
0007EC 039B       02263 	MULWF credit+1,1
0007EE 50F3       02264 	MOVF  PRODL,W,0
0007F0 27B3       02265 	ADDWF value+1,1,1
0007F2 50F4       02266 	MOVF  PRODH,W,0
0007F4 23B4       02267 	ADDWFC value+2,1,1
                  02268 			;y2 = (uns24)b * credit;
0007F6 5012       02269 	MOVF  b+1,W,0
0007F8 039B       02270 	MULWF credit+1,1
0007FA CFF3 F015  02271 	MOVFF PRODL,y2+2
0007FE 5011       02272 	MOVF  b,W,0
000800 039A       02273 	MULWF credit,1
000802 CFF3 F013  02274 	MOVFF PRODL,y2
000806 CFF4 F014  02275 	MOVFF PRODH,y2+1
00080A 5012       02276 	MOVF  b+1,W,0
00080C 039A       02277 	MULWF credit,1
00080E 50F3       02278 	MOVF  PRODL,W,0
000810 2614       02279 	ADDWF y2+1,1,0
000812 50F4       02280 	MOVF  PRODH,W,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 39

ADDR   CODE       LINE  SOURCE

000814 2215       02281 	ADDWFC y2+2,1,0
000816 5011       02282 	MOVF  b,W,0
000818 039B       02283 	MULWF credit+1,1
00081A 50F3       02284 	MOVF  PRODL,W,0
00081C 2614       02285 	ADDWF y2+1,1,0
00081E 50F4       02286 	MOVF  PRODH,W,0
000820 2215       02287 	ADDWFC y2+2,1,0
                  02288 			;y2 /= x2;
000822 5013       02289 	MOVF  y2,W,0
000824 6E17       02290 	MOVWF C31tmp,0
000826 5014       02291 	MOVF  y2+1,W,0
000828 6E18       02292 	MOVWF C31tmp+1,0
00082A 5015       02293 	MOVF  y2+2,W,0
00082C 6E19       02294 	MOVWF C31tmp+2,0
00082E 6A1A       02295 	CLRF  C32rem,0
000830 6A1B       02296 	CLRF  C32rem+1,0
000832 0E18       02297 	MOVLW 24
000834 6E16       02298 	MOVWF C30cnt,0
000836 3617       02299 m072	RLCF  C31tmp,1,0
000838 3618       02300 	RLCF  C31tmp+1,1,0
00083A 3619       02301 	RLCF  C31tmp+2,1,0
00083C 361A       02302 	RLCF  C32rem,1,0
00083E 361B       02303 	RLCF  C32rem+1,1,0
000840 E205       02304 	BC    m073
000842 500D       02305 	MOVF  x2,W,0
000844 5C1A       02306 	SUBWF C32rem,W,0
000846 500E       02307 	MOVF  x2+1,W,0
000848 581B       02308 	SUBWFB C32rem+1,W,0
00084A E305       02309 	BNC   m074
00084C 500D       02310 m073	MOVF  x2,W,0
00084E 5E1A       02311 	SUBWF C32rem,1,0
000850 500E       02312 	MOVF  x2+1,W,0
000852 5A1B       02313 	SUBWFB C32rem+1,1,0
000854 80D8       02314 	BSF   0xFD8,Carry,0
000856 3613       02315 m074	RLCF  y2,1,0
000858 3614       02316 	RLCF  y2+1,1,0
00085A 3615       02317 	RLCF  y2+2,1,0
00085C 2E16       02318 	DECFSZ C30cnt,1,0
00085E D7EB       02319 	BRA   m072
                  02320 			;value +=  y2;
000860 5013       02321 	MOVF  y2,W,0
000862 27B2       02322 	ADDWF value,1,1
000864 5014       02323 	MOVF  y2+1,W,0
000866 23B3       02324 	ADDWFC value+1,1,1
000868 5015       02325 	MOVF  y2+2,W,0
00086A 23B4       02326 	ADDWFC value+2,1,1
                  02327 			;}
00086C 0012       02328 	RETURN
                  02329 			;
                  02330 			;/*-----------------------------------------*/
                  02331 			;
                  02332 			;void time_to_cr(char ch)
                  02333 			;{
                  02334 time_to_cr
00086E 6E09       02335 	MOVWF ch_3,0
                  02336 			;char overload;
                  02337 			;uns8 addr;
                  02338 			;uns8 val;
                  02339 			;uns16 x2;
                  02340 			;uns16 a,b;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 40

ADDR   CODE       LINE  SOURCE

                  02341 			;uns16 cred;
                  02342 			;uns24 y2;
                  02343 			;
                  02344 			;overload = 0;
000870 6A0A       02345 	CLRF  overload_2,0
                  02346 			;if(ch == 1) 
000872 2C09       02347 	DECFSZ ch_3,W,0
000874 D008       02348 	BRA   m075
                  02349 			; {
                  02350 			; addr = eeprom_start;
000876 6A0B       02351 	CLRF  addr_3,0
                  02352 			; cred = cred1;
000878 C0A3 F013  02353 	MOVFF cred1,cred
00087C C0A4 F014  02354 	MOVFF cred1+1,cred+1
                  02355 			; cred1 = 0;
000880 6BA3       02356 	CLRF  cred1,1
000882 6BA4       02357 	CLRF  cred1+1,1
000884 6BA5       02358 	CLRF  cred1+2,1
                  02359 			; }
                  02360 			;if(ch == 2) 
000886 0E02       02361 m075	MOVLW 2
000888 6209       02362 	CPFSEQ ch_3,0
00088A D009       02363 	BRA   m076
                  02364 			; {
                  02365 			; addr = eeprom_start + 5;
00088C 0E05       02366 	MOVLW 5
00088E 6E0B       02367 	MOVWF addr_3,0
                  02368 			; cred = cred2;
000890 C0A6 F013  02369 	MOVFF cred2,cred
000894 C0A7 F014  02370 	MOVFF cred2+1,cred+1
                  02371 			; cred2 = 0;
000898 6BA6       02372 	CLRF  cred2,1
00089A 6BA7       02373 	CLRF  cred2+1,1
00089C 6BA8       02374 	CLRF  cred2+2,1
                  02375 			; }
                  02376 			;if(ch == 3) 
00089E 0E03       02377 m076	MOVLW 3
0008A0 6209       02378 	CPFSEQ ch_3,0
0008A2 D009       02379 	BRA   m077
                  02380 			; {
                  02381 			; addr = eeprom_start + 0x60;
0008A4 0E60       02382 	MOVLW 96
0008A6 6E0B       02383 	MOVWF addr_3,0
                  02384 			; cred = cred3;
0008A8 C0A9 F013  02385 	MOVFF cred3,cred
0008AC C0AA F014  02386 	MOVFF cred3+1,cred+1
                  02387 			; cred3 = 0;
0008B0 6BA9       02388 	CLRF  cred3,1
0008B2 6BAA       02389 	CLRF  cred3+1,1
0008B4 6BAB       02390 	CLRF  cred3+2,1
                  02391 			; }
                  02392 			;if(ch == 4) 
0008B6 0E04       02393 m077	MOVLW 4
0008B8 6209       02394 	CPFSEQ ch_3,0
0008BA D009       02395 	BRA   m078
                  02396 			; {
                  02397 			; addr = eeprom_start + 0x65;
0008BC 0E65       02398 	MOVLW 101
0008BE 6E0B       02399 	MOVWF addr_3,0
                  02400 			; cred = cred4;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 41

ADDR   CODE       LINE  SOURCE

0008C0 C0AC F013  02401 	MOVFF cred4,cred
0008C4 C0AD F014  02402 	MOVFF cred4+1,cred+1
                  02403 			; cred4 = 0;
0008C8 6BAC       02404 	CLRF  cred4,1
0008CA 6BAD       02405 	CLRF  cred4+1,1
0008CC 6BAE       02406 	CLRF  cred4+2,1
                  02407 			; }
                  02408 			;if(ch == 6) 
0008CE 0E06       02409 m078	MOVLW 6
0008D0 6209       02410 	CPFSEQ ch_3,0
0008D2 D009       02411 	BRA   m079
                  02412 			; {
                  02413 			; addr = eeprom_start + 0x0B;
0008D4 0E0B       02414 	MOVLW 11
0008D6 6E0B       02415 	MOVWF addr_3,0
                  02416 			; cred = cred6;
0008D8 C0AF F013  02417 	MOVFF cred6,cred
0008DC C0B0 F014  02418 	MOVFF cred6+1,cred+1
                  02419 			; cred6 = 0;
0008E0 6BAF       02420 	CLRF  cred6,1
0008E2 6BB0       02421 	CLRF  cred6+1,1
0008E4 6BB1       02422 	CLRF  cred6+2,1
                  02423 			; }
                  02424 			;
                  02425 			;addr += 2;
0008E6 0E02       02426 m079	MOVLW 2
0008E8 260B       02427 	ADDWF addr_3,1,0
                  02428 			;for(ind=0;ind<10;ind++)
0008EA 6A2C       02429 	CLRF  ind,0
0008EC 0E0A       02430 m080	MOVLW 10
0008EE 602C       02431 	CPFSLT ind,0
0008F0 D038       02432 	BRA   m083
                  02433 			; {
                  02434 			; val = readEEPROM(addr);  
0008F2 500B       02435 	MOVF  addr_3,W,0
0008F4 DDDC       02436 	RCALL readEEPROM
0008F6 6E0C       02437 	MOVWF val_2,0
                  02438 			; if(val == 0xFF) 
0008F8 3C0C       02439 	INCFSZ val_2,W,0
0008FA D003       02440 	BRA   m081
                  02441 			;  {
                  02442 			;  overload = 1;
0008FC 0E01       02443 	MOVLW 1
0008FE 6E0A       02444 	MOVWF overload_2,0
                  02445 			;  break; 
000900 D030       02446 	BRA   m083
                  02447 			;  }
                  02448 			; y2 = (uns24)val * 3600;
000902 500C       02449 m081	MOVF  val_2,W,0
000904 0D10       02450 	MULLW 16
000906 CFF3 F015  02451 	MOVFF PRODL,y2_2
00090A CFF4 F016  02452 	MOVFF PRODH,y2_2+1
00090E 6A17       02453 	CLRF  y2_2+2,0
000910 0D0E       02454 	MULLW 14
000912 50F3       02455 	MOVF  PRODL,W,0
000914 2616       02456 	ADDWF y2_2+1,1,0
000916 50F4       02457 	MOVF  PRODH,W,0
000918 2217       02458 	ADDWFC y2_2+2,1,0
                  02459 			; val = readEEPROM(addr+1);  
00091A 280B       02460 	INCF  addr_3,W,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 42

ADDR   CODE       LINE  SOURCE

00091C DDC8       02461 	RCALL readEEPROM
00091E 6E0C       02462 	MOVWF val_2,0
                  02463 			; temp = (uns16)val * 60;  y2 += (uns24)temp;
000920 6B9E       02464 	CLRF  temp+2,1
000922 0D3C       02465 	MULLW 60
000924 CFF3 F09C  02466 	MOVFF PRODL,temp
000928 CFF4 F09D  02467 	MOVFF PRODH,temp+1
00092C 519C       02468 	MOVF  temp,W,1
00092E 2615       02469 	ADDWF y2_2,1,0
000930 519D       02470 	MOVF  temp+1,W,1
000932 2216       02471 	ADDWFC y2_2+1,1,0
000934 519E       02472 	MOVF  temp+2,W,1
000936 2217       02473 	ADDWFC y2_2+2,1,0
                  02474 			; val = readEEPROM(addr+2);  y2 += (uns24)val;
000938 0E02       02475 	MOVLW 2
00093A 240B       02476 	ADDWF addr_3,W,0
00093C DDB8       02477 	RCALL readEEPROM
00093E 6E0C       02478 	MOVWF val_2,0
000940 2615       02479 	ADDWF y2_2,1,0
000942 0E00       02480 	MOVLW 0
000944 2216       02481 	ADDWFC y2_2+1,1,0
000946 2217       02482 	ADDWFC y2_2+2,1,0
                  02483 			; if(cred <= y2) break;
000948 5017       02484 	MOVF  y2_2+2,W,0
00094A E10B       02485 	BNZ   m083
00094C 5014       02486 	MOVF  cred+1,W,0
00094E 5C16       02487 	SUBWF y2_2+1,W,0
000950 E304       02488 	BNC   m082
000952 E107       02489 	BNZ   m083
000954 5013       02490 	MOVF  cred,W,0
000956 5C15       02491 	SUBWF y2_2,W,0
000958 E204       02492 	BC    m083
                  02493 			; addr += 0x10;
00095A 0E10       02494 m082	MOVLW 16
00095C 260B       02495 	ADDWF addr_3,1,0
                  02496 			; }
00095E 2A2C       02497 	INCF  ind,1,0
000960 D7C5       02498 	BRA   m080
                  02499 			;
                  02500 			;if(overload) addr -= 0x10;
000962 520A       02501 m083	MOVF  overload_2,1,0
000964 E002       02502 	BZ    m084
000966 0E10       02503 	MOVLW 16
000968 5E0B       02504 	SUBWF addr_3,1,0
                  02505 			;addr -= 2;
00096A 0E02       02506 m084	MOVLW 2
00096C 5E0B       02507 	SUBWF addr_3,1,0
                  02508 			;val = readEEPROM(addr); 
00096E 500B       02509 	MOVF  addr_3,W,0
000970 DD9E       02510 	RCALL readEEPROM
000972 6E0C       02511 	MOVWF val_2,0
                  02512 			;x2 = (uns16)val * 100;
000974 0D64       02513 	MULLW 100
000976 CFF3 F00D  02514 	MOVFF PRODL,x2_2
00097A CFF4 F00E  02515 	MOVFF PRODH,x2_2+1
                  02516 			;val = readEEPROM(addr+1); 
00097E 280B       02517 	INCF  addr_3,W,0
000980 DD96       02518 	RCALL readEEPROM
000982 6E0C       02519 	MOVWF val_2,0
                  02520 			;x2 +=(uns16)val;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 43

ADDR   CODE       LINE  SOURCE

000984 260D       02521 	ADDWF x2_2,1,0
000986 0E00       02522 	MOVLW 0
000988 220E       02523 	ADDWFC x2_2+1,1,0
                  02524 			;
                  02525 			;a = y2 / x2;
00098A 5015       02526 	MOVF  y2_2,W,0
00098C 6E19       02527 	MOVWF C40tmp,0
00098E 5016       02528 	MOVF  y2_2+1,W,0
000990 6E1A       02529 	MOVWF C40tmp+1,0
000992 5017       02530 	MOVF  y2_2+2,W,0
000994 6E1B       02531 	MOVWF C40tmp+2,0
000996 6A1C       02532 	CLRF  C41rem,0
000998 6A1D       02533 	CLRF  C41rem+1,0
00099A 0E18       02534 	MOVLW 24
00099C 6E18       02535 	MOVWF C39cnt,0
00099E 3619       02536 m085	RLCF  C40tmp,1,0
0009A0 361A       02537 	RLCF  C40tmp+1,1,0
0009A2 361B       02538 	RLCF  C40tmp+2,1,0
0009A4 361C       02539 	RLCF  C41rem,1,0
0009A6 361D       02540 	RLCF  C41rem+1,1,0
0009A8 E205       02541 	BC    m086
0009AA 500D       02542 	MOVF  x2_2,W,0
0009AC 5C1C       02543 	SUBWF C41rem,W,0
0009AE 500E       02544 	MOVF  x2_2+1,W,0
0009B0 581D       02545 	SUBWFB C41rem+1,W,0
0009B2 E305       02546 	BNC   m087
0009B4 500D       02547 m086	MOVF  x2_2,W,0
0009B6 5E1C       02548 	SUBWF C41rem,1,0
0009B8 500E       02549 	MOVF  x2_2+1,W,0
0009BA 5A1D       02550 	SUBWFB C41rem+1,1,0
0009BC 80D8       02551 	BSF   0xFD8,Carry,0
0009BE 360F       02552 m087	RLCF  a_2,1,0
0009C0 3610       02553 	RLCF  a_2+1,1,0
0009C2 2E18       02554 	DECFSZ C39cnt,1,0
0009C4 D7EC       02555 	BRA   m085
                  02556 			;b = y2 % x2;
0009C6 5015       02557 	MOVF  y2_2,W,0
0009C8 6E19       02558 	MOVWF C43tmp,0
0009CA 5016       02559 	MOVF  y2_2+1,W,0
0009CC 6E1A       02560 	MOVWF C43tmp+1,0
0009CE 5017       02561 	MOVF  y2_2+2,W,0
0009D0 6E1B       02562 	MOVWF C43tmp+2,0
0009D2 6A11       02563 	CLRF  b_2,0
0009D4 6A12       02564 	CLRF  b_2+1,0
0009D6 0E18       02565 	MOVLW 24
0009D8 6E18       02566 	MOVWF C42cnt,0
0009DA 3619       02567 m088	RLCF  C43tmp,1,0
0009DC 361A       02568 	RLCF  C43tmp+1,1,0
0009DE 361B       02569 	RLCF  C43tmp+2,1,0
0009E0 3611       02570 	RLCF  b_2,1,0
0009E2 3612       02571 	RLCF  b_2+1,1,0
0009E4 E205       02572 	BC    m089
0009E6 500D       02573 	MOVF  x2_2,W,0
0009E8 5C11       02574 	SUBWF b_2,W,0
0009EA 500E       02575 	MOVF  x2_2+1,W,0
0009EC 5812       02576 	SUBWFB b_2+1,W,0
0009EE E304       02577 	BNC   m090
0009F0 500D       02578 m089	MOVF  x2_2,W,0
0009F2 5E11       02579 	SUBWF b_2,1,0
0009F4 500E       02580 	MOVF  x2_2+1,W,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 44

ADDR   CODE       LINE  SOURCE

0009F6 5A12       02581 	SUBWFB b_2+1,1,0
0009F8 2E18       02582 m090	DECFSZ C42cnt,1,0
0009FA D7EF       02583 	BRA   m088
                  02584 			;y2 = (uns24)cred * x2;
0009FC 5014       02585 	MOVF  cred+1,W,0
0009FE 020E       02586 	MULWF x2_2+1,0
000A00 CFF3 F017  02587 	MOVFF PRODL,y2_2+2
000A04 5013       02588 	MOVF  cred,W,0
000A06 020D       02589 	MULWF x2_2,0
000A08 CFF3 F015  02590 	MOVFF PRODL,y2_2
000A0C CFF4 F016  02591 	MOVFF PRODH,y2_2+1
000A10 5014       02592 	MOVF  cred+1,W,0
000A12 020D       02593 	MULWF x2_2,0
000A14 50F3       02594 	MOVF  PRODL,W,0
000A16 2616       02595 	ADDWF y2_2+1,1,0
000A18 50F4       02596 	MOVF  PRODH,W,0
000A1A 2217       02597 	ADDWFC y2_2+2,1,0
000A1C 5013       02598 	MOVF  cred,W,0
000A1E 020E       02599 	MULWF x2_2+1,0
000A20 50F3       02600 	MOVF  PRODL,W,0
000A22 2616       02601 	ADDWF y2_2+1,1,0
000A24 50F4       02602 	MOVF  PRODH,W,0
000A26 2217       02603 	ADDWFC y2_2+2,1,0
                  02604 			;temp = (uns24)a * x2;
000A28 5010       02605 	MOVF  a_2+1,W,0
000A2A 020E       02606 	MULWF x2_2+1,0
000A2C CFF3 F09E  02607 	MOVFF PRODL,temp+2
000A30 500F       02608 	MOVF  a_2,W,0
000A32 020D       02609 	MULWF x2_2,0
000A34 CFF3 F09C  02610 	MOVFF PRODL,temp
000A38 CFF4 F09D  02611 	MOVFF PRODH,temp+1
000A3C 5010       02612 	MOVF  a_2+1,W,0
000A3E 020D       02613 	MULWF x2_2,0
000A40 50F3       02614 	MOVF  PRODL,W,0
000A42 279D       02615 	ADDWF temp+1,1,1
000A44 50F4       02616 	MOVF  PRODH,W,0
000A46 239E       02617 	ADDWFC temp+2,1,1
000A48 500F       02618 	MOVF  a_2,W,0
000A4A 020E       02619 	MULWF x2_2+1,0
000A4C 50F3       02620 	MOVF  PRODL,W,0
000A4E 279D       02621 	ADDWF temp+1,1,1
000A50 50F4       02622 	MOVF  PRODH,W,0
000A52 239E       02623 	ADDWFC temp+2,1,1
                  02624 			;x2 = temp + b;
000A54 5011       02625 	MOVF  b_2,W,0
000A56 259C       02626 	ADDWF temp,W,1
000A58 6E0D       02627 	MOVWF x2_2,0
000A5A 5012       02628 	MOVF  b_2+1,W,0
000A5C 219D       02629 	ADDWFC temp+1,W,1
000A5E 6E0E       02630 	MOVWF x2_2+1,0
                  02631 			;credit = y2 / x2;
000A60 5015       02632 	MOVF  y2_2,W,0
000A62 6E19       02633 	MOVWF C49tmp,0
000A64 5016       02634 	MOVF  y2_2+1,W,0
000A66 6E1A       02635 	MOVWF C49tmp+1,0
000A68 5017       02636 	MOVF  y2_2+2,W,0
000A6A 6E1B       02637 	MOVWF C49tmp+2,0
000A6C 6A1C       02638 	CLRF  C50rem,0
000A6E 6A1D       02639 	CLRF  C50rem+1,0
000A70 0E18       02640 	MOVLW 24
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 45

ADDR   CODE       LINE  SOURCE

000A72 6E18       02641 	MOVWF C48cnt,0
000A74 3619       02642 m091	RLCF  C49tmp,1,0
000A76 361A       02643 	RLCF  C49tmp+1,1,0
000A78 361B       02644 	RLCF  C49tmp+2,1,0
000A7A 361C       02645 	RLCF  C50rem,1,0
000A7C 361D       02646 	RLCF  C50rem+1,1,0
000A7E E205       02647 	BC    m092
000A80 500D       02648 	MOVF  x2_2,W,0
000A82 5C1C       02649 	SUBWF C50rem,W,0
000A84 500E       02650 	MOVF  x2_2+1,W,0
000A86 581D       02651 	SUBWFB C50rem+1,W,0
000A88 E305       02652 	BNC   m093
000A8A 500D       02653 m092	MOVF  x2_2,W,0
000A8C 5E1C       02654 	SUBWF C50rem,1,0
000A8E 500E       02655 	MOVF  x2_2+1,W,0
000A90 5A1D       02656 	SUBWFB C50rem+1,1,0
000A92 80D8       02657 	BSF   0xFD8,Carry,0
000A94 379A       02658 m093	RLCF  credit,1,1
000A96 379B       02659 	RLCF  credit+1,1,1
000A98 2E18       02660 	DECFSZ C48cnt,1,0
000A9A D7EC       02661 	BRA   m091
                  02662 			;}
000A9C 0012       02663 	RETURN
                  02664 
                  02665   ; FILE lcd.h
                  02666 			;void lcd_write(uns8);				// write a byte to LCD in 4 bit mode 
                  02667 			;void lcd_setup(char);				// intialize the LCD - call before anything else 
                  02668 			;void lcd_goto(uns8 pos);			// Go to the specified position
                  02669 			;void lcd_clear(void);				// Clear and home the LCD
                  02670 			;void lcd_puts(const char *);		// write a string of characters to the LCD
                  02671 			;void lcd_credit(void);				// write credit
                  02672 			;void lcd_time(void);				// write remaining time
                  02673 			;void lcd_money(void);
                  02674 			;void lcd_out(void);					// out of service
                  02675 			;void st_clear(void);
                  02676 			;void print_total(void);
                  02677 			;void lcd_puts_cyr(const char *);	// write a CYR string of characters to the LCD
                  02678 			;uns8 lat2cyr(char symb);			// convert LAT 2 CYR
                  02679 			;
                  02680 			;/*----------------------------------------*/
                  02681 			;
                  02682 			;#define LINE1   0x80
                  02683 			;#define LINE2   0xC0
                  02684 			;//#define LINE3   0x90
                  02685 			;//#define LINE4   0xD0
                  02686 			;
                  02687 			;const uns8 CYR[26] = {0x41, 0xA0, 0xE1, 0xE0, 0x45, 0xAA, 0xA1, 0x58, 0xA5, 0xA3, 0x4B, 0xA7, 0x4D, 0x48, 0x4F, 0xA8, 0xB0, 0x50, 0x43, 0x54, 0xA9, 0x42, 0xB1,
                            0xAD, 0xAB, 0xA4};  
                  02688 			;const uns8 cyr[26] = {0x61, 0xB2, 0xE5, 0xE3, 0x65, 0xE4, 0xb4, 0x78, 0xB8, 0xB6, 0xBA, 0xBB, 0xBC, 0xBD, 0x6F, 0xBE, 0xC6, 0x70, 0x63, 0xBF, 0x79, 0xB3, 0xC7,
                            0xC2, 0xC0, 0xB7};
                  02689 			;
                  02690 			;
                  02691 			;/*
                  02692 			;                   16-char display   
                  02693 			;                   ===============   
                  02694 			;
                  02695 			;1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16
                  02696 			;
                  02697 			;80	81	82	83	84	85	86	87	88	89	8A	8B	8C	8D	8E	8F
                  02698 			;C0	C1	C2	C3	C4	C5	C6	C7	C8	C9	CA	CB	CC	CD	CE	CF
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 46

ADDR   CODE       LINE  SOURCE

                  02699 			;90	91	92	93	94	95	96	97	98	99	9A	9B	9C	9D	9E	9F
                  02700 			;D0	D1	D2	D3	D4	D5	D6	D7	D8	D9	DA	DB	DC	DD	DE	DF
                  02701 			;
                  02702 			;*/
                  02703 			;
                  02704 			;/*----------------------------------------*/
                  02705 			;
                  02706 			;void lcd_write(uns8 c)
                  02707 			;{
                  02708 lcd_write
000A9E 6E1C       02709 	MOVWF c,0
                  02710 			;char tmp;
                  02711 			;	
                  02712 			;tmp = c & 0xF0;
000AA0 0EF0       02713 	MOVLW 240
000AA2 141C       02714 	ANDWF c,W,0
000AA4 6E1D       02715 	MOVWF tmp_3,0
                  02716 			;tmp >>= 2;
000AA6 90D8       02717 	BCF   0xFD8,Carry,0
000AA8 321D       02718 	RRCF  tmp_3,1,0
000AAA 90D8       02719 	BCF   0xFD8,Carry,0
000AAC 321D       02720 	RRCF  tmp_3,1,0
                  02721 			;PORTA = tmp;
000AAE C01D FF80  02722 	MOVFF tmp_3,PORTA
                  02723 			;LCD_EN = 1;
000AB2 8084       02724 	BSF   0xF84,LCD_EN,0
                  02725 			;nop2();
000AB4 D000       02726 	BRA   m094
                  02727 			;nop2();
000AB6 D000       02728 m094	BRA   m095
                  02729 			;LCD_EN = 0;
000AB8 9084       02730 m095	BCF   0xF84,LCD_EN,0
                  02731 			;
                  02732 			;tmp = c & 0x0F;
000ABA 0E0F       02733 	MOVLW 15
000ABC 141C       02734 	ANDWF c,W,0
000ABE 6E1D       02735 	MOVWF tmp_3,0
                  02736 			;tmp <<= 2;
000AC0 90D8       02737 	BCF   0xFD8,Carry,0
000AC2 361D       02738 	RLCF  tmp_3,1,0
000AC4 90D8       02739 	BCF   0xFD8,Carry,0
000AC6 361D       02740 	RLCF  tmp_3,1,0
                  02741 			;PORTA = tmp;
000AC8 C01D FF80  02742 	MOVFF tmp_3,PORTA
                  02743 			;LCD_EN = 1;
000ACC 8084       02744 	BSF   0xF84,LCD_EN,0
                  02745 			;nop2();
000ACE D000       02746 	BRA   m096
                  02747 			;nop2();
000AD0 D000       02748 m096	BRA   m097
                  02749 			;LCD_EN = 0;
000AD2 9084       02750 m097	BCF   0xF84,LCD_EN,0
                  02751 			;delay(3);
000AD4 0E03       02752 	MOVLW 3
000AD6 EF3D F001  02753 	GOTO  delay
                  02754 			;}
                  02755 			;
                  02756 			;/*--------------------------------------*/
                  02757 			;
                  02758 			;void lcd_setup(char mode)
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 47

ADDR   CODE       LINE  SOURCE

                  02759 			;{
                  02760 lcd_setup
000ADA 6E11       02761 	MOVWF mode,0
                  02762 			;LCD_RS = 0;							// write control bytes
000ADC 9284       02763 	BCF   0xF84,LCD_RS,0
                  02764 			;lcd_write(0x28); delay(4);			// 4 bit mode, 2 lines, 5x8 font	
000ADE 0E28       02765 	MOVLW 40
000AE0 DFDE       02766 	RCALL lcd_write
000AE2 0E04       02767 	MOVLW 4
000AE4 EC3D F001  02768 	CALL  delay
                  02769 			;if(mode) lcd_write(0x0F);			// blink on; cursor on
000AE8 5211       02770 	MOVF  mode,1,0
000AEA E003       02771 	BZ    m098
000AEC 0E0F       02772 	MOVLW 15
000AEE DFD7       02773 	RCALL lcd_write
                  02774 			;else lcd_write(0x0C); 				// blink off, cursor off
000AF0 D002       02775 	BRA   m099
000AF2 0E0C       02776 m098	MOVLW 12
000AF4 DFD4       02777 	RCALL lcd_write
                  02778 			;delay(4);							// config display
000AF6 0E04       02779 m099	MOVLW 4
000AF8 EC3D F001  02780 	CALL  delay
                  02781 			;// lcd_write(0x01); delay(4);			// clear display
                  02782 			;lcd_write(0x06); delay(4);			// entry mode
000AFC 0E06       02783 	MOVLW 6
000AFE DFCF       02784 	RCALL lcd_write
000B00 0E04       02785 	MOVLW 4
000B02 EF3D F001  02786 	GOTO  delay
                  02787 			;// lcd_write(0x01); delay(20);			// clear display
                  02788 			;}
                  02789 			;
                  02790 			;/*--------------------------------------*/
                  02791 			;
                  02792 			;void lcd_goto(uns8 pos)
                  02793 			;{
                  02794 lcd_goto
000B06 6E14       02795 	MOVWF pos,0
                  02796 			;	LCD_RS = 0;
000B08 9284       02797 	BCF   0xF84,LCD_RS,0
                  02798 			;	lcd_write(pos);
000B0A D7C9       02799 	BRA   lcd_write
                  02800 			;}
                  02801 			;
                  02802 			;/*--------------------------------------*/
                  02803 			;
                  02804 			;void lcd_clear(void)
                  02805 			;{
                  02806 lcd_clear
                  02807 			;	LCD_RS = 0;
000B0C 9284       02808 	BCF   0xF84,LCD_RS,0
                  02809 			;	lcd_write(0x01);
000B0E 0E01       02810 	MOVLW 1
000B10 DFC6       02811 	RCALL lcd_write
                  02812 			;	delay(1);
000B12 0E01       02813 	MOVLW 1
000B14 EF3D F001  02814 	GOTO  delay
                  02815 			;}
                  02816 			;
                  02817 			;/*--------------------------------------*/
                  02818 			;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 48

ADDR   CODE       LINE  SOURCE

                  02819 			;void lcd_puts(const char *s)
                  02820 			;{
                  02821 lcd_puts
                  02822 			;	LCD_RS = 1;						// write characters
000B18 8284       02823 	BSF   0xF84,LCD_RS,0
                  02824 			;	while(*s) lcd_write(*s++);
000B1A C014 F016  02825 m100	MOVFF s,ci_2
000B1E C015 F017  02826 	MOVFF s+1,ci_2+1
000B22 EC84 F018  02827 	CALL  _const2
000B26 0A00       02828 	XORLW 0
000B28 E00B       02829 	BZ    m101
000B2A C014 F016  02830 	MOVFF s,ci_2
000B2E C015 F017  02831 	MOVFF s+1,ci_2+1
000B32 EC84 F018  02832 	CALL  _const2
000B36 DFB3       02833 	RCALL lcd_write
000B38 2A14       02834 	INCF  s,1,0
000B3A 0E00       02835 	MOVLW 0
000B3C 2215       02836 	ADDWFC s+1,1,0
000B3E D7ED       02837 	BRA   m100
                  02838 			;}
000B40 0012       02839 m101	RETURN
                  02840 			;
                  02841 			;
                  02842 			;/*--------------------------------------*/
                  02843 			;
                  02844 			;
                  02845 			;uns8 lat2cyr(char symb)
                  02846 			;{
                  02847 lat2cyr
000B42 6E13       02848 	MOVWF symb,0
                  02849 			;char elem;
                  02850 			;uns8 scyr;
                  02851 			;
                  02852 			;if((symb >= 'A') && (symb <= 'Z'))
000B44 0E40       02853 	MOVLW 64
000B46 6413       02854 	CPFSGT symb,0
000B48 D00B       02855 	BRA   m102
000B4A 0E5B       02856 	MOVLW 91
000B4C 6013       02857 	CPFSLT symb,0
000B4E D008       02858 	BRA   m102
                  02859 			;	{
                  02860 			;	elem = symb - 0x41;
000B50 0E41       02861 	MOVLW 65
000B52 5C13       02862 	SUBWF symb,W,0
000B54 6E14       02863 	MOVWF elem,0
                  02864 			;	scyr = CYR[elem];
000B56 0E73       02865 	MOVLW 115
000B58 2414       02866 	ADDWF elem,W,0
000B5A EC16 F01B  02867 	CALL  _const3
000B5E 6E15       02868 	MOVWF scyr,0
                  02869 			;	}	
                  02870 			;if(symb == '<') scyr = 0xA6;
000B60 0E3C       02871 m102	MOVLW 60
000B62 6213       02872 	CPFSEQ symb,0
000B64 D002       02873 	BRA   m103
000B66 0EA6       02874 	MOVLW 166
000B68 6E15       02875 	MOVWF scyr,0
                  02876 			;if(symb == '?') scyr = 0xAC;
000B6A 0E3F       02877 m103	MOVLW 63
000B6C 6213       02878 	CPFSEQ symb,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 49

ADDR   CODE       LINE  SOURCE

000B6E D002       02879 	BRA   m104
000B70 0EAC       02880 	MOVLW 172
000B72 6E15       02881 	MOVWF scyr,0
                  02882 			;if(symb == '&') scyr = 0xE2;
000B74 0E26       02883 m104	MOVLW 38
000B76 6213       02884 	CPFSEQ symb,0
000B78 D002       02885 	BRA   m105
000B7A 0EE2       02886 	MOVLW 226
000B7C 6E15       02887 	MOVWF scyr,0
                  02888 			;if(symb == '$') scyr = 0xC4;
000B7E 0E24       02889 m105	MOVLW 36
000B80 6213       02890 	CPFSEQ symb,0
000B82 D002       02891 	BRA   m106
000B84 0EC4       02892 	MOVLW 196
000B86 6E15       02893 	MOVWF scyr,0
                  02894 			;if((symb >= 'a') && (symb <= 'z'))
000B88 0E60       02895 m106	MOVLW 96
000B8A 6413       02896 	CPFSGT symb,0
000B8C D00B       02897 	BRA   m107
000B8E 0E7B       02898 	MOVLW 123
000B90 6013       02899 	CPFSLT symb,0
000B92 D008       02900 	BRA   m107
                  02901 			;	{
                  02902 			;	elem = symb - 0x61;
000B94 0E61       02903 	MOVLW 97
000B96 5C13       02904 	SUBWF symb,W,0
000B98 6E14       02905 	MOVWF elem,0
                  02906 			;	scyr = cyr[elem];
000B9A 0E8D       02907 	MOVLW 141
000B9C 2414       02908 	ADDWF elem,W,0
000B9E EC16 F01B  02909 	CALL  _const3
000BA2 6E15       02910 	MOVWF scyr,0
                  02911 			;	}
                  02912 			;if(symb == '>') scyr = 0xB9;
000BA4 0E3E       02913 m107	MOVLW 62
000BA6 6213       02914 	CPFSEQ symb,0
000BA8 D002       02915 	BRA   m108
000BAA 0EB9       02916 	MOVLW 185
000BAC 6E15       02917 	MOVWF scyr,0
                  02918 			;if(symb == '/') scyr = 0xC1;
000BAE 0E2F       02919 m108	MOVLW 47
000BB0 6213       02920 	CPFSEQ symb,0
000BB2 D002       02921 	BRA   m109
000BB4 0EC1       02922 	MOVLW 193
000BB6 6E15       02923 	MOVWF scyr,0
                  02924 			;if(symb == '%') scyr = 0xE6;
000BB8 0E25       02925 m109	MOVLW 37
000BBA 6213       02926 	CPFSEQ symb,0
000BBC D002       02927 	BRA   m110
000BBE 0EE6       02928 	MOVLW 230
000BC0 6E15       02929 	MOVWF scyr,0
                  02930 			;if(symb == '#') scyr = 0xC4;
000BC2 0E23       02931 m110	MOVLW 35
000BC4 6213       02932 	CPFSEQ symb,0
000BC6 D002       02933 	BRA   m111
000BC8 0EC4       02934 	MOVLW 196
000BCA 6E15       02935 	MOVWF scyr,0
                  02936 			;if(symb == ' ') scyr = 0x20;
000BCC 0E20       02937 m111	MOVLW 32
000BCE 6213       02938 	CPFSEQ symb,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 50

ADDR   CODE       LINE  SOURCE

000BD0 D001       02939 	BRA   m112
000BD2 6E15       02940 	MOVWF scyr,0
                  02941 			;return scyr;
000BD4 5015       02942 m112	MOVF  scyr,W,0
000BD6 0012       02943 	RETURN
                  02944 			;}
                  02945 			;
                  02946 			;/*--------------------------------------*/
                  02947 			;
                  02948 			;void lcd_puts_cyr(const char *s)
                  02949 			;{
                  02950 lcd_puts_cyr
                  02951 			;	char cyr_tmp;
                  02952 			;	LCD_RS = 1;						// write characters
000BD8 8284       02953 	BSF   0xF84,LCD_RS,0
                  02954 			;	while(*s)
000BDA 5011       02955 m113	MOVF  s_2,W,0
000BDC EC74 F01B  02956 	CALL  _const5
000BE0 0A00       02957 	XORLW 0
000BE2 E008       02958 	BZ    m114
                  02959 			;		{
                  02960 			;		cyr_tmp = lat2cyr(*s++);	
000BE4 5011       02961 	MOVF  s_2,W,0
000BE6 EC74 F01B  02962 	CALL  _const5
000BEA DFAB       02963 	RCALL lat2cyr
000BEC 6E12       02964 	MOVWF cyr_tmp,0
000BEE 2A11       02965 	INCF  s_2,1,0
                  02966 			;		lcd_write(cyr_tmp);
000BF0 DF56       02967 	RCALL lcd_write
                  02968 			;		}
000BF2 D7F3       02969 	BRA   m113
                  02970 			;}
000BF4 0012       02971 m114	RETURN
                  02972 			;
                  02973 			;
                  02974 			;/*--------------------------------------*/
                  02975 			;
                  02976 			;void lcd_credit(void)
                  02977 			;{
                  02978 lcd_credit
                  02979 			;stot = credit % 100;
000BF6 C09A F01C  02980 	MOVFF credit,arg1_5
000BFA C09B F01D  02981 	MOVFF credit+1,arg1_5+1
000BFE 0E64       02982 	MOVLW 100
000C00 ECDF F000  02983 	CALL  _remU16_8
000C04 6E31       02984 	MOVWF stot,0
                  02985 			;lev = credit / 100;
000C06 C09A F01C  02986 	MOVFF credit,arg1
000C0A C09B F01D  02987 	MOVFF credit+1,arg1+1
000C0E 0E64       02988 	MOVLW 100
000C10 ECCC F000  02989 	CALL  _divU16_8
000C14 C01C F032  02990 	MOVFF arg1,lev
                  02991 			;lcd_write(lev/10 + 0x30);
000C18 C032 F01C  02992 	MOVFF lev,arg1
000C1C 6A1D       02993 	CLRF  arg1+1,0
000C1E 0E0A       02994 	MOVLW 10
000C20 ECCC F000  02995 	CALL  _divU16_8
000C24 0E30       02996 	MOVLW 48
000C26 241C       02997 	ADDWF arg1,W,0
000C28 DF3A       02998 	RCALL lcd_write
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 51

ADDR   CODE       LINE  SOURCE

                  02999 			;lcd_write(lev%10 + 0x30);
000C2A C032 F01C  03000 	MOVFF lev,arg1_5
000C2E 6A1D       03001 	CLRF  arg1_5+1,0
000C30 0E0A       03002 	MOVLW 10
000C32 ECDF F000  03003 	CALL  _remU16_8
000C36 0F30       03004 	ADDLW 48
000C38 DF32       03005 	RCALL lcd_write
                  03006 			;lcd_write(DOT);
000C3A 0E2E       03007 	MOVLW 46
000C3C DF30       03008 	RCALL lcd_write
                  03009 			;lcd_write(stot/10 + 0x30);
000C3E C031 F01C  03010 	MOVFF stot,arg1
000C42 6A1D       03011 	CLRF  arg1+1,0
000C44 0E0A       03012 	MOVLW 10
000C46 ECCC F000  03013 	CALL  _divU16_8
000C4A 0E30       03014 	MOVLW 48
000C4C 241C       03015 	ADDWF arg1,W,0
000C4E DF27       03016 	RCALL lcd_write
                  03017 			;lcd_write(stot%10 + 0x30);
000C50 C031 F01C  03018 	MOVFF stot,arg1_5
000C54 6A1D       03019 	CLRF  arg1_5+1,0
000C56 0E0A       03020 	MOVLW 10
000C58 ECDF F000  03021 	CALL  _remU16_8
000C5C 0F30       03022 	ADDLW 48
000C5E DF1F       03023 	RCALL lcd_write
                  03024 			;lcd_puts_cyr(BGN_cyr);
000C60 0E7E       03025 	MOVLW 126
000C62 6E11       03026 	MOVWF s_2,0
000C64 D7B9       03027 	BRA   lcd_puts_cyr
                  03028 			;}
                  03029 			;
                  03030 			;/*--------------------------------------*/
                  03031 			;
                  03032 			;void lcd_time(void)
                  03033 			;{
                  03034 lcd_time
                  03035 			;lcd_write(hour/10 + 0x30);
000C66 C02E F01C  03036 	MOVFF hour,arg1
000C6A 6A1D       03037 	CLRF  arg1+1,0
000C6C 0E0A       03038 	MOVLW 10
000C6E ECCC F000  03039 	CALL  _divU16_8
000C72 0E30       03040 	MOVLW 48
000C74 241C       03041 	ADDWF arg1,W,0
000C76 DF13       03042 	RCALL lcd_write
                  03043 			;lcd_write(hour%10 + 0x30);
000C78 C02E F01C  03044 	MOVFF hour,arg1_5
000C7C 6A1D       03045 	CLRF  arg1_5+1,0
000C7E 0E0A       03046 	MOVLW 10
000C80 ECDF F000  03047 	CALL  _remU16_8
000C84 0F30       03048 	ADDLW 48
000C86 DF0B       03049 	RCALL lcd_write
                  03050 			;lcd_write(':');
000C88 0E3A       03051 	MOVLW 58
000C8A DF09       03052 	RCALL lcd_write
                  03053 			;lcd_write(min/10 + 0x30);
000C8C C02F F01C  03054 	MOVFF min,arg1
000C90 6A1D       03055 	CLRF  arg1+1,0
000C92 0E0A       03056 	MOVLW 10
000C94 ECCC F000  03057 	CALL  _divU16_8
000C98 0E30       03058 	MOVLW 48
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 52

ADDR   CODE       LINE  SOURCE

000C9A 241C       03059 	ADDWF arg1,W,0
000C9C DF00       03060 	RCALL lcd_write
                  03061 			;lcd_write(min%10 + 0x30);
000C9E C02F F01C  03062 	MOVFF min,arg1_5
000CA2 6A1D       03063 	CLRF  arg1_5+1,0
000CA4 0E0A       03064 	MOVLW 10
000CA6 ECDF F000  03065 	CALL  _remU16_8
000CAA 0F30       03066 	ADDLW 48
000CAC DEF8       03067 	RCALL lcd_write
                  03068 			;lcd_write(':');
000CAE 0E3A       03069 	MOVLW 58
000CB0 DEF6       03070 	RCALL lcd_write
                  03071 			;lcd_write(sec/10 + 0x30);
000CB2 C030 F01C  03072 	MOVFF sec,arg1
000CB6 6A1D       03073 	CLRF  arg1+1,0
000CB8 0E0A       03074 	MOVLW 10
000CBA ECCC F000  03075 	CALL  _divU16_8
000CBE 0E30       03076 	MOVLW 48
000CC0 241C       03077 	ADDWF arg1,W,0
000CC2 DEED       03078 	RCALL lcd_write
                  03079 			;lcd_write(sec%10 + 0x30);
000CC4 C030 F01C  03080 	MOVFF sec,arg1_5
000CC8 6A1D       03081 	CLRF  arg1_5+1,0
000CCA 0E0A       03082 	MOVLW 10
000CCC ECDF F000  03083 	CALL  _remU16_8
000CD0 0F30       03084 	ADDLW 48
000CD2 D6E5       03085 	BRA   lcd_write
                  03086 			;//lcd_write('s');
                  03087 			;}
                  03088 			;
                  03089 			;/*--------------------------------------*/
                  03090 			;
                  03091 			;void lcd_money(void)
                  03092 			;{
                  03093 lcd_money
                  03094 			;uns24 x;
                  03095 			;uns16 a;
                  03096 			;uns16 b;
                  03097 			;uns8 a1;
                  03098 			;uns8 b1;
                  03099 			;uns8 a2;
                  03100 			;uns8 b2;
                  03101 			;
                  03102 			;x = tot;
000CD4 C0B5 F011  03103 	MOVFF tot,x
000CD8 C0B6 F012  03104 	MOVFF tot+1,x+1
000CDC C0B7 F013  03105 	MOVFF tot+2,x+2
                  03106 			;a = x / 10000;
000CE0 5011       03107 	MOVF  x,W,0
000CE2 6E1D       03108 	MOVWF C52tmp,0
000CE4 5012       03109 	MOVF  x+1,W,0
000CE6 6E1E       03110 	MOVWF C52tmp+1,0
000CE8 5013       03111 	MOVF  x+2,W,0
000CEA 6E1F       03112 	MOVWF C52tmp+2,0
000CEC 6A20       03113 	CLRF  C53rem,0
000CEE 6A21       03114 	CLRF  C53rem+1,0
000CF0 0E18       03115 	MOVLW 24
000CF2 6E1C       03116 	MOVWF C51cnt,0
000CF4 361D       03117 m115	RLCF  C52tmp,1,0
000CF6 361E       03118 	RLCF  C52tmp+1,1,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 53

ADDR   CODE       LINE  SOURCE

000CF8 361F       03119 	RLCF  C52tmp+2,1,0
000CFA 3620       03120 	RLCF  C53rem,1,0
000CFC 3621       03121 	RLCF  C53rem+1,1,0
000CFE E205       03122 	BC    m116
000D00 0E10       03123 	MOVLW 16
000D02 5C20       03124 	SUBWF C53rem,W,0
000D04 0E27       03125 	MOVLW 39
000D06 5821       03126 	SUBWFB C53rem+1,W,0
000D08 E305       03127 	BNC   m117
000D0A 0E10       03128 m116	MOVLW 16
000D0C 5E20       03129 	SUBWF C53rem,1,0
000D0E 0E27       03130 	MOVLW 39
000D10 5A21       03131 	SUBWFB C53rem+1,1,0
000D12 80D8       03132 	BSF   0xFD8,Carry,0
000D14 3614       03133 m117	RLCF  a_3,1,0
000D16 3615       03134 	RLCF  a_3+1,1,0
000D18 2E1C       03135 	DECFSZ C51cnt,1,0
000D1A D7EC       03136 	BRA   m115
                  03137 			;b = x % 10000;
000D1C 5011       03138 	MOVF  x,W,0
000D1E 6E1D       03139 	MOVWF C55tmp,0
000D20 5012       03140 	MOVF  x+1,W,0
000D22 6E1E       03141 	MOVWF C55tmp+1,0
000D24 5013       03142 	MOVF  x+2,W,0
000D26 6E1F       03143 	MOVWF C55tmp+2,0
000D28 6A16       03144 	CLRF  b_3,0
000D2A 6A17       03145 	CLRF  b_3+1,0
000D2C 0E18       03146 	MOVLW 24
000D2E 6E1C       03147 	MOVWF C54cnt,0
000D30 361D       03148 m118	RLCF  C55tmp,1,0
000D32 361E       03149 	RLCF  C55tmp+1,1,0
000D34 361F       03150 	RLCF  C55tmp+2,1,0
000D36 3616       03151 	RLCF  b_3,1,0
000D38 3617       03152 	RLCF  b_3+1,1,0
000D3A E205       03153 	BC    m119
000D3C 0E10       03154 	MOVLW 16
000D3E 5C16       03155 	SUBWF b_3,W,0
000D40 0E27       03156 	MOVLW 39
000D42 5817       03157 	SUBWFB b_3+1,W,0
000D44 E304       03158 	BNC   m120
000D46 0E10       03159 m119	MOVLW 16
000D48 5E16       03160 	SUBWF b_3,1,0
000D4A 0E27       03161 	MOVLW 39
000D4C 5A17       03162 	SUBWFB b_3+1,1,0
000D4E 2E1C       03163 m120	DECFSZ C54cnt,1,0
000D50 D7EF       03164 	BRA   m118
                  03165 			;a1 = a / 100;
000D52 C014 F01C  03166 	MOVFF a_3,arg1
000D56 C015 F01D  03167 	MOVFF a_3+1,arg1+1
000D5A 0E64       03168 	MOVLW 100
000D5C ECCC F000  03169 	CALL  _divU16_8
000D60 C01C F018  03170 	MOVFF arg1,a1
                  03171 			;a2 = a % 100;
000D64 C014 F01C  03172 	MOVFF a_3,arg1_5
000D68 C015 F01D  03173 	MOVFF a_3+1,arg1_5+1
000D6C 0E64       03174 	MOVLW 100
000D6E ECDF F000  03175 	CALL  _remU16_8
000D72 6E1A       03176 	MOVWF a2,0
                  03177 			;b1 = b / 100;
000D74 C016 F01C  03178 	MOVFF b_3,arg1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 54

ADDR   CODE       LINE  SOURCE

000D78 C017 F01D  03179 	MOVFF b_3+1,arg1+1
000D7C 0E64       03180 	MOVLW 100
000D7E ECCC F000  03181 	CALL  _divU16_8
000D82 C01C F019  03182 	MOVFF arg1,b1
                  03183 			;b2 = b % 100;
000D86 C016 F01C  03184 	MOVFF b_3,arg1_5
000D8A C017 F01D  03185 	MOVFF b_3+1,arg1_5+1
000D8E 0E64       03186 	MOVLW 100
000D90 ECDF F000  03187 	CALL  _remU16_8
000D94 6E1B       03188 	MOVWF b2,0
                  03189 			;// lcd_write(a1/10 + 0x30);
                  03190 			;lcd_write(a1%10 + 0x30);
000D96 C018 F01C  03191 	MOVFF a1,arg1_5
000D9A 6A1D       03192 	CLRF  arg1_5+1,0
000D9C 0E0A       03193 	MOVLW 10
000D9E ECDF F000  03194 	CALL  _remU16_8
000DA2 0F30       03195 	ADDLW 48
000DA4 DE7C       03196 	RCALL lcd_write
                  03197 			;lcd_write(a2/10 + 0x30);
000DA6 C01A F01C  03198 	MOVFF a2,arg1
000DAA 6A1D       03199 	CLRF  arg1+1,0
000DAC 0E0A       03200 	MOVLW 10
000DAE ECCC F000  03201 	CALL  _divU16_8
000DB2 0E30       03202 	MOVLW 48
000DB4 241C       03203 	ADDWF arg1,W,0
000DB6 DE73       03204 	RCALL lcd_write
                  03205 			;lcd_write(a2%10 + 0x30);
000DB8 C01A F01C  03206 	MOVFF a2,arg1_5
000DBC 6A1D       03207 	CLRF  arg1_5+1,0
000DBE 0E0A       03208 	MOVLW 10
000DC0 ECDF F000  03209 	CALL  _remU16_8
000DC4 0F30       03210 	ADDLW 48
000DC6 DE6B       03211 	RCALL lcd_write
                  03212 			;lcd_write(b1/10 + 0x30);
000DC8 C019 F01C  03213 	MOVFF b1,arg1
000DCC 6A1D       03214 	CLRF  arg1+1,0
000DCE 0E0A       03215 	MOVLW 10
000DD0 ECCC F000  03216 	CALL  _divU16_8
000DD4 0E30       03217 	MOVLW 48
000DD6 241C       03218 	ADDWF arg1,W,0
000DD8 DE62       03219 	RCALL lcd_write
                  03220 			;lcd_write(b1%10 + 0x30);
000DDA C019 F01C  03221 	MOVFF b1,arg1_5
000DDE 6A1D       03222 	CLRF  arg1_5+1,0
000DE0 0E0A       03223 	MOVLW 10
000DE2 ECDF F000  03224 	CALL  _remU16_8
000DE6 0F30       03225 	ADDLW 48
000DE8 DE5A       03226 	RCALL lcd_write
                  03227 			;lcd_write('.');
000DEA 0E2E       03228 	MOVLW 46
000DEC DE58       03229 	RCALL lcd_write
                  03230 			;lcd_write(b2/10 + 0x30);
000DEE C01B F01C  03231 	MOVFF b2,arg1
000DF2 6A1D       03232 	CLRF  arg1+1,0
000DF4 0E0A       03233 	MOVLW 10
000DF6 ECCC F000  03234 	CALL  _divU16_8
000DFA 0E30       03235 	MOVLW 48
000DFC 241C       03236 	ADDWF arg1,W,0
000DFE DE4F       03237 	RCALL lcd_write
                  03238 			;lcd_write(b2%10 + 0x30);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 55

ADDR   CODE       LINE  SOURCE

000E00 C01B F01C  03239 	MOVFF b2,arg1_5
000E04 6A1D       03240 	CLRF  arg1_5+1,0
000E06 0E0A       03241 	MOVLW 10
000E08 ECDF F000  03242 	CALL  _remU16_8
000E0C 0F30       03243 	ADDLW 48
000E0E D647       03244 	BRA   lcd_write
                  03245 			;
                  03246 			;/*
                  03247 			;char xtmp;
                  03248 			;
                  03249 			;temp = tot / 100;
                  03250 			;lev  = temp / 10;
                  03251 			;xtmp = temp / 100 + 0x30; 	lcd_write(xtmp);	
                  03252 			;xtmp = lev % 10 + 0x30; 	lcd_write(xtmp);
                  03253 			;xtmp = temp % 10 + 0x30;	lcd_write(xtmp);
                  03254 			;lcd_write('.');
                  03255 			;stot = tot % 100;
                  03256 			;xtmp = stot / 10 + 0x30;	lcd_write(xtmp);
                  03257 			;xtmp = stot % 10 + 0x30;	lcd_write(xtmp);		
                  03258 			;*/	
                  03259 			;}
                  03260 			;
                  03261 			;/*--------------------------------------*/
                  03262 			;
                  03263 			;void lcd_out(void)
                  03264 			;{
                  03265 lcd_out
                  03266 			;lcd_clear();
000E10 DE7D       03267 	RCALL lcd_clear
                  03268 			;lcd_goto(LINE1);
000E12 0E80       03269 	MOVLW 128
000E14 DE78       03270 	RCALL lcd_goto
                  03271 			;lcd_puts(Welc);
000E16 6A14       03272 	CLRF  s,0
000E18 6A15       03273 	CLRF  s+1,0
000E1A DE7E       03274 	RCALL lcd_puts
                  03275 			;lcd_goto(LINE2);
000E1C 0EC0       03276 	MOVLW 192
000E1E DE73       03277 	RCALL lcd_goto
                  03278 			;lcd_puts(OUT);
000E20 0E4C       03279 	MOVLW 76
000E22 6E14       03280 	MOVWF s,0
000E24 6A15       03281 	CLRF  s+1,0
000E26 DE78       03282 	RCALL lcd_puts
                  03283 			;INHALL ^= 1;
000E28 7681       03284 	BTG   0xF81,INHALL,0
                  03285 			;}
000E2A 0012       03286 	RETURN
                  03287 			;
                  03288 			;/*--------------------------------------*/
                  03289 			;
                  03290 			;void st_clear(void)
                  03291 			;{
                  03292 st_clear
                  03293 			;lcd_goto(LINE2);
000E2C 0EC0       03294 	MOVLW 192
000E2E DE6B       03295 	RCALL lcd_goto
                  03296 			;lcd_puts(CLEAR);
000E30 0E7F       03297 	MOVLW 127
000E32 6E14       03298 	MOVWF s,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 56

ADDR   CODE       LINE  SOURCE

000E34 6A15       03299 	CLRF  s+1,0
000E36 DE70       03300 	RCALL lcd_puts
                  03301 			;ESCbut();
000E38 EFC0 F001  03302 	GOTO  ESCbut
                  03303 			;}
                  03304 			;
                  03305 			;/*--------------------------------------*/
                  03306 			;
                  03307 			;void print_total(void)
                  03308 			;{
                  03309 print_total
                  03310 			;lcd_goto(LINE2);
000E3C 0EC0       03311 	MOVLW 192
000E3E DE63       03312 	RCALL lcd_goto
                  03313 			;lcd_puts(Cash);
000E40 0E87       03314 	MOVLW 135
000E42 6E14       03315 	MOVWF s,0
000E44 6A15       03316 	CLRF  s+1,0
000E46 DE68       03317 	RCALL lcd_puts
                  03318 			;lcd_money();
000E48 DF45       03319 	RCALL lcd_money
                  03320 			;lcd_puts(BGN);
000E4A 0E49       03321 	MOVLW 73
000E4C 6E14       03322 	MOVWF s,0
000E4E 6A15       03323 	CLRF  s+1,0
000E50 DE63       03324 	RCALL lcd_puts
                  03325 			;ESCbut();	
000E52 EFC0 F001  03326 	GOTO  ESCbut
                  03327 			;}
                  03328 
                  03329   ; FILE menu.h
                  03330 			;void scan_menu(char);
                  03331 			;char en_to_dis(char,uns8);
                  03332 			;void test(char);
                  03333 			;
                  03334 			;/*-----------------------------------------------------*/
                  03335 			;
                  03336 			;void scan_menu(char point)
                  03337 			;{
                  03338 scan_menu
000E56 6E09       03339 	MOVWF point,0
                  03340 			;char k;
                  03341 			;char change;
                  03342 			;char esc;
                  03343 			;char digit;
                  03344 			;char dmax;
                  03345 			;uns8 lcd_adr;
                  03346 			;uns8 eadr;
                  03347 			;
                  03348 			;switch(point)
000E58 0A01       03349 	XORLW 1
000E5A B4D8       03350 	BTFSC 0xFD8,Zero_,0
000E5C D0A7       03351 	BRA   m121
000E5E 0A03       03352 	XORLW 3
000E60 B4D8       03353 	BTFSC 0xFD8,Zero_,0
000E62 D0BA       03354 	BRA   m124
000E64 0A01       03355 	XORLW 1
000E66 B4D8       03356 	BTFSC 0xFD8,Zero_,0
000E68 D0CD       03357 	BRA   m125
000E6A 0A07       03358 	XORLW 7
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 57

ADDR   CODE       LINE  SOURCE

000E6C B4D8       03359 	BTFSC 0xFD8,Zero_,0
000E6E D0E0       03360 	BRA   m126
000E70 0A01       03361 	XORLW 1
000E72 B4D8       03362 	BTFSC 0xFD8,Zero_,0
000E74 D0F3       03363 	BRA   m127
000E76 0A03       03364 	XORLW 3
000E78 B4D8       03365 	BTFSC 0xFD8,Zero_,0
000E7A D106       03366 	BRA   m128
000E7C 0A01       03367 	XORLW 1
000E7E B4D8       03368 	BTFSC 0xFD8,Zero_,0
000E80 D119       03369 	BRA   m129
000E82 0A0F       03370 	XORLW 15
000E84 B4D8       03371 	BTFSC 0xFD8,Zero_,0
000E86 D11E       03372 	BRA   m130
000E88 0A01       03373 	XORLW 1
000E8A B4D8       03374 	BTFSC 0xFD8,Zero_,0
000E8C D125       03375 	BRA   m131
000E8E 0A03       03376 	XORLW 3
000E90 B4D8       03377 	BTFSC 0xFD8,Zero_,0
000E92 D12C       03378 	BRA   m132
000E94 0A01       03379 	XORLW 1
000E96 B4D8       03380 	BTFSC 0xFD8,Zero_,0
000E98 D133       03381 	BRA   m133
000E9A 0A07       03382 	XORLW 7
000E9C B4D8       03383 	BTFSC 0xFD8,Zero_,0
000E9E D13A       03384 	BRA   m134
000EA0 0A01       03385 	XORLW 1
000EA2 B4D8       03386 	BTFSC 0xFD8,Zero_,0
000EA4 D140       03387 	BRA   m135
000EA6 0A03       03388 	XORLW 3
000EA8 B4D8       03389 	BTFSC 0xFD8,Zero_,0
000EAA D146       03390 	BRA   m136
000EAC 0A01       03391 	XORLW 1
000EAE B4D8       03392 	BTFSC 0xFD8,Zero_,0
000EB0 D14C       03393 	BRA   m137
000EB2 0A1F       03394 	XORLW 31
000EB4 B4D8       03395 	BTFSC 0xFD8,Zero_,0
000EB6 D152       03396 	BRA   m138
000EB8 0A01       03397 	XORLW 1
000EBA B4D8       03398 	BTFSC 0xFD8,Zero_,0
000EBC D158       03399 	BRA   m139
000EBE 0A03       03400 	XORLW 3
000EC0 B4D8       03401 	BTFSC 0xFD8,Zero_,0
000EC2 D179       03402 	BRA   m140
000EC4 0A01       03403 	XORLW 1
000EC6 B4D8       03404 	BTFSC 0xFD8,Zero_,0
000EC8 D17F       03405 	BRA   m141
000ECA 0A07       03406 	XORLW 7
000ECC B4D8       03407 	BTFSC 0xFD8,Zero_,0
000ECE D185       03408 	BRA   m142
000ED0 0A01       03409 	XORLW 1
000ED2 B4D8       03410 	BTFSC 0xFD8,Zero_,0
000ED4 D19D       03411 	BRA   m143
000ED6 0A03       03412 	XORLW 3
000ED8 B4D8       03413 	BTFSC 0xFD8,Zero_,0
000EDA D1B5       03414 	BRA   m144
000EDC 0A01       03415 	XORLW 1
000EDE B4D8       03416 	BTFSC 0xFD8,Zero_,0
000EE0 D1CD       03417 	BRA   m145
000EE2 0A0F       03418 	XORLW 15
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 58

ADDR   CODE       LINE  SOURCE

000EE4 B4D8       03419 	BTFSC 0xFD8,Zero_,0
000EE6 D1E5       03420 	BRA   m146
000EE8 0A01       03421 	XORLW 1
000EEA B4D8       03422 	BTFSC 0xFD8,Zero_,0
000EEC D1FD       03423 	BRA   m147
000EEE 0A03       03424 	XORLW 3
000EF0 B4D8       03425 	BTFSC 0xFD8,Zero_,0
000EF2 EFB3 F00E  03426 	GOTO  m265
000EF6 0A01       03427 	XORLW 1
000EF8 B4D8       03428 	BTFSC 0xFD8,Zero_,0
000EFA EFB3 F00E  03429 	GOTO  m265
000EFE 0A07       03430 	XORLW 7
000F00 B4D8       03431 	BTFSC 0xFD8,Zero_,0
000F02 EFB3 F00E  03432 	GOTO  m265
000F06 0A01       03433 	XORLW 1
000F08 B4D8       03434 	BTFSC 0xFD8,Zero_,0
000F0A D281       03435 	BRA   m148
000F0C 0A03       03436 	XORLW 3
000F0E B4D8       03437 	BTFSC 0xFD8,Zero_,0
000F10 D34B       03438 	BRA   m163
000F12 0A01       03439 	XORLW 1
000F14 B4D8       03440 	BTFSC 0xFD8,Zero_,0
000F16 D348       03441 	BRA   m163
000F18 0A3F       03442 	XORLW 63
000F1A B4D8       03443 	BTFSC 0xFD8,Zero_,0
000F1C D345       03444 	BRA   m163
000F1E 0A01       03445 	XORLW 1
000F20 B4D8       03446 	BTFSC 0xFD8,Zero_,0
000F22 D342       03447 	BRA   m163
000F24 0A03       03448 	XORLW 3
000F26 B4D8       03449 	BTFSC 0xFD8,Zero_,0
000F28 D33F       03450 	BRA   m163
000F2A 0A01       03451 	XORLW 1
000F2C B4D8       03452 	BTFSC 0xFD8,Zero_,0
000F2E D3D2       03453 	BRA   m179
000F30 0A07       03454 	XORLW 7
000F32 B4D8       03455 	BTFSC 0xFD8,Zero_,0
000F34 D3CF       03456 	BRA   m179
000F36 0A01       03457 	XORLW 1
000F38 B4D8       03458 	BTFSC 0xFD8,Zero_,0
000F3A D3CC       03459 	BRA   m179
000F3C 0A03       03460 	XORLW 3
000F3E B4D8       03461 	BTFSC 0xFD8,Zero_,0
000F40 D3C9       03462 	BRA   m179
000F42 0A01       03463 	XORLW 1
000F44 B4D8       03464 	BTFSC 0xFD8,Zero_,0
000F46 D3C6       03465 	BRA   m179
000F48 0A0F       03466 	XORLW 15
000F4A B4D8       03467 	BTFSC 0xFD8,Zero_,0
000F4C EF14 F00D  03468 	GOTO  m239
000F50 0A01       03469 	XORLW 1
000F52 B4D8       03470 	BTFSC 0xFD8,Zero_,0
000F54 EF1A F00D  03471 	GOTO  m240
000F58 0A03       03472 	XORLW 3
000F5A B4D8       03473 	BTFSC 0xFD8,Zero_,0
000F5C EF20 F00D  03474 	GOTO  m241
000F60 0A01       03475 	XORLW 1
000F62 B4D8       03476 	BTFSC 0xFD8,Zero_,0
000F64 EF26 F00D  03477 	GOTO  m242
000F68 0A07       03478 	XORLW 7
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 59

ADDR   CODE       LINE  SOURCE

000F6A B4D8       03479 	BTFSC 0xFD8,Zero_,0
000F6C EF78 F00D  03480 	GOTO  m252
000F70 0A01       03481 	XORLW 1
000F72 B4D8       03482 	BTFSC 0xFD8,Zero_,0
000F74 EFFE F00D  03483 	GOTO  m258
000F78 0A03       03484 	XORLW 3
000F7A B4D8       03485 	BTFSC 0xFD8,Zero_,0
000F7C EF0D F00E  03486 	GOTO  m259
000F80 0A01       03487 	XORLW 1
000F82 B4D8       03488 	BTFSC 0xFD8,Zero_,0
000F84 EF29 F00E  03489 	GOTO  m260
000F88 0A1F       03490 	XORLW 31
000F8A B4D8       03491 	BTFSC 0xFD8,Zero_,0
000F8C EF45 F00E  03492 	GOTO  m261
000F90 0A01       03493 	XORLW 1
000F92 B4D8       03494 	BTFSC 0xFD8,Zero_,0
000F94 EF61 F00E  03495 	GOTO  m262
000F98 0A03       03496 	XORLW 3
000F9A B4D8       03497 	BTFSC 0xFD8,Zero_,0
000F9C EF7D F00E  03498 	GOTO  m263
000FA0 0A01       03499 	XORLW 1
000FA2 B4D8       03500 	BTFSC 0xFD8,Zero_,0
000FA4 EF99 F00E  03501 	GOTO  m264
000FA8 EFB3 F00E  03502 	GOTO  m265
                  03503 			;	{
                  03504 			;	case 1:			// VT code
                  03505 			;		{
                  03506 			;		lcd_goto(LINE2);
000FAC 0EC0       03507 m121	MOVLW 192
000FAE DDAB       03508 	RCALL lcd_goto
                  03509 			;		lcd_puts(Serial);
000FB0 0E8E       03510 	MOVLW 142
000FB2 6E14       03511 	MOVWF s,0
000FB4 6A15       03512 	CLRF  s+1,0
000FB6 DDB0       03513 	RCALL lcd_puts
                  03514 			;		for(ind=0;ind<8;ind++)
000FB8 6A2C       03515 	CLRF  ind,0
000FBA 0E08       03516 m122	MOVLW 8
000FBC 602C       03517 	CPFSLT ind,0
000FBE D008       03518 	BRA   m123
                  03519 			;			{
                  03520 			;			retvalue = CODE[ind];
000FC0 502C       03521 	MOVF  ind,W,0
000FC2 EC16 F01B  03522 	CALL  _const3
000FC6 6E47       03523 	MOVWF retvalue,0
                  03524 			;			lcd_write(retvalue);
000FC8 DD6A       03525 	RCALL lcd_write
                  03526 			;			eadr++;
000FCA 2A10       03527 	INCF  eadr,1,0
                  03528 			;			}
000FCC 2A2C       03529 	INCF  ind,1,0
000FCE D7F5       03530 	BRA   m122
                  03531 			;		ESCbut();
000FD0 ECC0 F001  03532 m123	CALL  ESCbut
                  03533 			;		break;
000FD4 EFB3 F00E  03534 	GOTO  m265
                  03535 			;		}
                  03536 			;	case 2:			// Button 1 Activ?
                  03537 			;		{
                  03538 			;		vEN1 = en_to_dis(vEN1,eEN1);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 60

ADDR   CODE       LINE  SOURCE

000FD8 C036 F011  03539 m124	MOVFF vEN1,ENbit
000FDC 0EF6       03540 	MOVLW 246
000FDE ECB4 F00E  03541 	CALL  en_to_dis
000FE2 6E36       03542 	MOVWF vEN1,0
                  03543 			;		ESCbut();
000FE4 ECC0 F001  03544 	CALL  ESCbut
                  03545 			;		if(vEN1 && (cred1 != 0)) rem1 = 1;
000FE8 5236       03546 	MOVF  vEN1,1,0
000FEA B4D8       03547 	BTFSC 0xFD8,Zero_,0
000FEC EFB3 F00E  03548 	GOTO  m265
000FF0 51A3       03549 	MOVF  cred1,W,1
000FF2 11A4       03550 	IORWF cred1+1,W,1
000FF4 11A5       03551 	IORWF cred1+2,W,1
000FF6 B4D8       03552 	BTFSC 0xFD8,Zero_,0
000FF8 EFB3 F00E  03553 	GOTO  m265
000FFC 0E01       03554 	MOVLW 1
000FFE 6E22       03555 	MOVWF rem1,0
                  03556 			;		break;
001000 EFB3 F00E  03557 	GOTO  m265
                  03558 			;		}
                  03559 			;	case 3:			// Button 2 Activ?
                  03560 			;		{
                  03561 			;		vEN2 = en_to_dis(vEN2,eEN2);
001004 C037 F011  03562 m125	MOVFF vEN2,ENbit
001008 0EF7       03563 	MOVLW 247
00100A ECB4 F00E  03564 	CALL  en_to_dis
00100E 6E37       03565 	MOVWF vEN2,0
                  03566 			;		ESCbut();
001010 ECC0 F001  03567 	CALL  ESCbut
                  03568 			;		if(vEN2 && (cred2 != 0)) rem2 = 1;
001014 5237       03569 	MOVF  vEN2,1,0
001016 B4D8       03570 	BTFSC 0xFD8,Zero_,0
001018 EFB3 F00E  03571 	GOTO  m265
00101C 51A6       03572 	MOVF  cred2,W,1
00101E 11A7       03573 	IORWF cred2+1,W,1
001020 11A8       03574 	IORWF cred2+2,W,1
001022 B4D8       03575 	BTFSC 0xFD8,Zero_,0
001024 EFB3 F00E  03576 	GOTO  m265
001028 0E01       03577 	MOVLW 1
00102A 6E23       03578 	MOVWF rem2,0
                  03579 			;		break;
00102C EFB3 F00E  03580 	GOTO  m265
                  03581 			;		}
                  03582 			;	case 4:			// Button 3 Activ?
                  03583 			;		{
                  03584 			;		vEN3 = en_to_dis(vEN3,eEN3);
001030 C038 F011  03585 m126	MOVFF vEN3,ENbit
001034 0EC6       03586 	MOVLW 198
001036 ECB4 F00E  03587 	CALL  en_to_dis
00103A 6E38       03588 	MOVWF vEN3,0
                  03589 			;		ESCbut();
00103C ECC0 F001  03590 	CALL  ESCbut
                  03591 			;		if(vEN3 && (cred3 != 0)) rem3 = 1;				
001040 5238       03592 	MOVF  vEN3,1,0
001042 B4D8       03593 	BTFSC 0xFD8,Zero_,0
001044 EFB3 F00E  03594 	GOTO  m265
001048 51A9       03595 	MOVF  cred3,W,1
00104A 11AA       03596 	IORWF cred3+1,W,1
00104C 11AB       03597 	IORWF cred3+2,W,1
00104E B4D8       03598 	BTFSC 0xFD8,Zero_,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 61

ADDR   CODE       LINE  SOURCE

001050 EFB3 F00E  03599 	GOTO  m265
001054 0E01       03600 	MOVLW 1
001056 6E24       03601 	MOVWF rem3,0
                  03602 			;		break;
001058 EFB3 F00E  03603 	GOTO  m265
                  03604 			;		}
                  03605 			;	case 5:			// Button 4 Activ?
                  03606 			;		{
                  03607 			;		vEN4 = en_to_dis(vEN4,eEN4);
00105C C039 F011  03608 m127	MOVFF vEN4,ENbit
001060 0EC7       03609 	MOVLW 199
001062 ECB4 F00E  03610 	CALL  en_to_dis
001066 6E39       03611 	MOVWF vEN4,0
                  03612 			;		ESCbut();
001068 ECC0 F001  03613 	CALL  ESCbut
                  03614 			;		if(vEN4 && (cred4 != 0)) rem4 = 1;				
00106C 5239       03615 	MOVF  vEN4,1,0
00106E B4D8       03616 	BTFSC 0xFD8,Zero_,0
001070 EFB3 F00E  03617 	GOTO  m265
001074 51AC       03618 	MOVF  cred4,W,1
001076 11AD       03619 	IORWF cred4+1,W,1
001078 11AE       03620 	IORWF cred4+2,W,1
00107A B4D8       03621 	BTFSC 0xFD8,Zero_,0
00107C EFB3 F00E  03622 	GOTO  m265
001080 0E01       03623 	MOVLW 1
001082 6E25       03624 	MOVWF rem4,0
                  03625 			;		break;
001084 EFB3 F00E  03626 	GOTO  m265
                  03627 			;		}
                  03628 			;	case 6:			// Button 6 Activ?
                  03629 			;		{
                  03630 			;		vEN6 = en_to_dis(vEN6,eEN6);
001088 C03A F011  03631 m128	MOVFF vEN6,ENbit
00108C 0EC8       03632 	MOVLW 200
00108E ECB4 F00E  03633 	CALL  en_to_dis
001092 6E3A       03634 	MOVWF vEN6,0
                  03635 			;		ESCbut();
001094 ECC0 F001  03636 	CALL  ESCbut
                  03637 			;		if(vEN6 && (cred6 != 0)) rem6 = 1;				
001098 523A       03638 	MOVF  vEN6,1,0
00109A B4D8       03639 	BTFSC 0xFD8,Zero_,0
00109C EFB3 F00E  03640 	GOTO  m265
0010A0 51AF       03641 	MOVF  cred6,W,1
0010A2 11B0       03642 	IORWF cred6+1,W,1
0010A4 11B1       03643 	IORWF cred6+2,W,1
0010A6 B4D8       03644 	BTFSC 0xFD8,Zero_,0
0010A8 EFB3 F00E  03645 	GOTO  m265
0010AC 0E01       03646 	MOVLW 1
0010AE 6E26       03647 	MOVWF rem6,0
                  03648 			;		break;
0010B0 EFB3 F00E  03649 	GOTO  m265
                  03650 			;		}
                  03651 			;	case 7:			// Test Relay 1
                  03652 			;		{
                  03653 			;		if(WORK != 1) test(1);
0010B4 4C55       03654 m129	DCFSNZ WORK,W,0
0010B6 EFB3 F00E  03655 	GOTO  m265
0010BA 0E01       03656 	MOVLW 1
0010BC ECF4 F00E  03657 	CALL  test
                  03658 			;		break;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 62

ADDR   CODE       LINE  SOURCE

0010C0 EFB3 F00E  03659 	GOTO  m265
                  03660 			;		}
                  03661 			;	case 8:			// Test Relay 2
                  03662 			;		{
                  03663 			;		if(WORK != 2) test(2);	
0010C4 5055       03664 m130	MOVF  WORK,W,0
0010C6 0A02       03665 	XORLW 2
0010C8 B4D8       03666 	BTFSC 0xFD8,Zero_,0
0010CA EFB3 F00E  03667 	GOTO  m265
0010CE 0E02       03668 	MOVLW 2
0010D0 ECF4 F00E  03669 	CALL  test
                  03670 			;		break;
0010D4 EFB3 F00E  03671 	GOTO  m265
                  03672 			;		}
                  03673 			;	case 9:			// Test Relay 3
                  03674 			;		{
                  03675 			;		if(WORK != 3) test(3);
0010D8 5055       03676 m131	MOVF  WORK,W,0
0010DA 0A03       03677 	XORLW 3
0010DC B4D8       03678 	BTFSC 0xFD8,Zero_,0
0010DE EFB3 F00E  03679 	GOTO  m265
0010E2 0E03       03680 	MOVLW 3
0010E4 ECF4 F00E  03681 	CALL  test
                  03682 			;		break;
0010E8 EFB3 F00E  03683 	GOTO  m265
                  03684 			;		}
                  03685 			;	case 10:			// Test Relay 4
                  03686 			;		{
                  03687 			;		if(WORK != 4) test(4);	
0010EC 5055       03688 m132	MOVF  WORK,W,0
0010EE 0A04       03689 	XORLW 4
0010F0 B4D8       03690 	BTFSC 0xFD8,Zero_,0
0010F2 EFB3 F00E  03691 	GOTO  m265
0010F6 0E04       03692 	MOVLW 4
0010F8 ECF4 F00E  03693 	CALL  test
                  03694 			;		break;
0010FC EFB3 F00E  03695 	GOTO  m265
                  03696 			;		}
                  03697 			;	case 11:			// Test Relay 6
                  03698 			;		{
                  03699 			;		if(WORK != 6) test(6);	
001100 5055       03700 m133	MOVF  WORK,W,0
001102 0A06       03701 	XORLW 6
001104 B4D8       03702 	BTFSC 0xFD8,Zero_,0
001106 EFB3 F00E  03703 	GOTO  m265
00110A 0E06       03704 	MOVLW 6
00110C ECF4 F00E  03705 	CALL  test
                  03706 			;		break;
001110 EFB3 F00E  03707 	GOTO  m265
                  03708 			;		}
                  03709 			;	case 12:		// Sale Channel 1
                  03710 			;		{
                  03711 			;		tot = total1;
001114 C0B8 F0B5  03712 m134	MOVFF total1,tot
001118 C0B9 F0B6  03713 	MOVFF total1+1,tot+1
00111C C0BA F0B7  03714 	MOVFF total1+2,tot+2
                  03715 			;		print_total();
001120 DE8D       03716 	RCALL print_total
                  03717 			;		break;
001122 EFB3 F00E  03718 	GOTO  m265
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 63

ADDR   CODE       LINE  SOURCE

                  03719 			;		}
                  03720 			;	case 13:		// Sale Channel 2
                  03721 			;		{
                  03722 			;		tot = total2;
001126 C0BB F0B5  03723 m135	MOVFF total2,tot
00112A C0BC F0B6  03724 	MOVFF total2+1,tot+1
00112E C0BD F0B7  03725 	MOVFF total2+2,tot+2
                  03726 			;		print_total();			
001132 DE84       03727 	RCALL print_total
                  03728 			;		break;
001134 EFB3 F00E  03729 	GOTO  m265
                  03730 			;		}
                  03731 			;	case 14:		// Sale Channel 3
                  03732 			;		{
                  03733 			;		tot = total3;
001138 C0BE F0B5  03734 m136	MOVFF total3,tot
00113C C0BF F0B6  03735 	MOVFF total3+1,tot+1
001140 C0C0 F0B7  03736 	MOVFF total3+2,tot+2
                  03737 			;		print_total();
001144 DE7B       03738 	RCALL print_total
                  03739 			;		break;
001146 EFB3 F00E  03740 	GOTO  m265
                  03741 			;		}
                  03742 			;	case 15:		// Sale Channel 4
                  03743 			;		{
                  03744 			;		tot = total4;
00114A C0C1 F0B5  03745 m137	MOVFF total4,tot
00114E C0C2 F0B6  03746 	MOVFF total4+1,tot+1
001152 C0C3 F0B7  03747 	MOVFF total4+2,tot+2
                  03748 			;		print_total();			
001156 DE72       03749 	RCALL print_total
                  03750 			;		break;
001158 EFB3 F00E  03751 	GOTO  m265
                  03752 			;		}
                  03753 			;	case 16:		// Sale Channel 6
                  03754 			;		{
                  03755 			;		tot = total6;
00115C C0C4 F0B5  03756 m138	MOVFF total6,tot
001160 C0C5 F0B6  03757 	MOVFF total6+1,tot+1
001164 C0C6 F0B7  03758 	MOVFF total6+2,tot+2
                  03759 			;		print_total();			
001168 DE69       03760 	RCALL print_total
                  03761 			;		break;
00116A EFB3 F00E  03762 	GOTO  m265
                  03763 			;		}
                  03764 			;	case 17:		// Sale All
                  03765 			;		{
                  03766 			;		tot = total1 + total2;
00116E 51BB       03767 m139	MOVF  total2,W,1
001170 25B8       03768 	ADDWF total1,W,1
001172 6FB5       03769 	MOVWF tot,1
001174 51BC       03770 	MOVF  total2+1,W,1
001176 21B9       03771 	ADDWFC total1+1,W,1
001178 6FB6       03772 	MOVWF tot+1,1
00117A 51BD       03773 	MOVF  total2+2,W,1
00117C 21BA       03774 	ADDWFC total1+2,W,1
00117E 6FB7       03775 	MOVWF tot+2,1
                  03776 			;		tot += total3;
001180 51BE       03777 	MOVF  total3,W,1
001182 27B5       03778 	ADDWF tot,1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 64

ADDR   CODE       LINE  SOURCE

001184 51BF       03779 	MOVF  total3+1,W,1
001186 23B6       03780 	ADDWFC tot+1,1,1
001188 51C0       03781 	MOVF  total3+2,W,1
00118A 23B7       03782 	ADDWFC tot+2,1,1
                  03783 			;		tot += total4;
00118C 51C1       03784 	MOVF  total4,W,1
00118E 27B5       03785 	ADDWF tot,1,1
001190 51C2       03786 	MOVF  total4+1,W,1
001192 23B6       03787 	ADDWFC tot+1,1,1
001194 51C3       03788 	MOVF  total4+2,W,1
001196 23B7       03789 	ADDWFC tot+2,1,1
                  03790 			;		tot += total6;
001198 51C4       03791 	MOVF  total6,W,1
00119A 27B5       03792 	ADDWF tot,1,1
00119C 51C5       03793 	MOVF  total6+1,W,1
00119E 23B6       03794 	ADDWFC tot+1,1,1
0011A0 51C6       03795 	MOVF  total6+2,W,1
0011A2 23B7       03796 	ADDWFC tot+2,1,1
                  03797 			;		tot += overpay;
0011A4 51C7       03798 	MOVF  overpay,W,1
0011A6 27B5       03799 	ADDWF tot,1,1
0011A8 51C8       03800 	MOVF  overpay+1,W,1
0011AA 23B6       03801 	ADDWFC tot+1,1,1
0011AC 51C9       03802 	MOVF  overpay+2,W,1
0011AE 23B7       03803 	ADDWFC tot+2,1,1
                  03804 			;		print_total();
0011B0 DE45       03805 	RCALL print_total
                  03806 			;		break;
0011B2 EFB3 F00E  03807 	GOTO  m265
                  03808 			;		}
                  03809 			;	case 18:		// Overpay
                  03810 			;		{
                  03811 			;		tot = overpay;
0011B6 C0C7 F0B5  03812 m140	MOVFF overpay,tot
0011BA C0C8 F0B6  03813 	MOVFF overpay+1,tot+1
0011BE C0C9 F0B7  03814 	MOVFF overpay+2,tot+2
                  03815 			;		print_total();	
0011C2 DE3C       03816 	RCALL print_total
                  03817 			;		break;
0011C4 EFB3 F00E  03818 	GOTO  m265
                  03819 			;		}
                  03820 			;	case 19:		//Total counter
                  03821 			;		{
                  03822 			;		tot = NONpay;
0011C8 C0CA F0B5  03823 m141	MOVFF NONpay,tot
0011CC C0CB F0B6  03824 	MOVFF NONpay+1,tot+1
0011D0 C0CC F0B7  03825 	MOVFF NONpay+2,tot+2
                  03826 			;		print_total();
0011D4 DE33       03827 	RCALL print_total
                  03828 			;		break;
0011D6 EFB3 F00E  03829 	GOTO  m265
                  03830 			;		}
                  03831 			;	case 20:		// Clear STAT CH1
                  03832 			;		{
                  03833 			;		total1 = 0;
0011DA 6BB8       03834 m142	CLRF  total1,1
0011DC 6BB9       03835 	CLRF  total1+1,1
0011DE 6BBA       03836 	CLRF  total1+2,1
                  03837 			;		writeEEPROM(NULL,etotal1H); delay(10);
0011E0 6A14       03838 	CLRF  smb_2,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 65

ADDR   CODE       LINE  SOURCE

0011E2 0EEA       03839 	MOVLW 234
0011E4 EC61 F002  03840 	CALL  writeEEPROM
0011E8 0E0A       03841 	MOVLW 10
0011EA EC3D F001  03842 	CALL  delay
                  03843 			;		writeEEPROM(NULL,etotal1M); delay(10);
0011EE 6A14       03844 	CLRF  smb_2,0
0011F0 0EEB       03845 	MOVLW 235
0011F2 EC61 F002  03846 	CALL  writeEEPROM
0011F6 0E0A       03847 	MOVLW 10
0011F8 EC3D F001  03848 	CALL  delay
                  03849 			;		writeEEPROM(NULL,etotal1L); delay(10);	
0011FC 6A14       03850 	CLRF  smb_2,0
0011FE 0EEC       03851 	MOVLW 236
001200 EC61 F002  03852 	CALL  writeEEPROM
001204 0E0A       03853 	MOVLW 10
001206 EC3D F001  03854 	CALL  delay
                  03855 			;		st_clear();
00120A DE10       03856 	RCALL st_clear
                  03857 			;		break;
00120C EFB3 F00E  03858 	GOTO  m265
                  03859 			;		}
                  03860 			;	case 21:		// Clear STAT CH2
                  03861 			;		{
                  03862 			;		total2 = 0;
001210 6BBB       03863 m143	CLRF  total2,1
001212 6BBC       03864 	CLRF  total2+1,1
001214 6BBD       03865 	CLRF  total2+2,1
                  03866 			;		writeEEPROM(NULL,etotal2H); delay(10);
001216 6A14       03867 	CLRF  smb_2,0
001218 0EED       03868 	MOVLW 237
00121A EC61 F002  03869 	CALL  writeEEPROM
00121E 0E0A       03870 	MOVLW 10
001220 EC3D F001  03871 	CALL  delay
                  03872 			;		writeEEPROM(NULL,etotal2M); delay(10);
001224 6A14       03873 	CLRF  smb_2,0
001226 0EEE       03874 	MOVLW 238
001228 EC61 F002  03875 	CALL  writeEEPROM
00122C 0E0A       03876 	MOVLW 10
00122E EC3D F001  03877 	CALL  delay
                  03878 			;		writeEEPROM(NULL,etotal2L); delay(10);	
001232 6A14       03879 	CLRF  smb_2,0
001234 0EEF       03880 	MOVLW 239
001236 EC61 F002  03881 	CALL  writeEEPROM
00123A 0E0A       03882 	MOVLW 10
00123C EC3D F001  03883 	CALL  delay
                  03884 			;		st_clear();			
001240 DDF5       03885 	RCALL st_clear
                  03886 			;		break;
001242 EFB3 F00E  03887 	GOTO  m265
                  03888 			;		}
                  03889 			;	case 22:		// Clear STAT CH3
                  03890 			;		{
                  03891 			;		total3 = 0;
001246 6BBE       03892 m144	CLRF  total3,1
001248 6BBF       03893 	CLRF  total3+1,1
00124A 6BC0       03894 	CLRF  total3+2,1
                  03895 			;		writeEEPROM(NULL,etotal3H); delay(10);
00124C 6A14       03896 	CLRF  smb_2,0
00124E 0ECA       03897 	MOVLW 202
001250 EC61 F002  03898 	CALL  writeEEPROM
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 66

ADDR   CODE       LINE  SOURCE

001254 0E0A       03899 	MOVLW 10
001256 EC3D F001  03900 	CALL  delay
                  03901 			;		writeEEPROM(NULL,etotal3M); delay(10);
00125A 6A14       03902 	CLRF  smb_2,0
00125C 0ECB       03903 	MOVLW 203
00125E EC61 F002  03904 	CALL  writeEEPROM
001262 0E0A       03905 	MOVLW 10
001264 EC3D F001  03906 	CALL  delay
                  03907 			;		writeEEPROM(NULL,etotal3L); delay(10);	
001268 6A14       03908 	CLRF  smb_2,0
00126A 0ECC       03909 	MOVLW 204
00126C EC61 F002  03910 	CALL  writeEEPROM
001270 0E0A       03911 	MOVLW 10
001272 EC3D F001  03912 	CALL  delay
                  03913 			;		st_clear();
001276 DDDA       03914 	RCALL st_clear
                  03915 			;		break;
001278 EFB3 F00E  03916 	GOTO  m265
                  03917 			;		}
                  03918 			;	case 23:		// Clear STAT CH4
                  03919 			;		{
                  03920 			;		total4 = 0;
00127C 6BC1       03921 m145	CLRF  total4,1
00127E 6BC2       03922 	CLRF  total4+1,1
001280 6BC3       03923 	CLRF  total4+2,1
                  03924 			;		writeEEPROM(NULL,etotal4H); delay(10);
001282 6A14       03925 	CLRF  smb_2,0
001284 0ECD       03926 	MOVLW 205
001286 EC61 F002  03927 	CALL  writeEEPROM
00128A 0E0A       03928 	MOVLW 10
00128C EC3D F001  03929 	CALL  delay
                  03930 			;		writeEEPROM(NULL,etotal4M); delay(10);
001290 6A14       03931 	CLRF  smb_2,0
001292 0ECE       03932 	MOVLW 206
001294 EC61 F002  03933 	CALL  writeEEPROM
001298 0E0A       03934 	MOVLW 10
00129A EC3D F001  03935 	CALL  delay
                  03936 			;		writeEEPROM(NULL,etotal4L); delay(10);	
00129E 6A14       03937 	CLRF  smb_2,0
0012A0 0ECF       03938 	MOVLW 207
0012A2 EC61 F002  03939 	CALL  writeEEPROM
0012A6 0E0A       03940 	MOVLW 10
0012A8 EC3D F001  03941 	CALL  delay
                  03942 			;		st_clear();			
0012AC DDBF       03943 	RCALL st_clear
                  03944 			;		break;
0012AE EFB3 F00E  03945 	GOTO  m265
                  03946 			;		}
                  03947 			;	case 24:		// Clear STAT CH6
                  03948 			;		{
                  03949 			;		total6 = 0;
0012B2 6BC4       03950 m146	CLRF  total6,1
0012B4 6BC5       03951 	CLRF  total6+1,1
0012B6 6BC6       03952 	CLRF  total6+2,1
                  03953 			;		writeEEPROM(NULL,etotal6H); delay(10);
0012B8 6A14       03954 	CLRF  smb_2,0
0012BA 0EBA       03955 	MOVLW 186
0012BC EC61 F002  03956 	CALL  writeEEPROM
0012C0 0E0A       03957 	MOVLW 10
0012C2 EC3D F001  03958 	CALL  delay
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 67

ADDR   CODE       LINE  SOURCE

                  03959 			;		writeEEPROM(NULL,etotal6M); delay(10);
0012C6 6A14       03960 	CLRF  smb_2,0
0012C8 0EBB       03961 	MOVLW 187
0012CA EC61 F002  03962 	CALL  writeEEPROM
0012CE 0E0A       03963 	MOVLW 10
0012D0 EC3D F001  03964 	CALL  delay
                  03965 			;		writeEEPROM(NULL,etotal6L); delay(10);	
0012D4 6A14       03966 	CLRF  smb_2,0
0012D6 0EBC       03967 	MOVLW 188
0012D8 EC61 F002  03968 	CALL  writeEEPROM
0012DC 0E0A       03969 	MOVLW 10
0012DE EC3D F001  03970 	CALL  delay
                  03971 			;		st_clear();			
0012E2 DDA4       03972 	RCALL st_clear
                  03973 			;		break;
0012E4 EFB3 F00E  03974 	GOTO  m265
                  03975 			;		}
                  03976 			;	case 25:		// Clear All STAT
                  03977 			;		{
                  03978 			;		total1 = 0;
0012E8 6BB8       03979 m147	CLRF  total1,1
0012EA 6BB9       03980 	CLRF  total1+1,1
0012EC 6BBA       03981 	CLRF  total1+2,1
                  03982 			;		writeEEPROM(NULL,etotal1H); delay(10);
0012EE 6A14       03983 	CLRF  smb_2,0
0012F0 0EEA       03984 	MOVLW 234
0012F2 EC61 F002  03985 	CALL  writeEEPROM
0012F6 0E0A       03986 	MOVLW 10
0012F8 EC3D F001  03987 	CALL  delay
                  03988 			;		writeEEPROM(NULL,etotal1M); delay(10);
0012FC 6A14       03989 	CLRF  smb_2,0
0012FE 0EEB       03990 	MOVLW 235
001300 EC61 F002  03991 	CALL  writeEEPROM
001304 0E0A       03992 	MOVLW 10
001306 EC3D F001  03993 	CALL  delay
                  03994 			;		writeEEPROM(NULL,etotal1L); delay(10);
00130A 6A14       03995 	CLRF  smb_2,0
00130C 0EEC       03996 	MOVLW 236
00130E EC61 F002  03997 	CALL  writeEEPROM
001312 0E0A       03998 	MOVLW 10
001314 EC3D F001  03999 	CALL  delay
                  04000 			;		total2 = 0;
001318 6BBB       04001 	CLRF  total2,1
00131A 6BBC       04002 	CLRF  total2+1,1
00131C 6BBD       04003 	CLRF  total2+2,1
                  04004 			;		writeEEPROM(NULL,etotal2H); delay(10);
00131E 6A14       04005 	CLRF  smb_2,0
001320 0EED       04006 	MOVLW 237
001322 EC61 F002  04007 	CALL  writeEEPROM
001326 0E0A       04008 	MOVLW 10
001328 EC3D F001  04009 	CALL  delay
                  04010 			;		writeEEPROM(NULL,etotal2M); delay(10);
00132C 6A14       04011 	CLRF  smb_2,0
00132E 0EEE       04012 	MOVLW 238
001330 EC61 F002  04013 	CALL  writeEEPROM
001334 0E0A       04014 	MOVLW 10
001336 EC3D F001  04015 	CALL  delay
                  04016 			;		writeEEPROM(NULL,etotal2L); delay(10);
00133A 6A14       04017 	CLRF  smb_2,0
00133C 0EEF       04018 	MOVLW 239
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 68

ADDR   CODE       LINE  SOURCE

00133E EC61 F002  04019 	CALL  writeEEPROM
001342 0E0A       04020 	MOVLW 10
001344 EC3D F001  04021 	CALL  delay
                  04022 			;		total3 = 0;
001348 6BBE       04023 	CLRF  total3,1
00134A 6BBF       04024 	CLRF  total3+1,1
00134C 6BC0       04025 	CLRF  total3+2,1
                  04026 			;		writeEEPROM(NULL,etotal3H); delay(10);
00134E 6A14       04027 	CLRF  smb_2,0
001350 0ECA       04028 	MOVLW 202
001352 EC61 F002  04029 	CALL  writeEEPROM
001356 0E0A       04030 	MOVLW 10
001358 EC3D F001  04031 	CALL  delay
                  04032 			;		writeEEPROM(NULL,etotal3M); delay(10);
00135C 6A14       04033 	CLRF  smb_2,0
00135E 0ECB       04034 	MOVLW 203
001360 EC61 F002  04035 	CALL  writeEEPROM
001364 0E0A       04036 	MOVLW 10
001366 EC3D F001  04037 	CALL  delay
                  04038 			;		writeEEPROM(NULL,etotal3L); delay(10);
00136A 6A14       04039 	CLRF  smb_2,0
00136C 0ECC       04040 	MOVLW 204
00136E EC61 F002  04041 	CALL  writeEEPROM
001372 0E0A       04042 	MOVLW 10
001374 EC3D F001  04043 	CALL  delay
                  04044 			;		total4 = 0;
001378 6BC1       04045 	CLRF  total4,1
00137A 6BC2       04046 	CLRF  total4+1,1
00137C 6BC3       04047 	CLRF  total4+2,1
                  04048 			;		writeEEPROM(NULL,etotal4H); delay(10);
00137E 6A14       04049 	CLRF  smb_2,0
001380 0ECD       04050 	MOVLW 205
001382 EC61 F002  04051 	CALL  writeEEPROM
001386 0E0A       04052 	MOVLW 10
001388 EC3D F001  04053 	CALL  delay
                  04054 			;		writeEEPROM(NULL,etotal4M); delay(10);
00138C 6A14       04055 	CLRF  smb_2,0
00138E 0ECE       04056 	MOVLW 206
001390 EC61 F002  04057 	CALL  writeEEPROM
001394 0E0A       04058 	MOVLW 10
001396 EC3D F001  04059 	CALL  delay
                  04060 			;		writeEEPROM(NULL,etotal4L); delay(10);
00139A 6A14       04061 	CLRF  smb_2,0
00139C 0ECF       04062 	MOVLW 207
00139E EC61 F002  04063 	CALL  writeEEPROM
0013A2 0E0A       04064 	MOVLW 10
0013A4 EC3D F001  04065 	CALL  delay
                  04066 			;		total6 = 0;
0013A8 6BC4       04067 	CLRF  total6,1
0013AA 6BC5       04068 	CLRF  total6+1,1
0013AC 6BC6       04069 	CLRF  total6+2,1
                  04070 			;		writeEEPROM(NULL,etotal6H); delay(10);
0013AE 6A14       04071 	CLRF  smb_2,0
0013B0 0EBA       04072 	MOVLW 186
0013B2 EC61 F002  04073 	CALL  writeEEPROM
0013B6 0E0A       04074 	MOVLW 10
0013B8 EC3D F001  04075 	CALL  delay
                  04076 			;		writeEEPROM(NULL,etotal6M); delay(10);
0013BC 6A14       04077 	CLRF  smb_2,0
0013BE 0EBB       04078 	MOVLW 187
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 69

ADDR   CODE       LINE  SOURCE

0013C0 EC61 F002  04079 	CALL  writeEEPROM
0013C4 0E0A       04080 	MOVLW 10
0013C6 EC3D F001  04081 	CALL  delay
                  04082 			;		writeEEPROM(NULL,etotal6L); delay(10);
0013CA 6A14       04083 	CLRF  smb_2,0
0013CC 0EBC       04084 	MOVLW 188
0013CE EC61 F002  04085 	CALL  writeEEPROM
0013D2 0E0A       04086 	MOVLW 10
0013D4 EC3D F001  04087 	CALL  delay
                  04088 			;		overpay = 0;
0013D8 6BC7       04089 	CLRF  overpay,1
0013DA 6BC8       04090 	CLRF  overpay+1,1
0013DC 6BC9       04091 	CLRF  overpay+2,1
                  04092 			;		writeEEPROM(NULL,eoverH); delay(10);
0013DE 6A14       04093 	CLRF  smb_2,0
0013E0 0EE7       04094 	MOVLW 231
0013E2 EC61 F002  04095 	CALL  writeEEPROM
0013E6 0E0A       04096 	MOVLW 10
0013E8 EC3D F001  04097 	CALL  delay
                  04098 			;		writeEEPROM(NULL,eoverM); delay(10);
0013EC 6A14       04099 	CLRF  smb_2,0
0013EE 0EE8       04100 	MOVLW 232
0013F0 EC61 F002  04101 	CALL  writeEEPROM
0013F4 0E0A       04102 	MOVLW 10
0013F6 EC3D F001  04103 	CALL  delay
                  04104 			;		writeEEPROM(NULL,eoverL); delay(10);
0013FA 6A14       04105 	CLRF  smb_2,0
0013FC 0EE9       04106 	MOVLW 233
0013FE EC61 F002  04107 	CALL  writeEEPROM
001402 0E0A       04108 	MOVLW 10
001404 EC3D F001  04109 	CALL  delay
                  04110 			;		st_clear();
001408 DD11       04111 	RCALL st_clear
                  04112 			;		break;
00140A EFB3 F00E  04113 	GOTO  m265
                  04114 			;		}
                  04115 			;	case 26:		// MMC/SD -> EEPROM   MOJE DA NE RABOTI
                  04116 			;		{
                  04117 			;/*		CardDetect();
                  04118 			;		lcd_goto(LINE2);
                  04119 			;		if(!card) lcd_puts(MMCerr);
                  04120 			;		else
                  04121 			;			{
                  04122 			;			lcd_puts(Wait);
                  04123 			;			MMC_Read(CONFIG_H,CONFIG_L);
                  04124 			;			eadr = eeprom_start;
                  04125 			;			for(index=0;index<256;index++)
                  04126 			;				{
                  04127 			;				retvalue = mmc[index];
                  04128 			;				writeEEPROM(retvalue,eadr);
                  04129 			;				delay(10);
                  04130 			;				eadr ++;
                  04131 			;				}
                  04132 			;			lcd_goto(LINE2);
                  04133 			;			lcd_puts(Ready);
                  04134 			;			}
                  04135 			;		Load();
                  04136 			;		if(vBL) BLCTRL = 1;
                  04137 			;		else BLCTRL = 0;
                  04138 			;		ESCbut();
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 70

ADDR   CODE       LINE  SOURCE

                  04139 			;		break;    */
                  04140 			;		}
                  04141 			;	case 27:		// AUDIT -> MMC/SD		MOJE DA NE RABOTI
                  04142 			;	case 28:		// EEPROM-> CONFIG		MOJE DA NE RABOTI
                  04143 			;		{
                  04144 			;		break;
                  04145 			;		}
                  04146 			;/*		{
                  04147 			;		CardDetect();
                  04148 			;		lcd_goto(LINE2);
                  04149 			;		if(!card) lcd_puts(MMCerr);
                  04150 			;		else
                  04151 			;			{
                  04152 			;			lcd_puts(Wait);
                  04153 			;			if(point == 17) SecSearch();
                  04154 			;			else
                  04155 			;				{
                  04156 			;				addr_H = CONFIG_H;
                  04157 			;				addr_L = CONFIG_L;
                  04158 			;				}
                  04159 			;*/	//		vCounter ++;
                  04160 			;//			writeEEPROM(vCounter.high8,eCounterH); delay(10);
                  04161 			; /*			writeEEPROM(vCounter.low8,eCounterL); delay(10);
                  04162 			;			eadr = eeprom_start;
                  04163 			;			for(index=0;index<256;index++)
                  04164 			;				{
                  04165 			;				retvalue = readEEPROM(eadr);
                  04166 			;				mmc[index] = retvalue;
                  04167 			;				eadr ++;
                  04168 			;				}
                  04169 			;			for(index=256;index<503;index++) mmc[index] = NULL;
                  04170 			;			ind = 0;
                  04171 			;			for(index=504;index<512;index++)
                  04172 			;				{
                  04173 			;				retvalue = CODE[ind];
                  04174 			;				mmc[index] = retvalue;
                  04175 			;				ind ++;
                  04176 			;				}
                  04177 			;			retvalue = MMC_Write(addr_H,addr_L); delay(100);
                  04178 			;			if(retvalue)
                  04179 			;				{
                  04180 			;				UpdateFAT(); delay(100);
                  04181 			;				lcd_goto(LINE2);
                  04182 			;				lcd_puts(Ready);
                  04183 			;				}
                  04184 			;			else
                  04185 			;				{
                  04186 			;				lcd_goto(LINE2);
                  04187 			;				lcd_puts(MMCerr);
                  04188 			;				}
                  04189 			;			}
                  04190 			;		ESCbut();
                  04191 			;//		break; 		
                  04192 			;		}     */
                  04193 			;	case 29:		// Set coin table
                  04194 			;		{
                  04195 			;		for(ind=0;ind<3;ind++)
00140E 6A2C       04196 m148	CLRF  ind,0
001410 0E03       04197 m149	MOVLW 3
001412 602C       04198 	CPFSLT ind,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 71

ADDR   CODE       LINE  SOURCE

001414 D0BD       04199 	BRA   m162
                  04200 			;			{
                  04201 			;			check = 0;
001416 6A33       04202 	CLRF  check,0
                  04203 			;			lcd_goto(LINE2);
001418 0EC0       04204 	MOVLW 192
00141A EC83 F005  04205 	CALL  lcd_goto
                  04206 			;			lcd_puts(Insert);
00141E 0E97       04207 	MOVLW 151
001420 6E14       04208 	MOVWF s,0
001422 6A15       04209 	CLRF  s+1,0
001424 EC8C F005  04210 	CALL  lcd_puts
                  04211 			;			switch(ind)
001428 502C       04212 	MOVF  ind,W,0
00142A E005       04213 	BZ    m150
00142C 0A01       04214 	XORLW 1
00142E E020       04215 	BZ    m151
001430 0A03       04216 	XORLW 3
001432 E03B       04217 	BZ    m152
001434 D056       04218 	BRA   m153
                  04219 			;				{
                  04220 			;				case 0:
                  04221 			;					{
                  04222 			;					lcd_write('T');
001436 0E54       04223 m150	MOVLW 84
001438 EC4F F005  04224 	CALL  lcd_write
                  04225 			;					lcd_write('o');
00143C 0E6F       04226 	MOVLW 111
00143E EC4F F005  04227 	CALL  lcd_write
                  04228 			;					lcd_write('k');
001442 0E6B       04229 	MOVLW 107
001444 EC4F F005  04230 	CALL  lcd_write
                  04231 			;					lcd_write('e');
001448 0E65       04232 	MOVLW 101
00144A EC4F F005  04233 	CALL  lcd_write
                  04234 			;					lcd_write('n');
00144E 0E6E       04235 	MOVLW 110
001450 EC4F F005  04236 	CALL  lcd_write
                  04237 			;					lcd_write(' ');
001454 0E20       04238 	MOVLW 32
001456 EC4F F005  04239 	CALL  lcd_write
                  04240 			;					lcd_write('1');
00145A 0E31       04241 	MOVLW 49
00145C EC4F F005  04242 	CALL  lcd_write
                  04243 			;					retvalue = readEEPROM(eOPA); delay(1);
001460 0EF5       04244 	MOVLW 245
001462 EC57 F002  04245 	CALL  readEEPROM
001466 6E47       04246 	MOVWF retvalue,0
001468 0E01       04247 	MOVLW 1
00146A EC3D F001  04248 	CALL  delay
                  04249 			;					break;
00146E D039       04250 	BRA   m153
                  04251 			;					}
                  04252 			;				case 1:
                  04253 			;					{
                  04254 			;					lcd_write('T');
001470 0E54       04255 m151	MOVLW 84
001472 EC4F F005  04256 	CALL  lcd_write
                  04257 			;					lcd_write('o');
001476 0E6F       04258 	MOVLW 111
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 72

ADDR   CODE       LINE  SOURCE

001478 EC4F F005  04259 	CALL  lcd_write
                  04260 			;					lcd_write('k');
00147C 0E6B       04261 	MOVLW 107
00147E EC4F F005  04262 	CALL  lcd_write
                  04263 			;					lcd_write('e');
001482 0E65       04264 	MOVLW 101
001484 EC4F F005  04265 	CALL  lcd_write
                  04266 			;					lcd_write('n');
001488 0E6E       04267 	MOVLW 110
00148A EC4F F005  04268 	CALL  lcd_write
                  04269 			;					lcd_write(' ');
00148E 0E20       04270 	MOVLW 32
001490 EC4F F005  04271 	CALL  lcd_write
                  04272 			;					lcd_write('2');
001494 0E32       04273 	MOVLW 50
001496 EC4F F005  04274 	CALL  lcd_write
                  04275 			;					retvalue = readEEPROM(eOPB); delay(1);
00149A 0EF4       04276 	MOVLW 244
00149C EC57 F002  04277 	CALL  readEEPROM
0014A0 6E47       04278 	MOVWF retvalue,0
0014A2 0E01       04279 	MOVLW 1
0014A4 EC3D F001  04280 	CALL  delay
                  04281 			;					break;
0014A8 D01C       04282 	BRA   m153
                  04283 			;					}
                  04284 			;				case 2:
                  04285 			;					{
                  04286 			;					lcd_write('T');
0014AA 0E54       04287 m152	MOVLW 84
0014AC EC4F F005  04288 	CALL  lcd_write
                  04289 			;					lcd_write('o');
0014B0 0E6F       04290 	MOVLW 111
0014B2 EC4F F005  04291 	CALL  lcd_write
                  04292 			;					lcd_write('k');
0014B6 0E6B       04293 	MOVLW 107
0014B8 EC4F F005  04294 	CALL  lcd_write
                  04295 			;					lcd_write('e');
0014BC 0E65       04296 	MOVLW 101
0014BE EC4F F005  04297 	CALL  lcd_write
                  04298 			;					lcd_write('n');
0014C2 0E6E       04299 	MOVLW 110
0014C4 EC4F F005  04300 	CALL  lcd_write
                  04301 			;					lcd_write(' ');
0014C8 0E20       04302 	MOVLW 32
0014CA EC4F F005  04303 	CALL  lcd_write
                  04304 			;					lcd_write('3');
0014CE 0E33       04305 	MOVLW 51
0014D0 EC4F F005  04306 	CALL  lcd_write
                  04307 			;					retvalue = readEEPROM(eOPC); delay(1);
0014D4 0EF3       04308 	MOVLW 243
0014D6 EC57 F002  04309 	CALL  readEEPROM
0014DA 6E47       04310 	MOVWF retvalue,0
0014DC 0E01       04311 	MOVLW 1
0014DE EC3D F001  04312 	CALL  delay
                  04313 			;					break;
                  04314 			;					}
                  04315 			;		/*
                  04316 			;				case 3:
                  04317 			;					{
                  04318 			;					lcd_write('2');
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 73

ADDR   CODE       LINE  SOURCE

                  04319 			;					lcd_write('0');
                  04320 			;					retvalue = 20;
                  04321 			;					break;
                  04322 			;					}
                  04323 			;				case 4:
                  04324 			;					{
                  04325 			;					lcd_write('5');
                  04326 			;					lcd_write('0');
                  04327 			;					retvalue = 50;
                  04328 			;					break;
                  04329 			;					}
                  04330 			;				case 5:
                  04331 			;					{
                  04332 			;					lcd_write('1');
                  04333 			;					lcd_write('0');
                  04334 			;					lcd_write('0');
                  04335 			;					retvalue = 100;
                  04336 			;					break;
                  04337 			;					}
                  04338 			;	*/	
                  04339 			;			}
                  04340 			;			while(!check);
0014E2 5233       04341 m153	MOVF  check,1,0
0014E4 E0FE       04342 	BZ    m153
                  04343 			;			check = 0;
0014E6 6A33       04344 	CLRF  check,0
                  04345 			;			switch(sysB)
0014E8 5046       04346 	MOVF  sysB,W,0
0014EA 0A77       04347 	XORLW 119
0014EC E00D       04348 	BZ    m154
0014EE 0AC0       04349 	XORLW 192
0014F0 E014       04350 	BZ    m155
0014F2 0A60       04351 	XORLW 96
0014F4 E01B       04352 	BZ    m156
0014F6 0A24       04353 	XORLW 36
0014F8 E022       04354 	BZ    m157
0014FA 0A06       04355 	XORLW 6
0014FC E029       04356 	BZ    m158
0014FE 0A03       04357 	XORLW 3
001500 E030       04358 	BZ    m159
001502 0A11       04359 	XORLW 17
001504 E037       04360 	BZ    m160
001506 D03F       04361 	BRA   m161
                  04362 			;				{
                  04363 			;				case 0x77:
                  04364 			;					{
                  04365 			;					writeEEPROM(retvalue,eOPA);
001508 C047 F014  04366 m154	MOVFF retvalue,smb_2
00150C 0EF5       04367 	MOVLW 245
00150E EC61 F002  04368 	CALL  writeEEPROM
                  04369 			;					delay(10);
001512 0E0A       04370 	MOVLW 10
001514 EC3D F001  04371 	CALL  delay
                  04372 			;					break;
001518 D036       04373 	BRA   m161
                  04374 			;					}
                  04375 			;				case 0xB7:
                  04376 			;					{
                  04377 			;					writeEEPROM(retvalue,eOPB);
00151A C047 F014  04378 m155	MOVFF retvalue,smb_2
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 74

ADDR   CODE       LINE  SOURCE

00151E 0EF4       04379 	MOVLW 244
001520 EC61 F002  04380 	CALL  writeEEPROM
                  04381 			;					delay(10);
001524 0E0A       04382 	MOVLW 10
001526 EC3D F001  04383 	CALL  delay
                  04384 			;					break;
00152A D02D       04385 	BRA   m161
                  04386 			;					}
                  04387 			;				case 0xD7:
                  04388 			;					{
                  04389 			;					writeEEPROM(retvalue,eOPC);
00152C C047 F014  04390 m156	MOVFF retvalue,smb_2
001530 0EF3       04391 	MOVLW 243
001532 EC61 F002  04392 	CALL  writeEEPROM
                  04393 			;					delay(10);
001536 0E0A       04394 	MOVLW 10
001538 EC3D F001  04395 	CALL  delay
                  04396 			;					break;
00153C D024       04397 	BRA   m161
                  04398 			;					}
                  04399 			;				case 0xF3:
                  04400 			;					{
                  04401 			;					writeEEPROM(retvalue,eOPD);
00153E C047 F014  04402 m157	MOVFF retvalue,smb_2
001542 0EF2       04403 	MOVLW 242
001544 EC61 F002  04404 	CALL  writeEEPROM
                  04405 			;					delay(10);
001548 0E0A       04406 	MOVLW 10
00154A EC3D F001  04407 	CALL  delay
                  04408 			;					break;
00154E D01B       04409 	BRA   m161
                  04410 			;					}
                  04411 			;				case 0xF5:
                  04412 			;					{
                  04413 			;					writeEEPROM(retvalue,eOPE);
001550 C047 F014  04414 m158	MOVFF retvalue,smb_2
001554 0EF1       04415 	MOVLW 241
001556 EC61 F002  04416 	CALL  writeEEPROM
                  04417 			;					delay(10);
00155A 0E0A       04418 	MOVLW 10
00155C EC3D F001  04419 	CALL  delay
                  04420 			;					break;
001560 D012       04421 	BRA   m161
                  04422 			;					}
                  04423 			;				case 0xF6:
                  04424 			;					{
                  04425 			;					writeEEPROM(retvalue,eOPF);
001562 C047 F014  04426 m159	MOVFF retvalue,smb_2
001566 0EF0       04427 	MOVLW 240
001568 EC61 F002  04428 	CALL  writeEEPROM
                  04429 			;					delay(10);
00156C 0E0A       04430 	MOVLW 10
00156E EC3D F001  04431 	CALL  delay
                  04432 			;					break;
001572 D009       04433 	BRA   m161
                  04434 			;					}
                  04435 			;				case 0xE7:
                  04436 			;					{		
                  04437 			;					lcd_goto(LINE2);
001574 0EC0       04438 m160	MOVLW 192
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 75

ADDR   CODE       LINE  SOURCE

001576 EC83 F005  04439 	CALL  lcd_goto
                  04440 			;					lcd_puts(Error);
00157A 0E0A       04441 	MOVLW 10
00157C 6E14       04442 	MOVWF s,0
00157E 0E01       04443 	MOVLW 1
001580 6E15       04444 	MOVWF s+1,0
001582 EC8C F005  04445 	CALL  lcd_puts
                  04446 			;					break;
                  04447 			;					}
                  04448 			;				}
                  04449 			;			delay(250);
001586 0EFA       04450 m161	MOVLW 250
001588 EC3D F001  04451 	CALL  delay
                  04452 			;			}
00158C 2A2C       04453 	INCF  ind,1,0
00158E D740       04454 	BRA   m149
                  04455 			;		check = 0;
001590 6A33       04456 m162	CLRF  check,0
                  04457 			;		lcd_goto(LINE2);
001592 0EC0       04458 	MOVLW 192
001594 EC83 F005  04459 	CALL  lcd_goto
                  04460 			;		lcd_puts(Save);
001598 0EA4       04461 	MOVLW 164
00159A 6E14       04462 	MOVWF s,0
00159C 6A15       04463 	CLRF  s+1,0
00159E EC8C F005  04464 	CALL  lcd_puts
                  04465 			;		ESCbut();
0015A2 ECC0 F001  04466 	CALL  ESCbut
                  04467 			;		break;
0015A6 D3DF       04468 	BRA   m265
                  04469 			;		}
                  04470 			;	case 30:			// Read cred table 1
                  04471 			;	case 31:			// Read cred table 2
                  04472 			;	case 32:			// Read cred table 3
                  04473 			;	case 33:			// Read cred table 4
                  04474 			;	case 34:			// Read cred table 6
                  04475 			;		{
                  04476 			;		if(point == 30) eadr = eeprom_start;
0015A8 0E1E       04477 m163	MOVLW 30
0015AA 6209       04478 	CPFSEQ point,0
0015AC D001       04479 	BRA   m164
0015AE 6A10       04480 	CLRF  eadr,0
                  04481 			;		if(point == 31) eadr = eeprom_start + 5;
0015B0 0E1F       04482 m164	MOVLW 31
0015B2 6209       04483 	CPFSEQ point,0
0015B4 D002       04484 	BRA   m165
0015B6 0E05       04485 	MOVLW 5
0015B8 6E10       04486 	MOVWF eadr,0
                  04487 			;		if(point == 32) eadr = eeprom_start + 0x60;
0015BA 0E20       04488 m165	MOVLW 32
0015BC 6209       04489 	CPFSEQ point,0
0015BE D002       04490 	BRA   m166
0015C0 0E60       04491 	MOVLW 96
0015C2 6E10       04492 	MOVWF eadr,0
                  04493 			;		if(point == 33) 
0015C4 0E21       04494 m166	MOVLW 33
0015C6 6209       04495 	CPFSEQ point,0
0015C8 D004       04496 	BRA   m167
                  04497 			;			{
                  04498 			;			eadr = eeprom_start + 0x60;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 76

ADDR   CODE       LINE  SOURCE

0015CA 0E60       04499 	MOVLW 96
0015CC 6E10       04500 	MOVWF eadr,0
                  04501 			;			eadr = eadr + 5;
0015CE 0E05       04502 	MOVLW 5
0015D0 2610       04503 	ADDWF eadr,1,0
                  04504 			;			}
                  04505 			;		if(point == 34) eadr = eeprom_start + 0x0B; 
0015D2 0E22       04506 m167	MOVLW 34
0015D4 6209       04507 	CPFSEQ point,0
0015D6 D002       04508 	BRA   m168
0015D8 0E0B       04509 	MOVLW 11
0015DA 6E10       04510 	MOVWF eadr,0
                  04511 			;		lcd_clear();		
0015DC EC86 F005  04512 m168	CALL  lcd_clear
                  04513 			;		k = 0;
0015E0 6A0A       04514 	CLRF  k,0
                  04515 			;		esc = 1;
0015E2 0E01       04516 	MOVLW 1
0015E4 6E0C       04517 	MOVWF esc,0
                  04518 			;		while(esc)
0015E6 520C       04519 m169	MOVF  esc,1,0
0015E8 B4D8       04520 	BTFSC 0xFD8,Zero_,0
0015EA D3BD       04521 	BRA   m265
                  04522 			;			{
                  04523 			;			retvalue = readEEPROM(eadr);
0015EC 5010       04524 	MOVF  eadr,W,0
0015EE EC57 F002  04525 	CALL  readEEPROM
0015F2 6E47       04526 	MOVWF retvalue,0
                  04527 			;			credit = (uns16)retvalue * 100;
0015F4 0D64       04528 	MULLW 100
0015F6 CFF3 F09A  04529 	MOVFF PRODL,credit
0015FA CFF4 F09B  04530 	MOVFF PRODH,credit+1
                  04531 			;			retvalue = readEEPROM(eadr+1);
0015FE 2810       04532 	INCF  eadr,W,0
001600 EC57 F002  04533 	CALL  readEEPROM
001604 6E47       04534 	MOVWF retvalue,0
                  04535 			;			credit += retvalue;
001606 279A       04536 	ADDWF credit,1,1
001608 0E00       04537 	MOVLW 0
00160A 239B       04538 	ADDWFC credit+1,1,1
                  04539 			;			if(retvalue != 0xFF)
00160C 4847       04540 	INFSNZ retvalue,W,0
00160E D024       04541 	BRA   m170
                  04542 			;				{
                  04543 			;				lcd_goto(LINE1);
001610 0E80       04544 	MOVLW 128
001612 EC83 F005  04545 	CALL  lcd_goto
                  04546 			;				lcd_puts(Credit);
001616 0E11       04547 	MOVLW 17
001618 6E14       04548 	MOVWF s,0
00161A 6A15       04549 	CLRF  s+1,0
00161C EC8C F005  04550 	CALL  lcd_puts
                  04551 			;				lcd_credit();
001620 ECFB F005  04552 	CALL  lcd_credit
                  04553 			;				lcd_goto(LINE2);
001624 0EC0       04554 	MOVLW 192
001626 EC83 F005  04555 	CALL  lcd_goto
                  04556 			;				lcd_puts(Time);
00162A 0E1A       04557 	MOVLW 26
00162C 6E14       04558 	MOVWF s,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 77

ADDR   CODE       LINE  SOURCE

00162E 6A15       04559 	CLRF  s+1,0
001630 EC8C F005  04560 	CALL  lcd_puts
                  04561 			;				hour = readEEPROM(eadr+2);
001634 0E02       04562 	MOVLW 2
001636 2410       04563 	ADDWF eadr,W,0
001638 EC57 F002  04564 	CALL  readEEPROM
00163C 6E2E       04565 	MOVWF hour,0
                  04566 			;				min  = readEEPROM(eadr+3);
00163E 0E03       04567 	MOVLW 3
001640 2410       04568 	ADDWF eadr,W,0
001642 EC57 F002  04569 	CALL  readEEPROM
001646 6E2F       04570 	MOVWF min,0
                  04571 			;				sec  = readEEPROM(eadr+4);
001648 0E04       04572 	MOVLW 4
00164A 2410       04573 	ADDWF eadr,W,0
00164C EC57 F002  04574 	CALL  readEEPROM
001650 6E30       04575 	MOVWF sec,0
                  04576 			;				lcd_time();	
001652 EC33 F006  04577 	CALL  lcd_time
                  04578 			;				}
                  04579 			;			else
001656 D013       04580 	BRA   m173
                  04581 			;				{
                  04582 			;				lcd_goto(LINE2);
001658 0EC0       04583 m170	MOVLW 192
00165A EC83 F005  04584 	CALL  lcd_goto
                  04585 			;				lcd_puts(CLEAR);
00165E 0E7F       04586 	MOVLW 127
001660 6E14       04587 	MOVWF s,0
001662 6A15       04588 	CLRF  s+1,0
001664 EC8C F005  04589 	CALL  lcd_puts
                  04590 			;				while(ESC);	 delay(100);
001668 B483       04591 m171	BTFSC 0xF83,ESC,0
00166A D7FE       04592 	BRA   m171
00166C 0E64       04593 	MOVLW 100
00166E EC3D F001  04594 	CALL  delay
                  04595 			;				while(!ESC); delay(100);
001672 A483       04596 m172	BTFSS 0xF83,ESC,0
001674 D7FE       04597 	BRA   m172
001676 0E64       04598 	MOVLW 100
001678 EC3D F001  04599 	CALL  delay
                  04600 			;				break;
00167C D374       04601 	BRA   m265
                  04602 			;				}
                  04603 			;
                  04604 			;			if(!DOWN)		// Press DOWN
00167E B683       04605 m173	BTFSC 0xF83,DOWN,0
001680 D012       04606 	BRA   m175
                  04607 			;				{
                  04608 			;				if(k<5)
001682 0E05       04609 	MOVLW 5
001684 600A       04610 	CPFSLT k,0
001686 D00A       04611 	BRA   m174
                  04612 			;					{
                  04613 			;					retvalue = readEEPROM(eadr+0x10);
001688 0E10       04614 	MOVLW 16
00168A 2410       04615 	ADDWF eadr,W,0
00168C EC57 F002  04616 	CALL  readEEPROM
001690 6E47       04617 	MOVWF retvalue,0
                  04618 			;					if(retvalue != 0xFF) 
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 78

ADDR   CODE       LINE  SOURCE

001692 4847       04619 	INFSNZ retvalue,W,0
001694 D003       04620 	BRA   m174
                  04621 			;						{
                  04622 			;						k ++;
001696 2A0A       04623 	INCF  k,1,0
                  04624 			;						eadr += 0x10;
001698 0E10       04625 	MOVLW 16
00169A 2610       04626 	ADDWF eadr,1,0
                  04627 			;						}
                  04628 			;					}
                  04629 			;				while(!DOWN);
00169C A683       04630 m174	BTFSS 0xF83,DOWN,0
00169E D7FE       04631 	BRA   m174
                  04632 			;				delay(100);
0016A0 0E64       04633 	MOVLW 100
0016A2 EC3D F001  04634 	CALL  delay
                  04635 			;				}
                  04636 			;
                  04637 			;			if(!UP)			// Press UP
0016A6 B883       04638 m175	BTFSC 0xF83,UP,0
0016A8 D00A       04639 	BRA   m177
                  04640 			;				{
                  04641 			;				if(k > 0) 
0016AA 520A       04642 	MOVF  k,1,0
0016AC E003       04643 	BZ    m176
                  04644 			;					{
                  04645 			;					k --;
0016AE 060A       04646 	DECF  k,1,0
                  04647 			;					eadr -= 0x10;
0016B0 0E10       04648 	MOVLW 16
0016B2 5E10       04649 	SUBWF eadr,1,0
                  04650 			;					}
                  04651 			;				while(!UP);
0016B4 A883       04652 m176	BTFSS 0xF83,UP,0
0016B6 D7FE       04653 	BRA   m176
                  04654 			;				delay(100);
0016B8 0E64       04655 	MOVLW 100
0016BA EC3D F001  04656 	CALL  delay
                  04657 			;				}
                  04658 			;
                  04659 			;			if(!ESC) 		// Press ESC
0016BE B483       04660 m177	BTFSC 0xF83,ESC,0
0016C0 D792       04661 	BRA   m169
                  04662 			;				{
                  04663 			;				credit = 0;
0016C2 6B9A       04664 	CLRF  credit,1
0016C4 6B9B       04665 	CLRF  credit+1,1
                  04666 			;				while(!ESC);
0016C6 A483       04667 m178	BTFSS 0xF83,ESC,0
0016C8 D7FE       04668 	BRA   m178
                  04669 			;				esc = 0;
0016CA 6A0C       04670 	CLRF  esc,0
                  04671 			;				delay(100);
0016CC 0E64       04672 	MOVLW 100
0016CE EC3D F001  04673 	CALL  delay
                  04674 			;				}	
                  04675 			;			}
0016D2 D789       04676 	BRA   m169
                  04677 			;		break;
                  04678 			;		}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 79

ADDR   CODE       LINE  SOURCE

                  04679 			;	case 35:		// Set credit table 1
                  04680 			;	case 36:		// Set credit table 2
                  04681 			;	case 37:		// Set credit table 3
                  04682 			;	case 38:		// Set credit table 4
                  04683 			;	case 39:		// Set credit table 6
                  04684 			;		{
                  04685 			;		if(point == 35) eadr = eeprom_start;
0016D4 0E23       04686 m179	MOVLW 35
0016D6 6209       04687 	CPFSEQ point,0
0016D8 D001       04688 	BRA   m180
0016DA 6A10       04689 	CLRF  eadr,0
                  04690 			;		if(point == 36) eadr = eeprom_start + 5;
0016DC 0E24       04691 m180	MOVLW 36
0016DE 6209       04692 	CPFSEQ point,0
0016E0 D002       04693 	BRA   m181
0016E2 0E05       04694 	MOVLW 5
0016E4 6E10       04695 	MOVWF eadr,0
                  04696 			;		if(point == 37) eadr = eeprom_start + 0x60;
0016E6 0E25       04697 m181	MOVLW 37
0016E8 6209       04698 	CPFSEQ point,0
0016EA D002       04699 	BRA   m182
0016EC 0E60       04700 	MOVLW 96
0016EE 6E10       04701 	MOVWF eadr,0
                  04702 			;		if(point == 38) 
0016F0 0E26       04703 m182	MOVLW 38
0016F2 6209       04704 	CPFSEQ point,0
0016F4 D004       04705 	BRA   m183
                  04706 			;			{
                  04707 			;			eadr = eeprom_start + 0x60;
0016F6 0E60       04708 	MOVLW 96
0016F8 6E10       04709 	MOVWF eadr,0
                  04710 			;			eadr = eadr + 5;
0016FA 0E05       04711 	MOVLW 5
0016FC 2610       04712 	ADDWF eadr,1,0
                  04713 			;			}
                  04714 			;		if(point == 39) eadr = eeprom_start + 0x0B; //new
0016FE 0E27       04715 m183	MOVLW 39
001700 6209       04716 	CPFSEQ point,0
001702 D002       04717 	BRA   m184
001704 0E0B       04718 	MOVLW 11
001706 6E10       04719 	MOVWF eadr,0
                  04720 			;		for(ind=0;ind<5;ind++)
001708 6A2C       04721 m184	CLRF  ind,0
00170A 0E05       04722 m185	MOVLW 5
00170C 602C       04723 	CPFSLT ind,0
00170E D012       04724 	BRA   m188
                  04725 			;			{
                  04726 			;			for(k=0;k<10;k++) 
001710 6A0A       04727 	CLRF  k,0
001712 0E0A       04728 m186	MOVLW 10
001714 600A       04729 	CPFSLT k,0
001716 D00A       04730 	BRA   m187
                  04731 			;				{
                  04732 			;				writeEEPROM(0xFF,eadr+k); 
001718 6814       04733 	SETF  smb_2,0
00171A 500A       04734 	MOVF  k,W,0
00171C 2410       04735 	ADDWF eadr,W,0
00171E EC61 F002  04736 	CALL  writeEEPROM
                  04737 			;				delay(10);
001722 0E0A       04738 	MOVLW 10
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 80

ADDR   CODE       LINE  SOURCE

001724 EC3D F001  04739 	CALL  delay
                  04740 			;				}
001728 2A0A       04741 	INCF  k,1,0
00172A D7F3       04742 	BRA   m186
                  04743 			;			eadr += 0x10;
00172C 0E10       04744 m187	MOVLW 16
00172E 2610       04745 	ADDWF eadr,1,0
                  04746 			;			}
001730 2A2C       04747 	INCF  ind,1,0
001732 D7EB       04748 	BRA   m185
                  04749 			;		delay(100);
001734 0E64       04750 m188	MOVLW 100
001736 EC3D F001  04751 	CALL  delay
                  04752 			;		lcd_setup(1);
00173A 0E01       04753 	MOVLW 1
00173C EC6D F005  04754 	CALL  lcd_setup
                  04755 			;		for(ind=0;ind<5;ind++)
001740 6A2C       04756 	CLRF  ind,0
001742 0E05       04757 m189	MOVLW 5
001744 602C       04758 	CPFSLT ind,0
001746 D15B       04759 	BRA   m236
                  04760 			;			{
                  04761 			;			lcd_clear();
001748 EC86 F005  04762 	CALL  lcd_clear
                  04763 			;			lcd_goto(LINE1);
00174C 0E80       04764 	MOVLW 128
00174E EC83 F005  04765 	CALL  lcd_goto
                  04766 			;			lcd_puts(Cont);
001752 0E2C       04767 	MOVLW 44
001754 6E14       04768 	MOVWF s,0
001756 0E01       04769 	MOVLW 1
001758 6E15       04770 	MOVWF s+1,0
00175A EC8C F005  04771 	CALL  lcd_puts
                  04772 			;			while(1)
                  04773 			;				{
                  04774 			;				if(!ESC) 
00175E B483       04775 m190	BTFSC 0xF83,ESC,0
001760 D008       04776 	BRA   m192
                  04777 			;					{
                  04778 			;					esc = 1;
001762 0E01       04779 	MOVLW 1
001764 6E0C       04780 	MOVWF esc,0
                  04781 			;					while(!ESC);
001766 A483       04782 m191	BTFSS 0xF83,ESC,0
001768 D7FE       04783 	BRA   m191
                  04784 			;					delay(100);
00176A 0E64       04785 	MOVLW 100
00176C EC3D F001  04786 	CALL  delay
                  04787 			;					break;
001770 D008       04788 	BRA   m194
                  04789 			;					}
                  04790 			;				if(!ENTER)
001772 BA83       04791 m192	BTFSC 0xF83,ENTER,0
001774 D7F4       04792 	BRA   m190
                  04793 			;					{
                  04794 			;					esc = 0;
001776 6A0C       04795 	CLRF  esc,0
                  04796 			;					while(!ENTER);
001778 AA83       04797 m193	BTFSS 0xF83,ENTER,0
00177A D7FE       04798 	BRA   m193
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 81

ADDR   CODE       LINE  SOURCE

                  04799 			;					delay(100);
00177C 0E64       04800 	MOVLW 100
00177E EC3D F001  04801 	CALL  delay
                  04802 			;					break;
                  04803 			;					}
                  04804 			;				}
                  04805 			;			if(esc) break;
001782 660C       04806 m194	TSTFSZ esc,0
001784 D13C       04807 	BRA   m236
                  04808 			;			retvalue = 0;
001786 6A47       04809 	CLRF  retvalue,0
                  04810 			;			if(point == 35) eadr = ind * 16;
001788 0E23       04811 	MOVLW 35
00178A 6209       04812 	CPFSEQ point,0
00178C D004       04813 	BRA   m195
00178E 0E10       04814 	MOVLW 16
001790 022C       04815 	MULWF ind,0
001792 CFF3 F010  04816 	MOVFF PRODL,eadr
                  04817 			;	 		if(point == 36) eadr = ind * 16 + 5;
001796 0E24       04818 m195	MOVLW 36
001798 6209       04819 	CPFSEQ point,0
00179A D005       04820 	BRA   m196
00179C 0E10       04821 	MOVLW 16
00179E 022C       04822 	MULWF ind,0
0017A0 50F3       04823 	MOVF  PRODL,W,0
0017A2 0F05       04824 	ADDLW 5
0017A4 6E10       04825 	MOVWF eadr,0
                  04826 			;			if(point == 37) eadr = ind * 16 + 0x60;
0017A6 0E25       04827 m196	MOVLW 37
0017A8 6209       04828 	CPFSEQ point,0
0017AA D005       04829 	BRA   m197
0017AC 0E10       04830 	MOVLW 16
0017AE 022C       04831 	MULWF ind,0
0017B0 50F3       04832 	MOVF  PRODL,W,0
0017B2 0F60       04833 	ADDLW 96
0017B4 6E10       04834 	MOVWF eadr,0
                  04835 			;			if(point == 38) 
0017B6 0E26       04836 m197	MOVLW 38
0017B8 6209       04837 	CPFSEQ point,0
0017BA D007       04838 	BRA   m198
                  04839 			;			{
                  04840 			;			eadr = ind * 16 + 0x60;
0017BC 0E10       04841 	MOVLW 16
0017BE 022C       04842 	MULWF ind,0
0017C0 50F3       04843 	MOVF  PRODL,W,0
0017C2 0F60       04844 	ADDLW 96
0017C4 6E10       04845 	MOVWF eadr,0
                  04846 			;			eadr = eadr + 5;
0017C6 0E05       04847 	MOVLW 5
0017C8 2610       04848 	ADDWF eadr,1,0
                  04849 			;			}
                  04850 			;			if(point == 39) eadr = ind * 16 + 0x0B; //new
0017CA 0E27       04851 m198	MOVLW 39
0017CC 6209       04852 	CPFSEQ point,0
0017CE D005       04853 	BRA   m199
0017D0 0E10       04854 	MOVLW 16
0017D2 022C       04855 	MULWF ind,0
0017D4 50F3       04856 	MOVF  PRODL,W,0
0017D6 0F0B       04857 	ADDLW 11
0017D8 6E10       04858 	MOVWF eadr,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 82

ADDR   CODE       LINE  SOURCE

                  04859 			;
                  04860 			;	//		if(point == 23) eadr = ind * 16;
                  04861 			;	//		else eadr = ind * 16 + 5;
                  04862 			;			lcd_clear();
0017DA EC86 F005  04863 m199	CALL  lcd_clear
                  04864 			;			lcd_adr = LINE1 + 8;
0017DE 0E88       04865 	MOVLW 136
0017E0 6E0F       04866 	MOVWF lcd_adr,0
                  04867 			;			credit = 0;
0017E2 6B9A       04868 	CLRF  credit,1
0017E4 6B9B       04869 	CLRF  credit+1,1
                  04870 			;			hour = 0;
0017E6 6A2E       04871 	CLRF  hour,0
                  04872 			;			min = 0;
0017E8 6A2F       04873 	CLRF  min,0
                  04874 			;			sec = 0;
0017EA 6A30       04875 	CLRF  sec,0
                  04876 			;			change = 1;
0017EC 0E01       04877 	MOVLW 1
0017EE 6E0B       04878 	MOVWF change,0
                  04879 			;			k = 0;
0017F0 6A0A       04880 	CLRF  k,0
                  04881 			;			dmax = 9;
0017F2 0E09       04882 	MOVLW 9
0017F4 6E0E       04883 	MOVWF dmax,0
                  04884 			;
                  04885 			;			while(k<10)
0017F6 0E0A       04886 m200	MOVLW 10
0017F8 600A       04887 	CPFSLT k,0
0017FA D0FF       04888 	BRA   m235
                  04889 			;				{
                  04890 			;				if(change) 
0017FC 520B       04891 	MOVF  change,1,0
0017FE E018       04892 	BZ    m201
                  04893 			;					{
                  04894 			;					lcd_goto(LINE1);
001800 0E80       04895 	MOVLW 128
001802 EC83 F005  04896 	CALL  lcd_goto
                  04897 			;					lcd_puts(Credit);
001806 0E11       04898 	MOVLW 17
001808 6E14       04899 	MOVWF s,0
00180A 6A15       04900 	CLRF  s+1,0
00180C EC8C F005  04901 	CALL  lcd_puts
                  04902 			;					lcd_credit();
001810 ECFB F005  04903 	CALL  lcd_credit
                  04904 			;					lcd_goto(LINE2);
001814 0EC0       04905 	MOVLW 192
001816 EC83 F005  04906 	CALL  lcd_goto
                  04907 			;					lcd_puts(Time);
00181A 0E1A       04908 	MOVLW 26
00181C 6E14       04909 	MOVWF s,0
00181E 6A15       04910 	CLRF  s+1,0
001820 EC8C F005  04911 	CALL  lcd_puts
                  04912 			;					lcd_time();
001824 EC33 F006  04913 	CALL  lcd_time
                  04914 			;					lcd_goto(lcd_adr);
001828 500F       04915 	MOVF  lcd_adr,W,0
00182A EC83 F005  04916 	CALL  lcd_goto
                  04917 			;					change = 0;
00182E 6A0B       04918 	CLRF  change,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 83

ADDR   CODE       LINE  SOURCE

                  04919 			;					}
                  04920 			;
                  04921 			;				if(!ENTER)
001830 BA83       04922 m201	BTFSC 0xF83,ENTER,0
001832 D052       04923 	BRA   m209
                  04924 			;					{
                  04925 			;					while(!ENTER);
001834 AA83       04926 m202	BTFSS 0xF83,ENTER,0
001836 D7FE       04927 	BRA   m202
                  04928 			;					delay(100);
001838 0E64       04929 	MOVLW 100
00183A EC3D F001  04930 	CALL  delay
                  04931 			;					k ++;
00183E 2A0A       04932 	INCF  k,1,0
                  04933 			;					digit = 0;
001840 6A0D       04934 	CLRF  digit,0
                  04935 			;					change = 1;
001842 0E01       04936 	MOVLW 1
001844 6E0B       04937 	MOVWF change,0
                  04938 			;					if((lcd_adr==0x89) || (lcd_adr==0xC7) || (lcd_adr==0xCA)) lcd_adr ++;
001846 500F       04939 	MOVF  lcd_adr,W,0
001848 0A89       04940 	XORLW 137
00184A E006       04941 	BZ    m203
00184C 500F       04942 	MOVF  lcd_adr,W,0
00184E 0AC7       04943 	XORLW 199
001850 E003       04944 	BZ    m203
001852 0ECA       04945 	MOVLW 202
001854 620F       04946 	CPFSEQ lcd_adr,0
001856 D001       04947 	BRA   m204
001858 2A0F       04948 m203	INCF  lcd_adr,1,0
                  04949 			;					if(lcd_adr==0x8C) lcd_adr = LINE2 + 5;	
00185A 0E8C       04950 m204	MOVLW 140
00185C 620F       04951 	CPFSEQ lcd_adr,0
00185E D002       04952 	BRA   m205
001860 0EC5       04953 	MOVLW 197
001862 6E0F       04954 	MOVWF lcd_adr,0
                  04955 			;					if(lcd_adr==0xCD)
001864 0ECD       04956 m205	MOVLW 205
001866 620F       04957 	CPFSEQ lcd_adr,0
001868 D02B       04958 	BRA   m206
                  04959 			;						{
                  04960 			;						writeEEPROM(lev,eadr);		delay(10);
00186A C032 F014  04961 	MOVFF lev,smb_2
00186E 5010       04962 	MOVF  eadr,W,0
001870 EC61 F002  04963 	CALL  writeEEPROM
001874 0E0A       04964 	MOVLW 10
001876 EC3D F001  04965 	CALL  delay
                  04966 			;						writeEEPROM(stot,eadr+1);	delay(10);
00187A C031 F014  04967 	MOVFF stot,smb_2
00187E 2810       04968 	INCF  eadr,W,0
001880 EC61 F002  04969 	CALL  writeEEPROM
001884 0E0A       04970 	MOVLW 10
001886 EC3D F001  04971 	CALL  delay
                  04972 			;						writeEEPROM(hour,eadr+2);	delay(10);
00188A C02E F014  04973 	MOVFF hour,smb_2
00188E 0E02       04974 	MOVLW 2
001890 2410       04975 	ADDWF eadr,W,0
001892 EC61 F002  04976 	CALL  writeEEPROM
001896 0E0A       04977 	MOVLW 10
001898 EC3D F001  04978 	CALL  delay
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 84

ADDR   CODE       LINE  SOURCE

                  04979 			;						writeEEPROM(min,eadr+3);	delay(10);
00189C C02F F014  04980 	MOVFF min,smb_2
0018A0 0E03       04981 	MOVLW 3
0018A2 2410       04982 	ADDWF eadr,W,0
0018A4 EC61 F002  04983 	CALL  writeEEPROM
0018A8 0E0A       04984 	MOVLW 10
0018AA EC3D F001  04985 	CALL  delay
                  04986 			;						writeEEPROM(sec,eadr+4);	delay(10);
0018AE C030 F014  04987 	MOVFF sec,smb_2
0018B2 0E04       04988 	MOVLW 4
0018B4 2410       04989 	ADDWF eadr,W,0
0018B6 EC61 F002  04990 	CALL  writeEEPROM
0018BA 0E0A       04991 	MOVLW 10
0018BC EC3D F001  04992 	CALL  delay
                  04993 			;						}
                  04994 			;					lcd_adr ++;
0018C0 2A0F       04995 m206	INCF  lcd_adr,1,0
                  04996 			;					if((lcd_adr==0xC9) || (lcd_adr==0xCC)) dmax = 5;
0018C2 500F       04997 	MOVF  lcd_adr,W,0
0018C4 0AC9       04998 	XORLW 201
0018C6 E003       04999 	BZ    m207
0018C8 0ECC       05000 	MOVLW 204
0018CA 620F       05001 	CPFSEQ lcd_adr,0
0018CC D003       05002 	BRA   m208
0018CE 0E05       05003 m207	MOVLW 5
0018D0 6E0E       05004 	MOVWF dmax,0
                  05005 			;					else dmax = 9;
0018D2 D002       05006 	BRA   m209
0018D4 0E09       05007 m208	MOVLW 9
0018D6 6E0E       05008 	MOVWF dmax,0
                  05009 			;					}	// end if(ENTER)
                  05010 			;
                  05011 			;				if(!UP)
0018D8 B883       05012 m209	BTFSC 0xF83,UP,0
0018DA D046       05013 	BRA   m222
                  05014 			;					{
                  05015 			;					if(digit < dmax) 
0018DC 500E       05016 	MOVF  dmax,W,0
0018DE 600D       05017 	CPFSLT digit,0
0018E0 D004       05018 	BRA   m210
                  05019 			;						{
                  05020 			;						digit ++;
0018E2 2A0D       05021 	INCF  digit,1,0
                  05022 			;						change = 1;
0018E4 0E01       05023 	MOVLW 1
0018E6 6E0B       05024 	MOVWF change,0
                  05025 			;						}
                  05026 			;					else change = 0;
0018E8 D001       05027 	BRA   m211
0018EA 6A0B       05028 m210	CLRF  change,0
                  05029 			;					while(!UP);
0018EC A883       05030 m211	BTFSS 0xF83,UP,0
0018EE D7FE       05031 	BRA   m211
                  05032 			;					delay(100);
0018F0 0E64       05033 	MOVLW 100
0018F2 EC3D F001  05034 	CALL  delay
                  05035 			;					if(change)
0018F6 520B       05036 	MOVF  change,1,0
0018F8 E037       05037 	BZ    m222
                  05038 			;						{
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 85

ADDR   CODE       LINE  SOURCE

                  05039 			;						switch(lcd_adr)
0018FA 500F       05040 	MOVF  lcd_adr,W,0
0018FC 0A88       05041 	XORLW 136
0018FE E013       05042 	BZ    m212
001900 0A01       05043 	XORLW 1
001902 E016       05044 	BZ    m213
001904 0A02       05045 	XORLW 2
001906 E019       05046 	BZ    m214
001908 0A07       05047 	XORLW 7
00190A E01C       05048 	BZ    m215
00190C 0A4A       05049 	XORLW 74
00190E E01E       05050 	BZ    m216
001910 0A01       05051 	XORLW 1
001912 E01F       05052 	BZ    m217
001914 0A0E       05053 	XORLW 14
001916 E01F       05054 	BZ    m218
001918 0A03       05055 	XORLW 3
00191A E020       05056 	BZ    m219
00191C 0A06       05057 	XORLW 6
00191E E020       05058 	BZ    m220
001920 0A01       05059 	XORLW 1
001922 E021       05060 	BZ    m221
001924 D021       05061 	BRA   m222
                  05062 			;							{
                  05063 			;							case 0x88:
                  05064 			;								{
                  05065 			;								credit += 1000;
001926 0EE8       05066 m212	MOVLW 232
001928 279A       05067 	ADDWF credit,1,1
00192A 0E03       05068 	MOVLW 3
00192C 239B       05069 	ADDWFC credit+1,1,1
                  05070 			;								break;
00192E D01C       05071 	BRA   m222
                  05072 			;								}
                  05073 			;							case 0x89:
                  05074 			;								{
                  05075 			;								credit += 100;
001930 0E64       05076 m213	MOVLW 100
001932 279A       05077 	ADDWF credit,1,1
001934 0E00       05078 	MOVLW 0
001936 239B       05079 	ADDWFC credit+1,1,1
                  05080 			;								break;
001938 D017       05081 	BRA   m222
                  05082 			;								}
                  05083 			;							case 0x8B:
                  05084 			;								{
                  05085 			;								credit += 10;
00193A 0E0A       05086 m214	MOVLW 10
00193C 279A       05087 	ADDWF credit,1,1
00193E 0E00       05088 	MOVLW 0
001940 239B       05089 	ADDWFC credit+1,1,1
                  05090 			;								break;
001942 D012       05091 	BRA   m222
                  05092 			;								}
                  05093 			;							case 0x8C:
                  05094 			;								{
                  05095 			;								credit ++;
001944 2B9A       05096 m215	INCF  credit,1,1
001946 0E00       05097 	MOVLW 0
001948 239B       05098 	ADDWFC credit+1,1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 86

ADDR   CODE       LINE  SOURCE

                  05099 			;								break;
00194A D00E       05100 	BRA   m222
                  05101 			;								}
                  05102 			;							case 0xC6:
                  05103 			;								{
                  05104 			;								hour += 10;
00194C 0E0A       05105 m216	MOVLW 10
00194E 262E       05106 	ADDWF hour,1,0
                  05107 			;								break;
001950 D00B       05108 	BRA   m222
                  05109 			;								}
                  05110 			;							case 0xC7:
                  05111 			;								{
                  05112 			;								hour ++;
001952 2A2E       05113 m217	INCF  hour,1,0
                  05114 			;								break;
001954 D009       05115 	BRA   m222
                  05116 			;								}
                  05117 			;							case 0xC9:
                  05118 			;								{
                  05119 			;								min += 10;
001956 0E0A       05120 m218	MOVLW 10
001958 262F       05121 	ADDWF min,1,0
                  05122 			;								break;
00195A D006       05123 	BRA   m222
                  05124 			;								}
                  05125 			;							case 0xCA:
                  05126 			;								{
                  05127 			;								min ++;
00195C 2A2F       05128 m219	INCF  min,1,0
                  05129 			;								break;
00195E D004       05130 	BRA   m222
                  05131 			;								}
                  05132 			;							case 0xCC:
                  05133 			;								{
                  05134 			;								sec += 10;
001960 0E0A       05135 m220	MOVLW 10
001962 2630       05136 	ADDWF sec,1,0
                  05137 			;								break;
001964 D001       05138 	BRA   m222
                  05139 			;								}
                  05140 			;							case 0xCD:
                  05141 			;								{
                  05142 			;								sec ++;
001966 2A30       05143 m221	INCF  sec,1,0
                  05144 			;								break;
                  05145 			;								}
                  05146 			;							}	// end switch(lcd_adr)
                  05147 			;						}	// end if
                  05148 			;					}	// end if(UP)
                  05149 			;
                  05150 			;				if(!DOWN)
001968 B683       05151 m222	BTFSC 0xF83,DOWN,0
00196A D745       05152 	BRA   m200
                  05153 			;					{
                  05154 			;					if(digit > 0) 
00196C 520D       05155 	MOVF  digit,1,0
00196E E004       05156 	BZ    m223
                  05157 			;						{
                  05158 			;						digit --;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 87

ADDR   CODE       LINE  SOURCE

001970 060D       05159 	DECF  digit,1,0
                  05160 			;						change = 1;
001972 0E01       05161 	MOVLW 1
001974 6E0B       05162 	MOVWF change,0
                  05163 			;						}
                  05164 			;					else change = 0;
001976 D001       05165 	BRA   m224
001978 6A0B       05166 m223	CLRF  change,0
                  05167 			;					while(!DOWN);
00197A A683       05168 m224	BTFSS 0xF83,DOWN,0
00197C D7FE       05169 	BRA   m224
                  05170 			;					delay(100);
00197E 0E64       05171 	MOVLW 100
001980 EC3D F001  05172 	CALL  delay
                  05173 			;					if(change)
001984 520B       05174 	MOVF  change,1,0
001986 B4D8       05175 	BTFSC 0xFD8,Zero_,0
001988 D736       05176 	BRA   m200
                  05177 			;						{
                  05178 			;						switch(lcd_adr)
00198A 500F       05179 	MOVF  lcd_adr,W,0
00198C 0A88       05180 	XORLW 136
00198E E013       05181 	BZ    m225
001990 0A01       05182 	XORLW 1
001992 E016       05183 	BZ    m226
001994 0A02       05184 	XORLW 2
001996 E019       05185 	BZ    m227
001998 0A07       05186 	XORLW 7
00199A E01C       05187 	BZ    m228
00199C 0A4A       05188 	XORLW 74
00199E E01E       05189 	BZ    m229
0019A0 0A01       05190 	XORLW 1
0019A2 E01F       05191 	BZ    m230
0019A4 0A0E       05192 	XORLW 14
0019A6 E01F       05193 	BZ    m231
0019A8 0A03       05194 	XORLW 3
0019AA E020       05195 	BZ    m232
0019AC 0A06       05196 	XORLW 6
0019AE E020       05197 	BZ    m233
0019B0 0A01       05198 	XORLW 1
0019B2 E021       05199 	BZ    m234
0019B4 D720       05200 	BRA   m200
                  05201 			;							{
                  05202 			;							case 0x88:
                  05203 			;								{
                  05204 			;								credit -= 1000;
0019B6 0EE8       05205 m225	MOVLW 232
0019B8 5F9A       05206 	SUBWF credit,1,1
0019BA 0E03       05207 	MOVLW 3
0019BC 5B9B       05208 	SUBWFB credit+1,1,1
                  05209 			;								break;
0019BE D71B       05210 	BRA   m200
                  05211 			;								}
                  05212 			;							case 0x89:
                  05213 			;								{
                  05214 			;								credit -= 100;
0019C0 0E64       05215 m226	MOVLW 100
0019C2 5F9A       05216 	SUBWF credit,1,1
0019C4 0E00       05217 	MOVLW 0
0019C6 5B9B       05218 	SUBWFB credit+1,1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 88

ADDR   CODE       LINE  SOURCE

                  05219 			;								break;
0019C8 D716       05220 	BRA   m200
                  05221 			;								}
                  05222 			;							case 0x8B:
                  05223 			;								{
                  05224 			;								credit -= 10;
0019CA 0E0A       05225 m227	MOVLW 10
0019CC 5F9A       05226 	SUBWF credit,1,1
0019CE 0E00       05227 	MOVLW 0
0019D0 5B9B       05228 	SUBWFB credit+1,1,1
                  05229 			;								break;
0019D2 D711       05230 	BRA   m200
                  05231 			;								}
                  05232 			;							case 0x8C:
                  05233 			;								{
                  05234 			;								credit --;
0019D4 079A       05235 m228	DECF  credit,1,1
0019D6 0E00       05236 	MOVLW 0
0019D8 5B9B       05237 	SUBWFB credit+1,1,1
                  05238 			;								break;
0019DA D70D       05239 	BRA   m200
                  05240 			;								}
                  05241 			;							case 0xC6:
                  05242 			;								{
                  05243 			;								hour -= 10;
0019DC 0E0A       05244 m229	MOVLW 10
0019DE 5E2E       05245 	SUBWF hour,1,0
                  05246 			;								break;
0019E0 D70A       05247 	BRA   m200
                  05248 			;								}
                  05249 			;							case 0xC7:
                  05250 			;								{
                  05251 			;								hour --;
0019E2 062E       05252 m230	DECF  hour,1,0
                  05253 			;								break;
0019E4 D708       05254 	BRA   m200
                  05255 			;								}
                  05256 			;							case 0xC9:
                  05257 			;								{
                  05258 			;								min -= 10;
0019E6 0E0A       05259 m231	MOVLW 10
0019E8 5E2F       05260 	SUBWF min,1,0
                  05261 			;								break;
0019EA D705       05262 	BRA   m200
                  05263 			;								}
                  05264 			;							case 0xCA:
                  05265 			;								{
                  05266 			;								min --;
0019EC 062F       05267 m232	DECF  min,1,0
                  05268 			;								break;
0019EE D703       05269 	BRA   m200
                  05270 			;								}
                  05271 			;							case 0xCC:
                  05272 			;								{
                  05273 			;								sec -= 10;
0019F0 0E0A       05274 m233	MOVLW 10
0019F2 5E30       05275 	SUBWF sec,1,0
                  05276 			;								break;
0019F4 D700       05277 	BRA   m200
                  05278 			;								}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 89

ADDR   CODE       LINE  SOURCE

                  05279 			;							case 0xCD:
                  05280 			;								{
                  05281 			;								sec --;
0019F6 0630       05282 m234	DECF  sec,1,0
                  05283 			;								break;
0019F8 D6FE       05284 	BRA   m200
                  05285 			;								}
                  05286 			;							}	// end switch(lcd_adr)
                  05287 			;						}	// end if(change)
                  05288 			;					}	// end if(DOWN) 
                  05289 			;				}	// end while(k)
                  05290 			;			}	// end for(ind)
0019FA 2A2C       05291 m235	INCF  ind,1,0
0019FC D6A2       05292 	BRA   m189
                  05293 			;		delay(100);
0019FE 0E64       05294 m236	MOVLW 100
001A00 EC3D F001  05295 	CALL  delay
                  05296 			;		lcd_setup(0);
001A04 0E00       05297 	MOVLW 0
001A06 EC6D F005  05298 	CALL  lcd_setup
                  05299 			;		lcd_clear();
001A0A EC86 F005  05300 	CALL  lcd_clear
                  05301 			;		credit = 0;
001A0E 6B9A       05302 	CLRF  credit,1
001A10 6B9B       05303 	CLRF  credit+1,1
                  05304 			;		while(!ESC); delay(100);
001A12 A483       05305 m237	BTFSS 0xF83,ESC,0
001A14 D7FE       05306 	BRA   m237
001A16 0E64       05307 	MOVLW 100
001A18 EC3D F001  05308 	CALL  delay
                  05309 			;		while(!ENTER); delay(100);
001A1C AA83       05310 m238	BTFSS 0xF83,ENTER,0
001A1E D7FE       05311 	BRA   m238
001A20 0E64       05312 	MOVLW 100
001A22 EC3D F001  05313 	CALL  delay
                  05314 			;		break;
001A26 D19F       05315 	BRA   m265
                  05316 			;		}
                  05317 			;	case 40:		// Inhibit settings
                  05318 			;		{
                  05319 			;		vINH = en_to_dis(vINH,eINH);
001A28 C034 F011  05320 m239	MOVFF vINH,ENbit
001A2C 0EFF       05321 	MOVLW 255
001A2E D99C       05322 	RCALL en_to_dis
001A30 6E34       05323 	MOVWF vINH,0
                  05324 			;		break;
001A32 D199       05325 	BRA   m265
                  05326 			;		}
                  05327 			;	case 41:		// Start settings
                  05328 			;		{
                  05329 			;		vComm = en_to_dis(vComm,eComm);
001A34 C035 F011  05330 m240	MOVFF vComm,ENbit
001A38 0EFE       05331 	MOVLW 254
001A3A D996       05332 	RCALL en_to_dis
001A3C 6E35       05333 	MOVWF vComm,0
                  05334 			;		break;
001A3E D193       05335 	BRA   m265
                  05336 			;		}
                  05337 			;	case 42:		// BL settings
                  05338 			;		{
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 90

ADDR   CODE       LINE  SOURCE

                  05339 			;		vBL = en_to_dis(vBL,eBL);
001A40 C03B F011  05340 m241	MOVFF vBL,ENbit
001A44 0EFB       05341 	MOVLW 251
001A46 D990       05342 	RCALL en_to_dis
001A48 6E3B       05343 	MOVWF vBL,0
                  05344 			;		break;
001A4A D18D       05345 	BRA   m265
                  05346 			;		}
                  05347 			;	case 43:		// AUTOSTART value 
                  05348 			;		{
                  05349 			;		change = 1;
001A4C 0E01       05350 m242	MOVLW 1
001A4E 6E0B       05351 	MOVWF change,0
                  05352 			;		while(1)
                  05353 			;			{
                  05354 			;			if(change)
001A50 520B       05355 m243	MOVF  change,1,0
001A52 E01B       05356 	BZ    m244
                  05357 			;				{
                  05358 			;				change = 0;
001A54 6A0B       05359 	CLRF  change,0
                  05360 			;				hour = 0;
001A56 6A2E       05361 	CLRF  hour,0
                  05362 			;				min = vAUTOSTART / 60;
001A58 C044 F01C  05363 	MOVFF vAUTOSTART,arg1
001A5C 6A1D       05364 	CLRF  arg1+1,0
001A5E 0E3C       05365 	MOVLW 60
001A60 ECCC F000  05366 	CALL  _divU16_8
001A64 C01C F02F  05367 	MOVFF arg1,min
                  05368 			;				sec = vAUTOSTART % 60;
001A68 C044 F01C  05369 	MOVFF vAUTOSTART,arg1_5
001A6C 6A1D       05370 	CLRF  arg1_5+1,0
001A6E 0E3C       05371 	MOVLW 60
001A70 ECDF F000  05372 	CALL  _remU16_8
001A74 6E30       05373 	MOVWF sec,0
                  05374 			;				lcd_goto(LINE2);
001A76 0EC0       05375 	MOVLW 192
001A78 EC83 F005  05376 	CALL  lcd_goto
                  05377 			;				lcd_puts(Time);
001A7C 0E1A       05378 	MOVLW 26
001A7E 6E14       05379 	MOVWF s,0
001A80 6A15       05380 	CLRF  s+1,0
001A82 EC8C F005  05381 	CALL  lcd_puts
                  05382 			;				lcd_time();
001A86 EC33 F006  05383 	CALL  lcd_time
                  05384 			;				}
                  05385 			;			if(!DOWN)
001A8A B683       05386 m244	BTFSC 0xF83,DOWN,0
001A8C D00A       05387 	BRA   m246
                  05388 			;				{
                  05389 			;				if(vAUTOSTART > 0) 
001A8E 5244       05390 	MOVF  vAUTOSTART,1,0
001A90 E003       05391 	BZ    m245
                  05392 			;					{
                  05393 			;					vAUTOSTART --;
001A92 0644       05394 	DECF  vAUTOSTART,1,0
                  05395 			;					change = 1;
001A94 0E01       05396 	MOVLW 1
001A96 6E0B       05397 	MOVWF change,0
                  05398 			;					}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 91

ADDR   CODE       LINE  SOURCE

                  05399 			;				while(!DOWN);
001A98 A683       05400 m245	BTFSS 0xF83,DOWN,0
001A9A D7FE       05401 	BRA   m245
                  05402 			;				delay(100);
001A9C 0E64       05403 	MOVLW 100
001A9E EC3D F001  05404 	CALL  delay
                  05405 			;				}
                  05406 			;			if(!UP)
001AA2 B883       05407 m246	BTFSC 0xF83,UP,0
001AA4 D00B       05408 	BRA   m248
                  05409 			;				{
                  05410 			;				if(vAUTOSTART < 240) 
001AA6 0EF0       05411 	MOVLW 240
001AA8 6044       05412 	CPFSLT vAUTOSTART,0
001AAA D003       05413 	BRA   m247
                  05414 			;					{
                  05415 			;					vAUTOSTART ++;
001AAC 2A44       05416 	INCF  vAUTOSTART,1,0
                  05417 			;					change = 1;
001AAE 0E01       05418 	MOVLW 1
001AB0 6E0B       05419 	MOVWF change,0
                  05420 			;					}
                  05421 			;				while(!UP);
001AB2 A883       05422 m247	BTFSS 0xF83,UP,0
001AB4 D7FE       05423 	BRA   m247
                  05424 			;				delay(100);
001AB6 0E64       05425 	MOVLW 100
001AB8 EC3D F001  05426 	CALL  delay
                  05427 			;				}
                  05428 			;			if(!ENTER)
001ABC BA83       05429 m248	BTFSC 0xF83,ENTER,0
001ABE D013       05430 	BRA   m250
                  05431 			;				{
                  05432 			;				writeEEPROM(vAUTOSTART,eAUTOSTART);
001AC0 C044 F014  05433 	MOVFF vAUTOSTART,smb_2
001AC4 0EDF       05434 	MOVLW 223
001AC6 EC61 F002  05435 	CALL  writeEEPROM
                  05436 			;				while(!ENTER);
001ACA AA83       05437 m249	BTFSS 0xF83,ENTER,0
001ACC D7FE       05438 	BRA   m249
                  05439 			;				delay(100);
001ACE 0E64       05440 	MOVLW 100
001AD0 EC3D F001  05441 	CALL  delay
                  05442 			;				lcd_goto(LINE2);
001AD4 0EC0       05443 	MOVLW 192
001AD6 EC83 F005  05444 	CALL  lcd_goto
                  05445 			;				lcd_puts(Save);
001ADA 0EA4       05446 	MOVLW 164
001ADC 6E14       05447 	MOVWF s,0
001ADE 6A15       05448 	CLRF  s+1,0
001AE0 EC8C F005  05449 	CALL  lcd_puts
                  05450 			;				break;
001AE4 D002       05451 	BRA   m251
                  05452 			;				}
                  05453 			;			if(!ESC) break;
001AE6 B483       05454 m250	BTFSC 0xF83,ESC,0
001AE8 D7B3       05455 	BRA   m243
                  05456 			;			}
                  05457 			;		ESCbut();
001AEA ECC0 F001  05458 m251	CALL  ESCbut
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 92

ADDR   CODE       LINE  SOURCE

                  05459 			;		break;
001AEE D13B       05460 	BRA   m265
                  05461 			;		}
                  05462 			;	case 44:		// Error log
                  05463 			;		{
                  05464 			;		lcd_clear();
001AF0 EC86 F005  05465 m252	CALL  lcd_clear
                  05466 			;		if(err1)
001AF4 5227       05467 	MOVF  err1,1,0
001AF6 E014       05468 	BZ    m253
                  05469 			;			{
                  05470 			;			lcd_goto(LINE1);
001AF8 0E80       05471 	MOVLW 128
001AFA EC83 F005  05472 	CALL  lcd_goto
                  05473 			;			lcd_puts(Chan1);
001AFE 0E3D       05474 	MOVLW 61
001B00 6E14       05475 	MOVWF s,0
001B02 0E01       05476 	MOVLW 1
001B04 6E15       05477 	MOVWF s+1,0
001B06 EC8C F005  05478 	CALL  lcd_puts
                  05479 			;			lcd_goto(LINE2);
001B0A 0EC0       05480 	MOVLW 192
001B0C EC83 F005  05481 	CALL  lcd_goto
                  05482 			;			lcd_puts(Error);
001B10 0E0A       05483 	MOVLW 10
001B12 6E14       05484 	MOVWF s,0
001B14 0E01       05485 	MOVLW 1
001B16 6E15       05486 	MOVWF s+1,0
001B18 EC8C F005  05487 	CALL  lcd_puts
                  05488 			;			ESCbut();
001B1C ECC0 F001  05489 	CALL  ESCbut
                  05490 			;			}
                  05491 			;		if(err2)
001B20 5228       05492 m253	MOVF  err2,1,0
001B22 E014       05493 	BZ    m254
                  05494 			;			{
                  05495 			;			lcd_goto(LINE1);
001B24 0E80       05496 	MOVLW 128
001B26 EC83 F005  05497 	CALL  lcd_goto
                  05498 			;			lcd_puts(Chan2);
001B2A 0E49       05499 	MOVLW 73
001B2C 6E14       05500 	MOVWF s,0
001B2E 0E01       05501 	MOVLW 1
001B30 6E15       05502 	MOVWF s+1,0
001B32 EC8C F005  05503 	CALL  lcd_puts
                  05504 			;			lcd_goto(LINE2);
001B36 0EC0       05505 	MOVLW 192
001B38 EC83 F005  05506 	CALL  lcd_goto
                  05507 			;			lcd_puts(Error);
001B3C 0E0A       05508 	MOVLW 10
001B3E 6E14       05509 	MOVWF s,0
001B40 0E01       05510 	MOVLW 1
001B42 6E15       05511 	MOVWF s+1,0
001B44 EC8C F005  05512 	CALL  lcd_puts
                  05513 			;			ESCbut();
001B48 ECC0 F001  05514 	CALL  ESCbut
                  05515 			;			}
                  05516 			;		if(err3)
001B4C 5229       05517 m254	MOVF  err3,1,0
001B4E E014       05518 	BZ    m255
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 93

ADDR   CODE       LINE  SOURCE

                  05519 			;			{
                  05520 			;			lcd_goto(LINE1);
001B50 0E80       05521 	MOVLW 128
001B52 EC83 F005  05522 	CALL  lcd_goto
                  05523 			;			lcd_puts(Chan3);
001B56 0E55       05524 	MOVLW 85
001B58 6E14       05525 	MOVWF s,0
001B5A 0E01       05526 	MOVLW 1
001B5C 6E15       05527 	MOVWF s+1,0
001B5E EC8C F005  05528 	CALL  lcd_puts
                  05529 			;			lcd_goto(LINE2);
001B62 0EC0       05530 	MOVLW 192
001B64 EC83 F005  05531 	CALL  lcd_goto
                  05532 			;			lcd_puts(Error);
001B68 0E0A       05533 	MOVLW 10
001B6A 6E14       05534 	MOVWF s,0
001B6C 0E01       05535 	MOVLW 1
001B6E 6E15       05536 	MOVWF s+1,0
001B70 EC8C F005  05537 	CALL  lcd_puts
                  05538 			;			ESCbut();
001B74 ECC0 F001  05539 	CALL  ESCbut
                  05540 			;			}
                  05541 			;		if(err4)
001B78 522A       05542 m255	MOVF  err4,1,0
001B7A E014       05543 	BZ    m256
                  05544 			;			{
                  05545 			;			lcd_goto(LINE1);
001B7C 0E80       05546 	MOVLW 128
001B7E EC83 F005  05547 	CALL  lcd_goto
                  05548 			;			lcd_puts(Chan4);
001B82 0E61       05549 	MOVLW 97
001B84 6E14       05550 	MOVWF s,0
001B86 0E01       05551 	MOVLW 1
001B88 6E15       05552 	MOVWF s+1,0
001B8A EC8C F005  05553 	CALL  lcd_puts
                  05554 			;			lcd_goto(LINE2);
001B8E 0EC0       05555 	MOVLW 192
001B90 EC83 F005  05556 	CALL  lcd_goto
                  05557 			;			lcd_puts(Error);
001B94 0E0A       05558 	MOVLW 10
001B96 6E14       05559 	MOVWF s,0
001B98 0E01       05560 	MOVLW 1
001B9A 6E15       05561 	MOVWF s+1,0
001B9C EC8C F005  05562 	CALL  lcd_puts
                  05563 			;			ESCbut();
001BA0 ECC0 F001  05564 	CALL  ESCbut
                  05565 			;			}
                  05566 			;		if(err6)
001BA4 522B       05567 m256	MOVF  err6,1,0
001BA6 E014       05568 	BZ    m257
                  05569 			;			{
                  05570 			;			lcd_goto(LINE1);
001BA8 0E80       05571 	MOVLW 128
001BAA EC83 F005  05572 	CALL  lcd_goto
                  05573 			;			lcd_puts(Chan6);
001BAE 0E6D       05574 	MOVLW 109
001BB0 6E14       05575 	MOVWF s,0
001BB2 0E01       05576 	MOVLW 1
001BB4 6E15       05577 	MOVWF s+1,0
001BB6 EC8C F005  05578 	CALL  lcd_puts
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 94

ADDR   CODE       LINE  SOURCE

                  05579 			;			lcd_goto(LINE2);
001BBA 0EC0       05580 	MOVLW 192
001BBC EC83 F005  05581 	CALL  lcd_goto
                  05582 			;			lcd_puts(Error);
001BC0 0E0A       05583 	MOVLW 10
001BC2 6E14       05584 	MOVWF s,0
001BC4 0E01       05585 	MOVLW 1
001BC6 6E15       05586 	MOVWF s+1,0
001BC8 EC8C F005  05587 	CALL  lcd_puts
                  05588 			;			ESCbut();
001BCC ECC0 F001  05589 	CALL  ESCbut
                  05590 			;			}
                  05591 			;		if(!err1 && !err2 && !err3 && !err4 && !err6)
001BD0 6627       05592 m257	TSTFSZ err1,0
001BD2 D0C9       05593 	BRA   m265
001BD4 6628       05594 	TSTFSZ err2,0
001BD6 D0C7       05595 	BRA   m265
001BD8 6629       05596 	TSTFSZ err3,0
001BDA D0C5       05597 	BRA   m265
001BDC 662A       05598 	TSTFSZ err4,0
001BDE D0C3       05599 	BRA   m265
001BE0 662B       05600 	TSTFSZ err6,0
001BE2 D0C1       05601 	BRA   m265
                  05602 			;			{
                  05603 			;			lcd_goto(LINE1);
001BE4 0E80       05604 	MOVLW 128
001BE6 EC83 F005  05605 	CALL  lcd_goto
                  05606 			;			lcd_puts(nError);
001BEA 0E1B       05607 	MOVLW 27
001BEC 6E14       05608 	MOVWF s,0
001BEE 0E01       05609 	MOVLW 1
001BF0 6E15       05610 	MOVWF s+1,0
001BF2 EC8C F005  05611 	CALL  lcd_puts
                  05612 			;			ESCbut();
001BF6 ECC0 F001  05613 	CALL  ESCbut
                  05614 			;			}
                  05615 			;		break;
001BFA D0B5       05616 	BRA   m265
                  05617 			;		}
                  05618 			;	case 45:		// Clear Error log
                  05619 			;		{
                  05620 			;		err1 = 0;
001BFC 6A27       05621 m258	CLRF  err1,0
                  05622 			;		err2 = 0;
001BFE 6A28       05623 	CLRF  err2,0
                  05624 			;		err3 = 0;
001C00 6A29       05625 	CLRF  err3,0
                  05626 			;		err4 = 0;
001C02 6A2A       05627 	CLRF  err4,0
                  05628 			;		lcd_goto(LINE2);
001C04 0EC0       05629 	MOVLW 192
001C06 EC83 F005  05630 	CALL  lcd_goto
                  05631 			;		lcd_puts(CLEAR);
001C0A 0E7F       05632 	MOVLW 127
001C0C 6E14       05633 	MOVWF s,0
001C0E 6A15       05634 	CLRF  s+1,0
001C10 EC8C F005  05635 	CALL  lcd_puts
                  05636 			;		ESCbut();
001C14 ECC0 F001  05637 	CALL  ESCbut
                  05638 			;		break;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 95

ADDR   CODE       LINE  SOURCE

001C18 D0A6       05639 	BRA   m265
                  05640 			;		}
                  05641 			;	case 46:		// Clear credit 1
                  05642 			;		{
                  05643 			;		cred1 = 0;
001C1A 6BA3       05644 m259	CLRF  cred1,1
001C1C 6BA4       05645 	CLRF  cred1+1,1
001C1E 6BA5       05646 	CLRF  cred1+2,1
                  05647 			;//		REL1_OFF();
                  05648 			;		writeEEPROM(NULL,etime1H); delay(10);
001C20 6A14       05649 	CLRF  smb_2,0
001C22 0EE0       05650 	MOVLW 224
001C24 EC61 F002  05651 	CALL  writeEEPROM
001C28 0E0A       05652 	MOVLW 10
001C2A EC3D F001  05653 	CALL  delay
                  05654 			;		writeEEPROM(NULL,etime1M);  delay(10);
001C2E 6A14       05655 	CLRF  smb_2,0
001C30 0EE1       05656 	MOVLW 225
001C32 EC61 F002  05657 	CALL  writeEEPROM
001C36 0E0A       05658 	MOVLW 10
001C38 EC3D F001  05659 	CALL  delay
                  05660 			;		lcd_goto(LINE2);
001C3C 0EC0       05661 	MOVLW 192
001C3E EC83 F005  05662 	CALL  lcd_goto
                  05663 			;		lcd_puts(CLEAR);
001C42 0E7F       05664 	MOVLW 127
001C44 6E14       05665 	MOVWF s,0
001C46 6A15       05666 	CLRF  s+1,0
001C48 EC8C F005  05667 	CALL  lcd_puts
                  05668 			;		ESCbut();
001C4C ECC0 F001  05669 	CALL  ESCbut
                  05670 			;		break;
001C50 D08A       05671 	BRA   m265
                  05672 			;		}
                  05673 			;	case 47:		// clear credit 2
                  05674 			;		{
                  05675 			;		cred2 = 0;
001C52 6BA6       05676 m260	CLRF  cred2,1
001C54 6BA7       05677 	CLRF  cred2+1,1
001C56 6BA8       05678 	CLRF  cred2+2,1
                  05679 			;//		REL2_OFF();
                  05680 			;		writeEEPROM(NULL,etime2H); delay(10);
001C58 6A14       05681 	CLRF  smb_2,0
001C5A 0EE2       05682 	MOVLW 226
001C5C EC61 F002  05683 	CALL  writeEEPROM
001C60 0E0A       05684 	MOVLW 10
001C62 EC3D F001  05685 	CALL  delay
                  05686 			;		writeEEPROM(NULL,etime2M);  delay(10);
001C66 6A14       05687 	CLRF  smb_2,0
001C68 0EE3       05688 	MOVLW 227
001C6A EC61 F002  05689 	CALL  writeEEPROM
001C6E 0E0A       05690 	MOVLW 10
001C70 EC3D F001  05691 	CALL  delay
                  05692 			;		lcd_goto(LINE2);
001C74 0EC0       05693 	MOVLW 192
001C76 EC83 F005  05694 	CALL  lcd_goto
                  05695 			;		lcd_puts(CLEAR);
001C7A 0E7F       05696 	MOVLW 127
001C7C 6E14       05697 	MOVWF s,0
001C7E 6A15       05698 	CLRF  s+1,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 96

ADDR   CODE       LINE  SOURCE

001C80 EC8C F005  05699 	CALL  lcd_puts
                  05700 			;		ESCbut();
001C84 ECC0 F001  05701 	CALL  ESCbut
                  05702 			;		break;
001C88 D06E       05703 	BRA   m265
                  05704 			;		}
                  05705 			;	case 48:		// Clear credit 3
                  05706 			;		{
                  05707 			;		cred3 = 0;
001C8A 6BA9       05708 m261	CLRF  cred3,1
001C8C 6BAA       05709 	CLRF  cred3+1,1
001C8E 6BAB       05710 	CLRF  cred3+2,1
                  05711 			;//		REL3_OFF();
                  05712 			;		writeEEPROM(NULL,etime3H); delay(10);
001C90 6A14       05713 	CLRF  smb_2,0
001C92 0EC0       05714 	MOVLW 192
001C94 EC61 F002  05715 	CALL  writeEEPROM
001C98 0E0A       05716 	MOVLW 10
001C9A EC3D F001  05717 	CALL  delay
                  05718 			;		writeEEPROM(NULL,etime3M);  delay(10);
001C9E 6A14       05719 	CLRF  smb_2,0
001CA0 0EC1       05720 	MOVLW 193
001CA2 EC61 F002  05721 	CALL  writeEEPROM
001CA6 0E0A       05722 	MOVLW 10
001CA8 EC3D F001  05723 	CALL  delay
                  05724 			;		lcd_goto(LINE2);
001CAC 0EC0       05725 	MOVLW 192
001CAE EC83 F005  05726 	CALL  lcd_goto
                  05727 			;		lcd_puts(CLEAR);
001CB2 0E7F       05728 	MOVLW 127
001CB4 6E14       05729 	MOVWF s,0
001CB6 6A15       05730 	CLRF  s+1,0
001CB8 EC8C F005  05731 	CALL  lcd_puts
                  05732 			;		ESCbut();
001CBC ECC0 F001  05733 	CALL  ESCbut
                  05734 			;		break;
001CC0 D052       05735 	BRA   m265
                  05736 			;		}
                  05737 			;	case 49:		// clear credit 4
                  05738 			;		{
                  05739 			;		cred4 = 0;
001CC2 6BAC       05740 m262	CLRF  cred4,1
001CC4 6BAD       05741 	CLRF  cred4+1,1
001CC6 6BAE       05742 	CLRF  cred4+2,1
                  05743 			;//		REL4_OFF();
                  05744 			;		writeEEPROM(NULL,etime4H); delay(10);
001CC8 6A14       05745 	CLRF  smb_2,0
001CCA 0EC2       05746 	MOVLW 194
001CCC EC61 F002  05747 	CALL  writeEEPROM
001CD0 0E0A       05748 	MOVLW 10
001CD2 EC3D F001  05749 	CALL  delay
                  05750 			;		writeEEPROM(NULL,etime4M);  delay(10);
001CD6 6A14       05751 	CLRF  smb_2,0
001CD8 0EC3       05752 	MOVLW 195
001CDA EC61 F002  05753 	CALL  writeEEPROM
001CDE 0E0A       05754 	MOVLW 10
001CE0 EC3D F001  05755 	CALL  delay
                  05756 			;		lcd_goto(LINE2);
001CE4 0EC0       05757 	MOVLW 192
001CE6 EC83 F005  05758 	CALL  lcd_goto
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 97

ADDR   CODE       LINE  SOURCE

                  05759 			;		lcd_puts(CLEAR);
001CEA 0E7F       05760 	MOVLW 127
001CEC 6E14       05761 	MOVWF s,0
001CEE 6A15       05762 	CLRF  s+1,0
001CF0 EC8C F005  05763 	CALL  lcd_puts
                  05764 			;		ESCbut();
001CF4 ECC0 F001  05765 	CALL  ESCbut
                  05766 			;		break;
001CF8 D036       05767 	BRA   m265
                  05768 			;		}
                  05769 			;	case 50:		// clear credit 6
                  05770 			;		{
                  05771 			;		cred6 = 0;
001CFA 6BAF       05772 m263	CLRF  cred6,1
001CFC 6BB0       05773 	CLRF  cred6+1,1
001CFE 6BB1       05774 	CLRF  cred6+2,1
                  05775 			;//		REL4_OFF();
                  05776 			;		writeEEPROM(NULL,etime6H); delay(10);
001D00 6A14       05777 	CLRF  smb_2,0
001D02 0EC4       05778 	MOVLW 196
001D04 EC61 F002  05779 	CALL  writeEEPROM
001D08 0E0A       05780 	MOVLW 10
001D0A EC3D F001  05781 	CALL  delay
                  05782 			;		writeEEPROM(NULL,etime6M);  delay(10);
001D0E 6A14       05783 	CLRF  smb_2,0
001D10 0EC5       05784 	MOVLW 197
001D12 EC61 F002  05785 	CALL  writeEEPROM
001D16 0E0A       05786 	MOVLW 10
001D18 EC3D F001  05787 	CALL  delay
                  05788 			;		lcd_goto(LINE2);
001D1C 0EC0       05789 	MOVLW 192
001D1E EC83 F005  05790 	CALL  lcd_goto
                  05791 			;		lcd_puts(CLEAR);
001D22 0E7F       05792 	MOVLW 127
001D24 6E14       05793 	MOVWF s,0
001D26 6A15       05794 	CLRF  s+1,0
001D28 EC8C F005  05795 	CALL  lcd_puts
                  05796 			;		ESCbut();
001D2C ECC0 F001  05797 	CALL  ESCbut
                  05798 			;		break;
001D30 D01A       05799 	BRA   m265
                  05800 			;		}
                  05801 			;	case 51:		// clear overpay
                  05802 			;		{
                  05803 			;		overpay = 0;
001D32 6BC7       05804 m264	CLRF  overpay,1
001D34 6BC8       05805 	CLRF  overpay+1,1
001D36 6BC9       05806 	CLRF  overpay+2,1
                  05807 			;		writeEEPROM(NULL,eoverH); delay(10);
001D38 6A14       05808 	CLRF  smb_2,0
001D3A 0EE7       05809 	MOVLW 231
001D3C EC61 F002  05810 	CALL  writeEEPROM
001D40 0E0A       05811 	MOVLW 10
001D42 EC3D F001  05812 	CALL  delay
                  05813 			;		writeEEPROM(NULL,eoverM); delay(10);
001D46 6A14       05814 	CLRF  smb_2,0
001D48 0EE8       05815 	MOVLW 232
001D4A EC61 F002  05816 	CALL  writeEEPROM
001D4E 0E0A       05817 	MOVLW 10
001D50 EC3D F001  05818 	CALL  delay
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 98

ADDR   CODE       LINE  SOURCE

                  05819 			;		writeEEPROM(NULL,eoverL); delay(10);	
001D54 6A14       05820 	CLRF  smb_2,0
001D56 0EE9       05821 	MOVLW 233
001D58 EC61 F002  05822 	CALL  writeEEPROM
001D5C 0E0A       05823 	MOVLW 10
001D5E EC3D F001  05824 	CALL  delay
                  05825 			;		st_clear();
001D62 EC16 F007  05826 	CALL  st_clear
                  05827 			;		break;
                  05828 			;		}
                  05829 			;	default: break;
                  05830 			;	}
                  05831 			;}
001D66 0012       05832 m265	RETURN
                  05833 			;
                  05834 			;/*-----------------------------------------------------*/
                  05835 			;
                  05836 			;char en_to_dis(char ENbit,uns8 ENaddr)
                  05837 			;{
                  05838 en_to_dis
001D68 6E12       05839 	MOVWF ENaddr,0
                  05840 			;char new_value;
                  05841 			;
                  05842 			;new_value = ENbit;
001D6A C011 F013  05843 	MOVFF ENbit,new_value
                  05844 			;lcd_goto(LINE2);
001D6E 0EC0       05845 	MOVLW 192
001D70 EC83 F005  05846 	CALL  lcd_goto
                  05847 			;if(ENbit) lcd_puts(EN);
001D74 5211       05848 	MOVF  ENbit,1,0
001D76 E006       05849 	BZ    m266
001D78 0EE8       05850 	MOVLW 232
001D7A 6E14       05851 	MOVWF s,0
001D7C 6A15       05852 	CLRF  s+1,0
001D7E EC8C F005  05853 	CALL  lcd_puts
                  05854 			;else lcd_puts(DIS);
001D82 D005       05855 	BRA   m267
001D84 0EF9       05856 m266	MOVLW 249
001D86 6E14       05857 	MOVWF s,0
001D88 6A15       05858 	CLRF  s+1,0
001D8A EC8C F005  05859 	CALL  lcd_puts
                  05860 			;SECcount = 0;
001D8E 6B96       05861 m267	CLRF  SECcount,1
001D90 6B97       05862 	CLRF  SECcount+1,1
                  05863 			;while(SECcount < 30)
001D92 5197       05864 m268	MOVF  SECcount+1,W,1
001D94 E127       05865 	BNZ   m272
001D96 0E1E       05866 	MOVLW 30
001D98 6196       05867 	CPFSLT SECcount,1
001D9A D024       05868 	BRA   m272
                  05869 			;	{
                  05870 			;	if(!ENTER) 
001D9C BA83       05871 	BTFSC 0xF83,ENTER,0
001D9E D020       05872 	BRA   m271
                  05873 			;		{
                  05874 			;		new_value ^= 1;
001DA0 0E01       05875 	MOVLW 1
001DA2 1A13       05876 	XORWF new_value,1,0
                  05877 			;		writeEEPROM(new_value,ENaddr); 
001DA4 C013 F014  05878 	MOVFF new_value,smb_2
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 99

ADDR   CODE       LINE  SOURCE

001DA8 5012       05879 	MOVF  ENaddr,W,0
001DAA EC61 F002  05880 	CALL  writeEEPROM
                  05881 			;		delay(10);
001DAE 0E0A       05882 	MOVLW 10
001DB0 EC3D F001  05883 	CALL  delay
                  05884 			;		lcd_goto(LINE2);
001DB4 0EC0       05885 	MOVLW 192
001DB6 EC83 F005  05886 	CALL  lcd_goto
                  05887 			;		if(new_value) lcd_puts(Enable);
001DBA 5213       05888 	MOVF  new_value,1,0
001DBC E006       05889 	BZ    m269
001DBE 0EC6       05890 	MOVLW 198
001DC0 6E14       05891 	MOVWF s,0
001DC2 6A15       05892 	CLRF  s+1,0
001DC4 EC8C F005  05893 	CALL  lcd_puts
                  05894 			;		else lcd_puts(Disable);
001DC8 D005       05895 	BRA   m270
001DCA 0ED7       05896 m269	MOVLW 215
001DCC 6E14       05897 	MOVWF s,0
001DCE 6A15       05898 	CLRF  s+1,0
001DD0 EC8C F005  05899 	CALL  lcd_puts
                  05900 			;		while(!ENTER);	delay(100);
001DD4 AA83       05901 m270	BTFSS 0xF83,ENTER,0
001DD6 D7FE       05902 	BRA   m270
001DD8 0E64       05903 	MOVLW 100
001DDA EC3D F001  05904 	CALL  delay
                  05905 			;		break;
001DDE D002       05906 	BRA   m272
                  05907 			;		}
                  05908 			;	if(!ESC) break;
001DE0 B483       05909 m271	BTFSC 0xF83,ESC,0
001DE2 D7D7       05910 	BRA   m268
                  05911 			;	}
                  05912 			;return (new_value);
001DE4 5013       05913 m272	MOVF  new_value,W,0
001DE6 0012       05914 	RETURN
                  05915 			;}
                  05916 			;
                  05917 			;/*-----------------------------------------------------*/
                  05918 			;
                  05919 			;void test(char en)
                  05920 			;{
                  05921 test
001DE8 6E11       05922 	MOVWF en,0
                  05923 			;if(en == 1)
001DEA 2C11       05924 	DECFSZ en,W,0
001DEC D006       05925 	BRA   m273
                  05926 			;	{
                  05927 			;	cred1 = 30;
001DEE 0E1E       05928 	MOVLW 30
001DF0 6FA3       05929 	MOVWF cred1,1
001DF2 6BA4       05930 	CLRF  cred1+1,1
001DF4 6BA5       05931 	CLRF  cred1+2,1
                  05932 			;	REL1_ON();
001DF6 EC2D F002  05933 	CALL  REL1_ON
                  05934 			;	}
                  05935 			;if(en == 2)
001DFA 0E02       05936 m273	MOVLW 2
001DFC 6211       05937 	CPFSEQ en,0
001DFE D006       05938 	BRA   m274
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 100

ADDR   CODE       LINE  SOURCE

                  05939 			;	{
                  05940 			;	cred2 = 30;
001E00 0E1E       05941 	MOVLW 30
001E02 6FA6       05942 	MOVWF cred2,1
001E04 6BA7       05943 	CLRF  cred2+1,1
001E06 6BA8       05944 	CLRF  cred2+2,1
                  05945 			;	REL2_ON();
001E08 EC34 F002  05946 	CALL  REL2_ON
                  05947 			;	}
                  05948 			;if(en == 3)
001E0C 0E03       05949 m274	MOVLW 3
001E0E 6211       05950 	CPFSEQ en,0
001E10 D006       05951 	BRA   m275
                  05952 			;	{
                  05953 			;	cred3 = 30;
001E12 0E1E       05954 	MOVLW 30
001E14 6FA9       05955 	MOVWF cred3,1
001E16 6BAA       05956 	CLRF  cred3+1,1
001E18 6BAB       05957 	CLRF  cred3+2,1
                  05958 			;	REL3_ON();
001E1A EC3B F002  05959 	CALL  REL3_ON
                  05960 			;	}
                  05961 			;if(en == 4)
001E1E 0E04       05962 m275	MOVLW 4
001E20 6211       05963 	CPFSEQ en,0
001E22 D006       05964 	BRA   m276
                  05965 			;	{
                  05966 			;	cred4 = 30;
001E24 0E1E       05967 	MOVLW 30
001E26 6FAC       05968 	MOVWF cred4,1
001E28 6BAD       05969 	CLRF  cred4+1,1
001E2A 6BAE       05970 	CLRF  cred4+2,1
                  05971 			;	REL4_ON();
001E2C EC42 F002  05972 	CALL  REL4_ON
                  05973 			;	}
                  05974 			;if(en == 6)
001E30 0E06       05975 m276	MOVLW 6
001E32 6211       05976 	CPFSEQ en,0
001E34 D006       05977 	BRA   m277
                  05978 			;	{
                  05979 			;	cred6 = 30;
001E36 0E1E       05980 	MOVLW 30
001E38 6FAF       05981 	MOVWF cred6,1
001E3A 6BB0       05982 	CLRF  cred6+1,1
001E3C 6BB1       05983 	CLRF  cred6+2,1
                  05984 			;	REL6_ON();
001E3E EC49 F002  05985 	CALL  REL6_ON
                  05986 			;	}
                  05987 			;lcd_goto(LINE1);
001E42 0E80       05988 m277	MOVLW 128
001E44 EC83 F005  05989 	CALL  lcd_goto
                  05990 			;lcd_puts(TESTS);
001E48 0E5D       05991 	MOVLW 93
001E4A 6E14       05992 	MOVWF s,0
001E4C 6A15       05993 	CLRF  s+1,0
001E4E EC8C F005  05994 	CALL  lcd_puts
                  05995 			;while((cred1 > 0) || (cred2 > 0) || (cred3 > 0) || (cred4 > 0) || (cred6 > 0))
001E52 51A3       05996 m278	MOVF  cred1,W,1
001E54 11A4       05997 	IORWF cred1+1,W,1
001E56 11A5       05998 	IORWF cred1+2,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 101

ADDR   CODE       LINE  SOURCE

001E58 E110       05999 	BNZ   m279
001E5A 51A6       06000 	MOVF  cred2,W,1
001E5C 11A7       06001 	IORWF cred2+1,W,1
001E5E 11A8       06002 	IORWF cred2+2,W,1
001E60 E10C       06003 	BNZ   m279
001E62 51A9       06004 	MOVF  cred3,W,1
001E64 11AA       06005 	IORWF cred3+1,W,1
001E66 11AB       06006 	IORWF cred3+2,W,1
001E68 E108       06007 	BNZ   m279
001E6A 51AC       06008 	MOVF  cred4,W,1
001E6C 11AD       06009 	IORWF cred4+1,W,1
001E6E 11AE       06010 	IORWF cred4+2,W,1
001E70 E104       06011 	BNZ   m279
001E72 51AF       06012 	MOVF  cred6,W,1
001E74 11B0       06013 	IORWF cred6+1,W,1
001E76 11B1       06014 	IORWF cred6+2,W,1
001E78 E059       06015 	BZ    m285
                  06016 			;	{
                  06017 			;	lcd_goto(LINE2);
001E7A 0EC0       06018 m279	MOVLW 192
001E7C EC83 F005  06019 	CALL  lcd_goto
                  06020 			;	if(en == 1) 
001E80 2C11       06021 	DECFSZ en,W,0
001E82 D00D       06022 	BRA   m280
                  06023 			;		{
                  06024 			;		conv(cred1);
001E84 C0A3 F012  06025 	MOVFF cred1,pr
001E88 C0A4 F013  06026 	MOVFF cred1+1,pr+1
001E8C C0A5 F014  06027 	MOVFF cred1+2,pr+2
001E90 EC51 F001  06028 	CALL  conv
                  06029 			;		lcd_puts(Time1);
001E94 0E21       06030 	MOVLW 33
001E96 6E14       06031 	MOVWF s,0
001E98 6A15       06032 	CLRF  s+1,0
001E9A EC8C F005  06033 	CALL  lcd_puts
                  06034 			;		}
                  06035 			;	if(en == 2)
001E9E 0E02       06036 m280	MOVLW 2
001EA0 6211       06037 	CPFSEQ en,0
001EA2 D00D       06038 	BRA   m281
                  06039 			;		{
                  06040 			;		conv(cred2);
001EA4 C0A6 F012  06041 	MOVFF cred2,pr
001EA8 C0A7 F013  06042 	MOVFF cred2+1,pr+1
001EAC C0A8 F014  06043 	MOVFF cred2+2,pr+2
001EB0 EC51 F001  06044 	CALL  conv
                  06045 			;		lcd_puts(Time2);
001EB4 0E29       06046 	MOVLW 41
001EB6 6E14       06047 	MOVWF s,0
001EB8 6A15       06048 	CLRF  s+1,0
001EBA EC8C F005  06049 	CALL  lcd_puts
                  06050 			;		}
                  06051 			;	if(en == 3) 
001EBE 0E03       06052 m281	MOVLW 3
001EC0 6211       06053 	CPFSEQ en,0
001EC2 D00D       06054 	BRA   m282
                  06055 			;		{
                  06056 			;		conv(cred3);
001EC4 C0A9 F012  06057 	MOVFF cred3,pr
001EC8 C0AA F013  06058 	MOVFF cred3+1,pr+1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 102

ADDR   CODE       LINE  SOURCE

001ECC C0AB F014  06059 	MOVFF cred3+2,pr+2
001ED0 EC51 F001  06060 	CALL  conv
                  06061 			;		lcd_puts(Time3);
001ED4 0E31       06062 	MOVLW 49
001ED6 6E14       06063 	MOVWF s,0
001ED8 6A15       06064 	CLRF  s+1,0
001EDA EC8C F005  06065 	CALL  lcd_puts
                  06066 			;		}
                  06067 			;	if(en == 4)
001EDE 0E04       06068 m282	MOVLW 4
001EE0 6211       06069 	CPFSEQ en,0
001EE2 D00D       06070 	BRA   m283
                  06071 			;		{
                  06072 			;		conv(cred4);
001EE4 C0AC F012  06073 	MOVFF cred4,pr
001EE8 C0AD F013  06074 	MOVFF cred4+1,pr+1
001EEC C0AE F014  06075 	MOVFF cred4+2,pr+2
001EF0 EC51 F001  06076 	CALL  conv
                  06077 			;		lcd_puts(Time4);
001EF4 0E39       06078 	MOVLW 57
001EF6 6E14       06079 	MOVWF s,0
001EF8 6A15       06080 	CLRF  s+1,0
001EFA EC8C F005  06081 	CALL  lcd_puts
                  06082 			;		}
                  06083 			;	if(en == 6)
001EFE 0E06       06084 m283	MOVLW 6
001F00 6211       06085 	CPFSEQ en,0
001F02 D00D       06086 	BRA   m284
                  06087 			;		{
                  06088 			;		conv(cred6);
001F04 C0AF F012  06089 	MOVFF cred6,pr
001F08 C0B0 F013  06090 	MOVFF cred6+1,pr+1
001F0C C0B1 F014  06091 	MOVFF cred6+2,pr+2
001F10 EC51 F001  06092 	CALL  conv
                  06093 			;		lcd_puts(Time6);
001F14 0E41       06094 	MOVLW 65
001F16 6E14       06095 	MOVWF s,0
001F18 6A15       06096 	CLRF  s+1,0
001F1A EC8C F005  06097 	CALL  lcd_puts
                  06098 			;		}
                  06099 			;	lcd_time();
001F1E EC33 F006  06100 m284	CALL  lcd_time
                  06101 			;	delay(100);
001F22 0E64       06102 	MOVLW 100
001F24 EC3D F001  06103 	CALL  delay
                  06104 			;	if(!ESC) break;
001F28 B483       06105 	BTFSC 0xF83,ESC,0
001F2A D793       06106 	BRA   m278
                  06107 			;	}
                  06108 			;if(en == 1)  
001F2C 2C11       06109 m285	DECFSZ en,W,0
001F2E D005       06110 	BRA   m286
                  06111 			;	{
                  06112 			;	REL_OFF();
001F30 EC50 F002  06113 	CALL  REL_OFF
                  06114 			;	cred1 = 0;
001F34 6BA3       06115 	CLRF  cred1,1
001F36 6BA4       06116 	CLRF  cred1+1,1
001F38 6BA5       06117 	CLRF  cred1+2,1
                  06118 			;	}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 103

ADDR   CODE       LINE  SOURCE

                  06119 			;if(en == 2)
001F3A 0E02       06120 m286	MOVLW 2
001F3C 6211       06121 	CPFSEQ en,0
001F3E D005       06122 	BRA   m287
                  06123 			;	{
                  06124 			;	REL_OFF();
001F40 EC50 F002  06125 	CALL  REL_OFF
                  06126 			;	cred2 = 0;
001F44 6BA6       06127 	CLRF  cred2,1
001F46 6BA7       06128 	CLRF  cred2+1,1
001F48 6BA8       06129 	CLRF  cred2+2,1
                  06130 			;	}
                  06131 			;if(en == 3)  
001F4A 0E03       06132 m287	MOVLW 3
001F4C 6211       06133 	CPFSEQ en,0
001F4E D005       06134 	BRA   m288
                  06135 			;	{
                  06136 			;	REL_OFF();
001F50 EC50 F002  06137 	CALL  REL_OFF
                  06138 			;	cred3 = 0;
001F54 6BA9       06139 	CLRF  cred3,1
001F56 6BAA       06140 	CLRF  cred3+1,1
001F58 6BAB       06141 	CLRF  cred3+2,1
                  06142 			;	}
                  06143 			;if(en == 4)
001F5A 0E04       06144 m288	MOVLW 4
001F5C 6211       06145 	CPFSEQ en,0
001F5E D005       06146 	BRA   m289
                  06147 			;	{
                  06148 			;	REL_OFF();
001F60 EC50 F002  06149 	CALL  REL_OFF
                  06150 			;	cred4 = 0;
001F64 6BAC       06151 	CLRF  cred4,1
001F66 6BAD       06152 	CLRF  cred4+1,1
001F68 6BAE       06153 	CLRF  cred4+2,1
                  06154 			;	}
                  06155 			;if(en == 6)
001F6A 0E06       06156 m289	MOVLW 6
001F6C 6211       06157 	CPFSEQ en,0
001F6E D005       06158 	BRA   m290
                  06159 			;	{
                  06160 			;	REL_OFF();
001F70 EC50 F002  06161 	CALL  REL_OFF
                  06162 			;	cred6 = 0;
001F74 6BAF       06163 	CLRF  cred6,1
001F76 6BB0       06164 	CLRF  cred6+1,1
001F78 6BB1       06165 	CLRF  cred6+2,1
                  06166 			;	}
                  06167 			;lcd_goto(LINE1);
001F7A 0E80       06168 m290	MOVLW 128
001F7C EC83 F005  06169 	CALL  lcd_goto
                  06170 			;lcd_puts(TESTF);
001F80 0E6E       06171 	MOVLW 110
001F82 6E14       06172 	MOVWF s,0
001F84 6A15       06173 	CLRF  s+1,0
001F86 EC8C F005  06174 	CALL  lcd_puts
                  06175 			;lcd_goto(LINE2);
001F8A 0EC0       06176 	MOVLW 192
001F8C EC83 F005  06177 	CALL  lcd_goto
                  06178 			;lcd_puts(NOTH);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 104

ADDR   CODE       LINE  SOURCE

001F90 0EB5       06179 	MOVLW 181
001F92 6E14       06180 	MOVWF s,0
001F94 6A15       06181 	CLRF  s+1,0
001F96 EC8C F005  06182 	CALL  lcd_puts
                  06183 			;ESCbut();
001F9A EFC0 F001  06184 	GOTO  ESCbut
                  06185 			;}
                  06186 
                  06187   ; FILE system.c
                  06188 			;#include "int18xxx.h"
                  06189 			;#include <defs.h>
                  06190 			;#include <config.h>
                  06191 			;#include <print.h>
                  06192 			;#include <interrupt.h>
                  06193 			;#include <spi.h>
                  06194 			;#include <pc.h>
                  06195 			;#include <math16.h>
                  06196 			;#include <functions.h>
                  06197 			;//#include <mmc.h>
                  06198 			;//#include <fat16.h>
                  06199 			;#include <eeprom.h>
                  06200 			;#include <lcd.h>
                  06201 			;#include <menu.h>
                  06202 			;
                  06203 			;void main(void)
                  06204 			;{
                  06205 main
                  06206 			;uns8 pp;
                  06207 			;uns16 val_tmp;
                  06208 			;uns16 x2_tmp;
                  06209 			;uns8 pause_flag;
                  06210 			;
                  06211 			;clearRAM();						// clear RAM
001F9E EE00 F000  06212 	LFSR  0,0 
001FA2 0E06       06213 	MOVLW 6
001FA4 0100       06214 	MOVLB 0
001FA6 6AEE       06215 m291	CLRF  POSTINC0,0
001FA8 62EA       06216 	CPFSEQ FSR0H,0
001FAA D7FD       06217 	BRA   m291
                  06218 			;SYSTEM_setup();delay(100);		// system config
001FAC ECF1 F000  06219 	CALL  SYSTEM_setup
001FB0 0E64       06220 	MOVLW 100
001FB2 EC3D F001  06221 	CALL  delay
                  06222 			;// uart(); delay(100);				// uart ini 
                  06223 			;SPI_setup(); delay(100);		// spi ini
001FB6 ECAF F000  06224 	CALL  SPI_setup
001FBA 0E64       06225 	MOVLW 100
001FBC EC3D F001  06226 	CALL  delay
                  06227 			;lcd_setup(0); delay(100);		// LCD ini routine
001FC0 0E00       06228 	MOVLW 0
001FC2 EC6D F005  06229 	CALL  lcd_setup
001FC6 0E64       06230 	MOVLW 100
001FC8 EC3D F001  06231 	CALL  delay
                  06232 			;lcd_clear();			
001FCC EC86 F005  06233 	CALL  lcd_clear
                  06234 			;start_int();					// Start interrupts
001FD0 ECB9 F001  06235 	CALL  start_int
                  06236 			;Load();							// Load epprom values
001FD4 EC71 F002  06237 	CALL  Load
                  06238 			;ini();							// Load ini values
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 105

ADDR   CODE       LINE  SOURCE

001FD8 EC1C F001  06239 	CALL  ini
                  06240 			;pause = 0;
001FDC 6A54       06241 	CLRF  pause,0
                  06242 			;WORK = 0;
001FDE 6A55       06243 	CLRF  WORK,0
                  06244 			;pause_flag = 0;
001FE0 6A08       06245 	CLRF  pause_flag,0
                  06246 			;OUT_PC = 1;
001FE2 8882       06247 	BSF   0xF82,OUT_PC,0
                  06248 			;PC = 0;							//1 - ON PC comunication; 0 - OFF PC comunication
001FE4 6A61       06249 	CLRF  PC,0
                  06250 			;//if(vBL) BLCTRL = 1;
                  06251 			;//else BLCTRL = 0;
                  06252 			;
                  06253 			;lcd_clear();
001FE6 EC86 F005  06254 	CALL  lcd_clear
                  06255 			;lcd_goto(LINE1);
001FEA 0E80       06256 	MOVLW 128
001FEC EC83 F005  06257 	CALL  lcd_goto
                  06258 			;lcd_puts(Welc);
001FF0 6A14       06259 	CLRF  s,0
001FF2 6A15       06260 	CLRF  s+1,0
001FF4 EC8C F005  06261 	CALL  lcd_puts
                  06262 			;//lcd_goto(LINE2);
                  06263 			;//lcd_puts(NOTH);
                  06264 			;lcd_goto(LINE2);
001FF8 0EC0       06265 	MOVLW 192
001FFA EC83 F005  06266 	CALL  lcd_goto
                  06267 			;lcd_puts_cyr(Ready_cyr);
001FFE 0E55       06268 	MOVLW 85
002000 6E11       06269 	MOVWF s_2,0
002002 ECEC F005  06270 	CALL  lcd_puts_cyr
                  06271 			;
                  06272 			;if(vComm != 0) 
002006 5235       06273 	MOVF  vComm,1,0
002008 E01F       06274 	BZ    m296
                  06275 			;	{
                  06276 			;	if(vEN1) cred1 = vAUTOSTART;
00200A 5236       06277 	MOVF  vEN1,1,0
00200C E004       06278 	BZ    m292
00200E C044 F0A3  06279 	MOVFF vAUTOSTART,cred1
002012 6BA4       06280 	CLRF  cred1+1,1
002014 6BA5       06281 	CLRF  cred1+2,1
                  06282 			;	if(vEN2) cred2 = vAUTOSTART;
002016 5237       06283 m292	MOVF  vEN2,1,0
002018 E004       06284 	BZ    m293
00201A C044 F0A6  06285 	MOVFF vAUTOSTART,cred2
00201E 6BA7       06286 	CLRF  cred2+1,1
002020 6BA8       06287 	CLRF  cred2+2,1
                  06288 			;	if(vEN3) cred3 = vAUTOSTART;
002022 5238       06289 m293	MOVF  vEN3,1,0
002024 E004       06290 	BZ    m294
002026 C044 F0A9  06291 	MOVFF vAUTOSTART,cred3
00202A 6BAA       06292 	CLRF  cred3+1,1
00202C 6BAB       06293 	CLRF  cred3+2,1
                  06294 			;	if(vEN4) cred4 = vAUTOSTART;
00202E 5239       06295 m294	MOVF  vEN4,1,0
002030 E004       06296 	BZ    m295
002032 C044 F0AC  06297 	MOVFF vAUTOSTART,cred4
002036 6BAD       06298 	CLRF  cred4+1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 106

ADDR   CODE       LINE  SOURCE

002038 6BAE       06299 	CLRF  cred4+2,1
                  06300 			;	if(vEN6) cred6 = vAUTOSTART;
00203A 523A       06301 m295	MOVF  vEN6,1,0
00203C E023       06302 	BZ    m301
00203E C044 F0AF  06303 	MOVFF vAUTOSTART,cred6
002042 6BB0       06304 	CLRF  cred6+1,1
002044 6BB1       06305 	CLRF  cred6+2,1
                  06306 			;
                  06307 			;	}
                  06308 			;else
002046 D01E       06309 	BRA   m301
                  06310 			;	{
                  06311 			;	if(cred1 != 0) rem1 = 1;
002048 51A3       06312 m296	MOVF  cred1,W,1
00204A 11A4       06313 	IORWF cred1+1,W,1
00204C 11A5       06314 	IORWF cred1+2,W,1
00204E E002       06315 	BZ    m297
002050 0E01       06316 	MOVLW 1
002052 6E22       06317 	MOVWF rem1,0
                  06318 			;	if(cred2 != 0) rem2 = 1;
002054 51A6       06319 m297	MOVF  cred2,W,1
002056 11A7       06320 	IORWF cred2+1,W,1
002058 11A8       06321 	IORWF cred2+2,W,1
00205A E002       06322 	BZ    m298
00205C 0E01       06323 	MOVLW 1
00205E 6E23       06324 	MOVWF rem2,0
                  06325 			;	if(cred3 != 0) rem3 = 1;
002060 51A9       06326 m298	MOVF  cred3,W,1
002062 11AA       06327 	IORWF cred3+1,W,1
002064 11AB       06328 	IORWF cred3+2,W,1
002066 E002       06329 	BZ    m299
002068 0E01       06330 	MOVLW 1
00206A 6E24       06331 	MOVWF rem3,0
                  06332 			;	if(cred4 != 0) rem4 = 1;
00206C 51AC       06333 m299	MOVF  cred4,W,1
00206E 11AD       06334 	IORWF cred4+1,W,1
002070 11AE       06335 	IORWF cred4+2,W,1
002072 E002       06336 	BZ    m300
002074 0E01       06337 	MOVLW 1
002076 6E25       06338 	MOVWF rem4,0
                  06339 			;	if(cred6 != 0) rem6 = 1;
002078 51AF       06340 m300	MOVF  cred6,W,1
00207A 11B0       06341 	IORWF cred6+1,W,1
00207C 11B1       06342 	IORWF cred6+2,W,1
00207E E002       06343 	BZ    m301
002080 0E01       06344 	MOVLW 1
002082 6E26       06345 	MOVWF rem6,0
                  06346 			;	}
                  06347 			;
                  06348 			;MODE:
                  06349 			;
                  06350 			;lcd_setup(0);
002084 0E00       06351 m301	MOVLW 0
002086 EC6D F005  06352 	CALL  lcd_setup
                  06353 			;
                  06354 			;if(rem1 && (cred1 != 0) && pause == 0) 
00208A 5222       06355 	MOVF  rem1,1,0
00208C E00A       06356 	BZ    m302
00208E 51A3       06357 	MOVF  cred1,W,1
002090 11A4       06358 	IORWF cred1+1,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 107

ADDR   CODE       LINE  SOURCE

002092 11A5       06359 	IORWF cred1+2,W,1
002094 E006       06360 	BZ    m302
002096 6654       06361 	TSTFSZ pause,0
002098 D004       06362 	BRA   m302
                  06363 			;	{	
                  06364 			;	REL1_ON();
00209A EC2D F002  06365 	CALL  REL1_ON
                  06366 			;	WORK = 1;
00209E 0E01       06367 	MOVLW 1
0020A0 6E55       06368 	MOVWF WORK,0
                  06369 			;	}
                  06370 			;if(rem2 && (cred2 != 0) && pause == 0)
0020A2 5223       06371 m302	MOVF  rem2,1,0
0020A4 E00A       06372 	BZ    m303
0020A6 51A6       06373 	MOVF  cred2,W,1
0020A8 11A7       06374 	IORWF cred2+1,W,1
0020AA 11A8       06375 	IORWF cred2+2,W,1
0020AC E006       06376 	BZ    m303
0020AE 6654       06377 	TSTFSZ pause,0
0020B0 D004       06378 	BRA   m303
                  06379 			;	{
                  06380 			;	REL2_ON();
0020B2 EC34 F002  06381 	CALL  REL2_ON
                  06382 			;	WORK = 2;
0020B6 0E02       06383 	MOVLW 2
0020B8 6E55       06384 	MOVWF WORK,0
                  06385 			;	}
                  06386 			;if(rem3 && (cred3 != 0) && pause == 0) 
0020BA 5224       06387 m303	MOVF  rem3,1,0
0020BC E00A       06388 	BZ    m304
0020BE 51A9       06389 	MOVF  cred3,W,1
0020C0 11AA       06390 	IORWF cred3+1,W,1
0020C2 11AB       06391 	IORWF cred3+2,W,1
0020C4 E006       06392 	BZ    m304
0020C6 6654       06393 	TSTFSZ pause,0
0020C8 D004       06394 	BRA   m304
                  06395 			;	{
                  06396 			;	REL3_ON();
0020CA EC3B F002  06397 	CALL  REL3_ON
                  06398 			;	WORK = 3;
0020CE 0E03       06399 	MOVLW 3
0020D0 6E55       06400 	MOVWF WORK,0
                  06401 			;	}
                  06402 			;if(rem4 && (cred4 != 0) && pause == 0) 
0020D2 5225       06403 m304	MOVF  rem4,1,0
0020D4 E00A       06404 	BZ    m305
0020D6 51AC       06405 	MOVF  cred4,W,1
0020D8 11AD       06406 	IORWF cred4+1,W,1
0020DA 11AE       06407 	IORWF cred4+2,W,1
0020DC E006       06408 	BZ    m305
0020DE 6654       06409 	TSTFSZ pause,0
0020E0 D004       06410 	BRA   m305
                  06411 			;	{
                  06412 			;	REL4_ON();
0020E2 EC42 F002  06413 	CALL  REL4_ON
                  06414 			;	WORK = 4;
0020E6 0E04       06415 	MOVLW 4
0020E8 6E55       06416 	MOVWF WORK,0
                  06417 			;	}	
                  06418 			;if(rem6 && (cred6 != 0) && pause == 0) 
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 108

ADDR   CODE       LINE  SOURCE

0020EA 5226       06419 m305	MOVF  rem6,1,0
0020EC E00A       06420 	BZ    m306
0020EE 51AF       06421 	MOVF  cred6,W,1
0020F0 11B0       06422 	IORWF cred6+1,W,1
0020F2 11B1       06423 	IORWF cred6+2,W,1
0020F4 E006       06424 	BZ    m306
0020F6 6654       06425 	TSTFSZ pause,0
0020F8 D004       06426 	BRA   m306
                  06427 			;	{
                  06428 			;	REL6_ON();
0020FA EC49 F002  06429 	CALL  REL6_ON
                  06430 			;	WORK = 6;
0020FE 0E06       06431 	MOVLW 6
002100 6E55       06432 	MOVWF WORK,0
                  06433 			;	}	
                  06434 			;
                  06435 			;if(check)
002102 5233       06436 m306	MOVF  check,1,0
002104 E06D       06437 	BZ    m315
                  06438 			;	{
                  06439 			;	delay(200);
002106 0EC8       06440 	MOVLW 200
002108 EC3D F001  06441 	CALL  delay
                  06442 			;	check = 0;
00210C 6A33       06443 	CLRF  check,0
                  06444 			;	switch(sysB)
00210E 5046       06445 	MOVF  sysB,W,0
002110 0A77       06446 	XORLW 119
002112 E00F       06447 	BZ    m307
002114 0AC0       06448 	XORLW 192
002116 E016       06449 	BZ    m308
002118 0A60       06450 	XORLW 96
00211A E01D       06451 	BZ    m309
00211C 0A24       06452 	XORLW 36
00211E E024       06453 	BZ    m310
002120 0A06       06454 	XORLW 6
002122 E02B       06455 	BZ    m311
002124 0A03       06456 	XORLW 3
002126 E032       06457 	BZ    m312
002128 0A53       06458 	XORLW 83
00212A E039       06459 	BZ    m313
00212C 0A42       06460 	XORLW 66
00212E E03B       06461 	BZ    m314
002130 D03A       06462 	BRA   m314
                  06463 			;		{
                  06464 			;		case 0x77:
                  06465 			;			{
                  06466 			;			credit += vOPA;
002132 5048       06467 m307	MOVF  vOPA,W,0
002134 279A       06468 	ADDWF credit,1,1
002136 0E00       06469 	MOVLW 0
002138 239B       06470 	ADDWFC credit+1,1,1
                  06471 			;			if(PC == 1) OUT_PC_count += OUT_PC_ON;
00213A 2C61       06472 	DECFSZ PC,W,0
00213C D034       06473 	BRA   m314
00213E 0E04       06474 	MOVLW 4
002140 265F       06475 	ADDWF OUT_PC_count,1,0
                  06476 			;			break;
002142 D031       06477 	BRA   m314
                  06478 			;			}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 109

ADDR   CODE       LINE  SOURCE

                  06479 			;		case 0xB7:
                  06480 			;			{
                  06481 			;			credit += vOPB;
002144 5049       06482 m308	MOVF  vOPB,W,0
002146 279A       06483 	ADDWF credit,1,1
002148 0E00       06484 	MOVLW 0
00214A 239B       06485 	ADDWFC credit+1,1,1
                  06486 			;			if(PC == 1) OUT_PC_count += OUT_PC_ON;
00214C 2C61       06487 	DECFSZ PC,W,0
00214E D02B       06488 	BRA   m314
002150 0E04       06489 	MOVLW 4
002152 265F       06490 	ADDWF OUT_PC_count,1,0
                  06491 			;			break;
002154 D028       06492 	BRA   m314
                  06493 			;			}
                  06494 			;		case 0xD7:
                  06495 			;			{
                  06496 			;			credit += vOPC;
002156 504A       06497 m309	MOVF  vOPC,W,0
002158 279A       06498 	ADDWF credit,1,1
00215A 0E00       06499 	MOVLW 0
00215C 239B       06500 	ADDWFC credit+1,1,1
                  06501 			;			if(PC == 1) OUT_PC_count += OUT_PC_ON;
00215E 2C61       06502 	DECFSZ PC,W,0
002160 D022       06503 	BRA   m314
002162 0E04       06504 	MOVLW 4
002164 265F       06505 	ADDWF OUT_PC_count,1,0
                  06506 			;			break;
002166 D01F       06507 	BRA   m314
                  06508 			;			}
                  06509 			;		case 0xF3:
                  06510 			;			{
                  06511 			;			credit += vOPD;
002168 504B       06512 m310	MOVF  vOPD,W,0
00216A 279A       06513 	ADDWF credit,1,1
00216C 0E00       06514 	MOVLW 0
00216E 239B       06515 	ADDWFC credit+1,1,1
                  06516 			;			if(PC == 1) OUT_PC_count += OUT_PC_ON;
002170 2C61       06517 	DECFSZ PC,W,0
002172 D019       06518 	BRA   m314
002174 0E04       06519 	MOVLW 4
002176 265F       06520 	ADDWF OUT_PC_count,1,0
                  06521 			;			break;
002178 D016       06522 	BRA   m314
                  06523 			;			}
                  06524 			;		case 0xF5:
                  06525 			;			{
                  06526 			;			credit += vOPE;
00217A 504C       06527 m311	MOVF  vOPE,W,0
00217C 279A       06528 	ADDWF credit,1,1
00217E 0E00       06529 	MOVLW 0
002180 239B       06530 	ADDWFC credit+1,1,1
                  06531 			;			if(PC == 1) OUT_PC_count += OUT_PC_ON;
002182 2C61       06532 	DECFSZ PC,W,0
002184 D010       06533 	BRA   m314
002186 0E04       06534 	MOVLW 4
002188 265F       06535 	ADDWF OUT_PC_count,1,0
                  06536 			;			break;
00218A D00D       06537 	BRA   m314
                  06538 			;			}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 110

ADDR   CODE       LINE  SOURCE

                  06539 			;		case 0xF6:
                  06540 			;			{
                  06541 			;			credit += vOPF;
00218C 504D       06542 m312	MOVF  vOPF,W,0
00218E 279A       06543 	ADDWF credit,1,1
002190 0E00       06544 	MOVLW 0
002192 239B       06545 	ADDWFC credit+1,1,1
                  06546 			;			if(PC == 1) OUT_PC_count += OUT_PC_ON;
002194 2C61       06547 	DECFSZ PC,W,0
002196 D007       06548 	BRA   m314
002198 0E04       06549 	MOVLW 4
00219A 265F       06550 	ADDWF OUT_PC_count,1,0
                  06551 			;			break;
00219C D004       06552 	BRA   m314
                  06553 			;			}
                  06554 			;		case 0xA5:
                  06555 			;			{
                  06556 			;			credit += vOPE;
00219E 504C       06557 m313	MOVF  vOPE,W,0
0021A0 279A       06558 	ADDWF credit,1,1
0021A2 0E00       06559 	MOVLW 0
0021A4 239B       06560 	ADDWFC credit+1,1,1
                  06561 			;			break;
                  06562 			;			}
                  06563 			;
                  06564 			;
                  06565 			;
                  06566 			;		case 0xE7:
                  06567 			;			{		
                  06568 			;			break;
                  06569 			;			}
                  06570 			;		}
                  06571 			;
                  06572 			;	lcd_clear();
0021A6 EC86 F005  06573 m314	CALL  lcd_clear
                  06574 			;	lcd_goto(LINE1);
0021AA 0E80       06575 	MOVLW 128
0021AC EC83 F005  06576 	CALL  lcd_goto
                  06577 			;	lcd_puts_cyr(Credit_cyr);
0021B0 0E66       06578 	MOVLW 102
0021B2 6E11       06579 	MOVWF s_2,0
0021B4 ECEC F005  06580 	CALL  lcd_puts_cyr
                  06581 			;	lcd_puts(": ");
0021B8 0E17       06582 	MOVLW 23
0021BA 6E14       06583 	MOVWF s,0
0021BC 6A15       06584 	CLRF  s+1,0
0021BE EC8C F005  06585 	CALL  lcd_puts
                  06586 			;//	lcd_goto(LINE2);
                  06587 			;//	lcd_puts(Space);
                  06588 			;	lcd_credit();
0021C2 ECFB F005  06589 	CALL  lcd_credit
                  06590 			;	lcd_goto(LINE2);
0021C6 0EC0       06591 	MOVLW 192
0021C8 EC83 F005  06592 	CALL  lcd_goto
                  06593 			;	lcd_puts_cyr(Choice_cyr);
0021CC 0E6D       06594 	MOVLW 109
0021CE 6E11       06595 	MOVWF s_2,0
0021D0 ECEC F005  06596 	CALL  lcd_puts_cyr
                  06597 			;
                  06598 			;	delay(250);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 111

ADDR   CODE       LINE  SOURCE

0021D4 0EFA       06599 	MOVLW 250
0021D6 EC3D F001  06600 	CALL  delay
                  06601 			;	overTIME = 0;
0021DA 6A4F       06602 	CLRF  overTIME,0
                  06603 			;	sysB = PORTB;
0021DC CF81 F046  06604 	MOVFF PORTB,sysB
                  06605 			;/*
                  06606 			;	if(OUT_PC_count != 0)
                  06607 			;		{
                  06608 			;		OUT_PC = 1;
                  06609 			;		delaySec(3);
                  06610 			;		OUT_PC = 0;
                  06611 			;		delaySec(1);
                  06612 			;		OUT_PC_count --;
                  06613 			;		}
                  06614 			;*/
                  06615 			;	}
                  06616 			;
                  06617 			;if((overTIME > 180) && (credit != 0))
0021E0 0EB4       06618 m315	MOVLW 180
0021E2 644F       06619 	CPFSGT overTIME,0
0021E4 D041       06620 	BRA   m316
0021E6 519A       06621 	MOVF  credit,W,1
0021E8 119B       06622 	IORWF credit+1,W,1
0021EA E03E       06623 	BZ    m316
                  06624 			;	{
                  06625 			;	overpay += credit;
0021EC 519A       06626 	MOVF  credit,W,1
0021EE 27C7       06627 	ADDWF overpay,1,1
0021F0 519B       06628 	MOVF  credit+1,W,1
0021F2 23C8       06629 	ADDWFC overpay+1,1,1
0021F4 0E00       06630 	MOVLW 0
0021F6 23C9       06631 	ADDWFC overpay+2,1,1
                  06632 			;	NONpay += credit;
0021F8 519A       06633 	MOVF  credit,W,1
0021FA 27CA       06634 	ADDWF NONpay,1,1
0021FC 519B       06635 	MOVF  credit+1,W,1
0021FE 23CB       06636 	ADDWFC NONpay+1,1,1
002200 0E00       06637 	MOVLW 0
002202 23CC       06638 	ADDWFC NONpay+2,1,1
                  06639 			;	credit = 0;
002204 6B9A       06640 	CLRF  credit,1
002206 6B9B       06641 	CLRF  credit+1,1
                  06642 			;	writeEEPROM(overpay.high8,eoverH); delay(10);
002208 C0C9 F014  06643 	MOVFF overpay+2,smb_2
00220C 0EE7       06644 	MOVLW 231
00220E EC61 F002  06645 	CALL  writeEEPROM
002212 0E0A       06646 	MOVLW 10
002214 EC3D F001  06647 	CALL  delay
                  06648 			;	writeEEPROM(overpay.mid8,eoverM); delay(10);
002218 C0C8 F014  06649 	MOVFF overpay+1,smb_2
00221C 0EE8       06650 	MOVLW 232
00221E EC61 F002  06651 	CALL  writeEEPROM
002222 0E0A       06652 	MOVLW 10
002224 EC3D F001  06653 	CALL  delay
                  06654 			;	writeEEPROM(overpay.low8,eoverL); delay(10);
002228 C0C7 F014  06655 	MOVFF overpay,smb_2
00222C 0EE9       06656 	MOVLW 233
00222E EC61 F002  06657 	CALL  writeEEPROM
002232 0E0A       06658 	MOVLW 10
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 112

ADDR   CODE       LINE  SOURCE

002234 EC3D F001  06659 	CALL  delay
                  06660 			;
                  06661 			;	writeEEPROM(NONpay.high8,eNONpayH); delay(10);
002238 C0CC F014  06662 	MOVFF NONpay+2,smb_2
00223C 0EE4       06663 	MOVLW 228
00223E EC61 F002  06664 	CALL  writeEEPROM
002242 0E0A       06665 	MOVLW 10
002244 EC3D F001  06666 	CALL  delay
                  06667 			;	writeEEPROM(NONpay.mid8,eNONpayM); delay(10);
002248 C0CB F014  06668 	MOVFF NONpay+1,smb_2
00224C 0EE5       06669 	MOVLW 229
00224E EC61 F002  06670 	CALL  writeEEPROM
002252 0E0A       06671 	MOVLW 10
002254 EC3D F001  06672 	CALL  delay
                  06673 			;	writeEEPROM(NONpay.low8,eNONpayL); delay(10);
002258 C0CA F014  06674 	MOVFF NONpay,smb_2
00225C 0EE6       06675 	MOVLW 230
00225E EC61 F002  06676 	CALL  writeEEPROM
002262 0E0A       06677 	MOVLW 10
002264 EC3D F001  06678 	CALL  delay
                  06679 			;	}
                  06680 			;
                  06681 			;if((!vEN1 && !vEN2 && !vEN3 && !vEN4 && !vEN6) && !vComm)
002268 6636       06682 m316	TSTFSZ vEN1,0
00226A D010       06683 	BRA   m317
00226C 6637       06684 	TSTFSZ vEN2,0
00226E D00E       06685 	BRA   m317
002270 6638       06686 	TSTFSZ vEN3,0
002272 D00C       06687 	BRA   m317
002274 6639       06688 	TSTFSZ vEN4,0
002276 D00A       06689 	BRA   m317
002278 663A       06690 	TSTFSZ vEN6,0
00227A D008       06691 	BRA   m317
00227C 6635       06692 	TSTFSZ vComm,0
00227E D006       06693 	BRA   m317
                  06694 			;	{
                  06695 			;	lcd_out();
002280 EC08 F007  06696 	CALL  lcd_out
                  06697 			;	ESCbut();
002284 ECC0 F001  06698 	CALL  ESCbut
                  06699 			;	goto M;
002288 EF2A F018  06700 	GOTO  m428
                  06701 			;	}
                  06702 			;
                  06703 			;if(!EBUT_COUNTER)
00228C B484       06704 m317	BTFSC 0xF84,EBUT_COUNTER,0
00228E D01A       06705 	BRA   m319
                  06706 			;	{
                  06707 			;	tot = NONpay;
002290 C0CA F0B5  06708 	MOVFF NONpay,tot
002294 C0CB F0B6  06709 	MOVFF NONpay+1,tot+1
002298 C0CC F0B7  06710 	MOVFF NONpay+2,tot+2
                  06711 			;	lcd_goto(LINE2);
00229C 0EC0       06712 	MOVLW 192
00229E EC83 F005  06713 	CALL  lcd_goto
                  06714 			;	lcd_puts(Cash);
0022A2 0E87       06715 	MOVLW 135
0022A4 6E14       06716 	MOVWF s,0
0022A6 6A15       06717 	CLRF  s+1,0
0022A8 EC8C F005  06718 	CALL  lcd_puts
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 113

ADDR   CODE       LINE  SOURCE

                  06719 			;	lcd_money();
0022AC EC6A F006  06720 	CALL  lcd_money
                  06721 			;	lcd_puts(BGN);
0022B0 0E49       06722 	MOVLW 73
0022B2 6E14       06723 	MOVWF s,0
0022B4 6A15       06724 	CLRF  s+1,0
0022B6 EC8C F005  06725 	CALL  lcd_puts
                  06726 			;	while(!EBUT_COUNTER);
0022BA A484       06727 m318	BTFSS 0xF84,EBUT_COUNTER,0
0022BC D7FE       06728 	BRA   m318
                  06729 			;	delay(100);
0022BE 0E64       06730 	MOVLW 100
0022C0 EC3D F001  06731 	CALL  delay
                  06732 			;	}
                  06733 			;
                  06734 			;if(((cred1 == 0) || !vEN1) && ((cred2 == 0) || !vEN2) && ((cred3 == 0) || !vEN3) && ((cred4 == 0) || !vEN4) && ((cred6 == 0) || !vEN6)) 	WORK = 0;
0022C4 51A3       06735 m319	MOVF  cred1,W,1
0022C6 11A4       06736 	IORWF cred1+1,W,1
0022C8 11A5       06737 	IORWF cred1+2,W,1
0022CA E002       06738 	BZ    m320
0022CC 6636       06739 	TSTFSZ vEN1,0
0022CE D019       06740 	BRA   m325
0022D0 51A6       06741 m320	MOVF  cred2,W,1
0022D2 11A7       06742 	IORWF cred2+1,W,1
0022D4 11A8       06743 	IORWF cred2+2,W,1
0022D6 E002       06744 	BZ    m321
0022D8 6637       06745 	TSTFSZ vEN2,0
0022DA D013       06746 	BRA   m325
0022DC 51A9       06747 m321	MOVF  cred3,W,1
0022DE 11AA       06748 	IORWF cred3+1,W,1
0022E0 11AB       06749 	IORWF cred3+2,W,1
0022E2 E002       06750 	BZ    m322
0022E4 6638       06751 	TSTFSZ vEN3,0
0022E6 D00D       06752 	BRA   m325
0022E8 51AC       06753 m322	MOVF  cred4,W,1
0022EA 11AD       06754 	IORWF cred4+1,W,1
0022EC 11AE       06755 	IORWF cred4+2,W,1
0022EE E002       06756 	BZ    m323
0022F0 6639       06757 	TSTFSZ vEN4,0
0022F2 D007       06758 	BRA   m325
0022F4 51AF       06759 m323	MOVF  cred6,W,1
0022F6 11B0       06760 	IORWF cred6+1,W,1
0022F8 11B1       06761 	IORWF cred6+2,W,1
0022FA E002       06762 	BZ    m324
0022FC 523A       06763 	MOVF  vEN6,1,0
0022FE B4D8       06764 	BTFSC 0xFD8,Zero_,0
002300 6A55       06765 m324	CLRF  WORK,0
                  06766 			;
                  06767 			;if((credit == 0) && ((cred1 == 0) || !vEN1) && ((cred2 == 0) || !vEN2) && ((cred3 == 0) || !vEN3) && ((cred4 == 0) || !vEN4) && ((cred6 == 0) || !vEN6))
002302 519A       06768 m325	MOVF  credit,W,1
002304 119B       06769 	IORWF credit+1,W,1
002306 E12F       06770 	BNZ   m331
002308 51A3       06771 	MOVF  cred1,W,1
00230A 11A4       06772 	IORWF cred1+1,W,1
00230C 11A5       06773 	IORWF cred1+2,W,1
00230E E002       06774 	BZ    m326
002310 6636       06775 	TSTFSZ vEN1,0
002312 D029       06776 	BRA   m331
002314 51A6       06777 m326	MOVF  cred2,W,1
002316 11A7       06778 	IORWF cred2+1,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 114

ADDR   CODE       LINE  SOURCE

002318 11A8       06779 	IORWF cred2+2,W,1
00231A E002       06780 	BZ    m327
00231C 6637       06781 	TSTFSZ vEN2,0
00231E D023       06782 	BRA   m331
002320 51A9       06783 m327	MOVF  cred3,W,1
002322 11AA       06784 	IORWF cred3+1,W,1
002324 11AB       06785 	IORWF cred3+2,W,1
002326 E002       06786 	BZ    m328
002328 6638       06787 	TSTFSZ vEN3,0
00232A D01D       06788 	BRA   m331
00232C 51AC       06789 m328	MOVF  cred4,W,1
00232E 11AD       06790 	IORWF cred4+1,W,1
002330 11AE       06791 	IORWF cred4+2,W,1
002332 E002       06792 	BZ    m329
002334 6639       06793 	TSTFSZ vEN4,0
002336 D017       06794 	BRA   m331
002338 51AF       06795 m329	MOVF  cred6,W,1
00233A 11B0       06796 	IORWF cred6+1,W,1
00233C 11B1       06797 	IORWF cred6+2,W,1
00233E E002       06798 	BZ    m330
002340 663A       06799 	TSTFSZ vEN6,0
002342 D011       06800 	BRA   m331
                  06801 			;	{
                  06802 			;	lcd_goto(LINE1);
002344 0E80       06803 m330	MOVLW 128
002346 EC83 F005  06804 	CALL  lcd_goto
                  06805 			;	lcd_puts(Welc);
00234A 6A14       06806 	CLRF  s,0
00234C 6A15       06807 	CLRF  s+1,0
00234E EC8C F005  06808 	CALL  lcd_puts
                  06809 			;//	lcd_goto(LINE2);
                  06810 			;//	lcd_puts(NOTH);
                  06811 			;	lcd_goto(LINE2);
002352 0EC0       06812 	MOVLW 192
002354 EC83 F005  06813 	CALL  lcd_goto
                  06814 			;	lcd_puts_cyr(Ready_cyr);
002358 0E55       06815 	MOVLW 85
00235A 6E11       06816 	MOVWF s_2,0
00235C ECEC F005  06817 	CALL  lcd_puts_cyr
                  06818 			;	free_flag = 0;
002360 6A62       06819 	CLRF  free_flag,0
                  06820 			;
                  06821 			;	goto M;
002362 EF2A F018  06822 	GOTO  m428
                  06823 			;	}
                  06824 			;
                  06825 			;if((credit == 0) && ((cred1 != 0) || (cred2 != 0) || (cred3 != 0) || (cred4 != 0) || (cred6 != 0)))
002366 519A       06826 m331	MOVF  credit,W,1
002368 119B       06827 	IORWF credit+1,W,1
00236A A4D8       06828 	BTFSS 0xFD8,Zero_,0
00236C D1DB       06829 	BRA   m367
00236E 51A3       06830 	MOVF  cred1,W,1
002370 11A4       06831 	IORWF cred1+1,W,1
002372 11A5       06832 	IORWF cred1+2,W,1
002374 E111       06833 	BNZ   m332
002376 51A6       06834 	MOVF  cred2,W,1
002378 11A7       06835 	IORWF cred2+1,W,1
00237A 11A8       06836 	IORWF cred2+2,W,1
00237C E10D       06837 	BNZ   m332
00237E 51A9       06838 	MOVF  cred3,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 115

ADDR   CODE       LINE  SOURCE

002380 11AA       06839 	IORWF cred3+1,W,1
002382 11AB       06840 	IORWF cred3+2,W,1
002384 E109       06841 	BNZ   m332
002386 51AC       06842 	MOVF  cred4,W,1
002388 11AD       06843 	IORWF cred4+1,W,1
00238A 11AE       06844 	IORWF cred4+2,W,1
00238C E105       06845 	BNZ   m332
00238E 51AF       06846 	MOVF  cred6,W,1
002390 11B0       06847 	IORWF cred6+1,W,1
002392 11B1       06848 	IORWF cred6+2,W,1
002394 B4D8       06849 	BTFSC 0xFD8,Zero_,0
002396 D1C6       06850 	BRA   m367
                  06851 			;	{
                  06852 			;	if(vEN1 && (cred1 != 0))
002398 5236       06853 m332	MOVF  vEN1,1,0
00239A E061       06854 	BZ    m341
00239C 51A3       06855 	MOVF  cred1,W,1
00239E 11A4       06856 	IORWF cred1+1,W,1
0023A0 11A5       06857 	IORWF cred1+2,W,1
0023A2 E05D       06858 	BZ    m341
                  06859 			;		{
                  06860 			;		if (pause == 0)
0023A4 6654       06861 	TSTFSZ pause,0
0023A6 D027       06862 	BRA   m334
                  06863 			;			{
                  06864 			;			lcd_goto(LINE1);
0023A8 0E80       06865 	MOVLW 128
0023AA EC83 F005  06866 	CALL  lcd_goto
                  06867 			;			lcd_puts_cyr(Time1_cyr);
0023AE 6A11       06868 	CLRF  s_2,0
0023B0 ECEC F005  06869 	CALL  lcd_puts_cyr
                  06870 			;//			lcd_goto(LINE2);
                  06871 			;//			lcd_puts(NOTH);
                  06872 			;			conv(cred1);
0023B4 C0A3 F012  06873 	MOVFF cred1,pr
0023B8 C0A4 F013  06874 	MOVFF cred1+1,pr+1
0023BC C0A5 F014  06875 	MOVFF cred1+2,pr+2
0023C0 EC51 F001  06876 	CALL  conv
                  06877 			;			lcd_goto(LINE2);
0023C4 0EC0       06878 	MOVLW 192
0023C6 EC83 F005  06879 	CALL  lcd_goto
                  06880 			;			if(hour > 99) lcd_puts(Over);
0023CA 0E63       06881 	MOVLW 99
0023CC 642E       06882 	CPFSGT hour,0
0023CE D007       06883 	BRA   m333
0023D0 0E79       06884 	MOVLW 121
0023D2 6E14       06885 	MOVWF s,0
0023D4 0E01       06886 	MOVLW 1
0023D6 6E15       06887 	MOVWF s+1,0
0023D8 EC8C F005  06888 	CALL  lcd_puts
                  06889 			;			else 
0023DC D00C       06890 	BRA   m334
                  06891 			;				{
                  06892 			;				lcd_puts(Space);
0023DE 0E0C       06893 m333	MOVLW 12
0023E0 6E14       06894 	MOVWF s,0
0023E2 6A15       06895 	CLRF  s+1,0
0023E4 EC8C F005  06896 	CALL  lcd_puts
                  06897 			;				lcd_time();
0023E8 EC33 F006  06898 	CALL  lcd_time
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 116

ADDR   CODE       LINE  SOURCE

                  06899 			;				lcd_puts(Space);
0023EC 0E0C       06900 	MOVLW 12
0023EE 6E14       06901 	MOVWF s,0
0023F0 6A15       06902 	CLRF  s+1,0
0023F2 EC8C F005  06903 	CALL  lcd_puts
                  06904 			;				}
                  06905 			;			}
                  06906 			;			
                  06907 			;		if(!EBUT5 && pause == 0)
0023F6 B283       06908 m334	BTFSC 0xF83,EBUT5,0
0023F8 D025       06909 	BRA   m339
0023FA 6654       06910 	TSTFSZ pause,0
0023FC D023       06911 	BRA   m339
                  06912 			;			{
                  06913 			;			pause = 1;
0023FE 0E01       06914 	MOVLW 1
002400 6E54       06915 	MOVWF pause,0
                  06916 			;			pause_flag = 1;
002402 6E08       06917 	MOVWF pause_flag,0
                  06918 			;			lcd_clear();
002404 EC86 F005  06919 	CALL  lcd_clear
                  06920 			;			lcd_goto(LINE1);
002408 0E80       06921 	MOVLW 128
00240A EC83 F005  06922 	CALL  lcd_goto
                  06923 			;			lcd_puts_cyr(Pause_LCD_cyr);
00240E 0E81       06924 	MOVLW 129
002410 6E11       06925 	MOVWF s_2,0
002412 ECEC F005  06926 	CALL  lcd_puts_cyr
                  06927 			;								
                  06928 			;
                  06929 			;			while (!EBUT5)
002416 B283       06930 m335	BTFSC 0xF83,EBUT5,0
002418 D012       06931 	BRA   m338
                  06932 			;				{
                  06933 			;				if(!EBUT1) 						//Free add 2lv
00241A BC83       06934 	BTFSC 0xF83,EBUT1,0
00241C D006       06935 	BRA   m337
                  06936 			;					{
                  06937 			;					free_flag ++;
00241E 2A62       06938 	INCF  free_flag,1,0
                  06939 			;					while (!EBUT1);
002420 AC83       06940 m336	BTFSS 0xF83,EBUT1,0
002422 D7FE       06941 	BRA   m336
                  06942 			;					delay(100);
002424 0E64       06943 	MOVLW 100
002426 EC3D F001  06944 	CALL  delay
                  06945 			;					}
                  06946 			;					if(free_flag == 3)
00242A 0E03       06947 m337	MOVLW 3
00242C 6262       06948 	CPFSEQ free_flag,0
00242E D7F3       06949 	BRA   m335
                  06950 			;						{
                  06951 			;						cred1 += 120;
002430 0E78       06952 	MOVLW 120
002432 27A3       06953 	ADDWF cred1,1,1
002434 0E00       06954 	MOVLW 0
002436 23A4       06955 	ADDWFC cred1+1,1,1
002438 23A5       06956 	ADDWFC cred1+2,1,1
                  06957 			;						free_flag = 0;
00243A 6A62       06958 	CLRF  free_flag,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 117

ADDR   CODE       LINE  SOURCE

                  06959 			;						}
                  06960 			;				}
00243C D7EC       06961 	BRA   m335
                  06962 			;			delay(100);
00243E 0E64       06963 m338	MOVLW 100
002440 EC3D F001  06964 	CALL  delay
                  06965 			;			}
                  06966 			;
                  06967 			;		if(!EBUT5 && pause == 1 && pause_flag == 1)
002444 B283       06968 m339	BTFSC 0xF83,EBUT5,0
002446 D00B       06969 	BRA   m341
002448 2C54       06970 	DECFSZ pause,W,0
00244A D009       06971 	BRA   m341
00244C 2C08       06972 	DECFSZ pause_flag,W,0
00244E D007       06973 	BRA   m341
                  06974 			;			{
                  06975 			;			pause = 0;
002450 6A54       06976 	CLRF  pause,0
                  06977 			;			pause_flag = 0;
002452 6A08       06978 	CLRF  pause_flag,0
                  06979 			;			while (!EBUT5);
002454 A283       06980 m340	BTFSS 0xF83,EBUT5,0
002456 D7FE       06981 	BRA   m340
                  06982 			;			delay(100);
002458 0E64       06983 	MOVLW 100
00245A EC3D F001  06984 	CALL  delay
                  06985 			;			}
                  06986 			;		}
                  06987 			;
                  06988 			;	if(vEN2 && (cred2 != 0))
00245E 5237       06989 m341	MOVF  vEN2,1,0
002460 E052       06990 	BZ    m347
002462 51A6       06991 	MOVF  cred2,W,1
002464 11A7       06992 	IORWF cred2+1,W,1
002466 11A8       06993 	IORWF cred2+2,W,1
002468 E04E       06994 	BZ    m347
                  06995 			;		{
                  06996 			;		if (pause == 0)
00246A 6654       06997 	TSTFSZ pause,0
00246C D028       06998 	BRA   m343
                  06999 			;			{
                  07000 			;			lcd_goto(LINE1);
00246E 0E80       07001 	MOVLW 128
002470 EC83 F005  07002 	CALL  lcd_goto
                  07003 			;			lcd_puts_cyr(Time2_cyr);
002474 0E11       07004 	MOVLW 17
002476 6E11       07005 	MOVWF s_2,0
002478 ECEC F005  07006 	CALL  lcd_puts_cyr
                  07007 			;//			lcd_goto(LINE2);
                  07008 			;//			lcd_puts(NOTH);
                  07009 			;			conv(cred2);
00247C C0A6 F012  07010 	MOVFF cred2,pr
002480 C0A7 F013  07011 	MOVFF cred2+1,pr+1
002484 C0A8 F014  07012 	MOVFF cred2+2,pr+2
002488 EC51 F001  07013 	CALL  conv
                  07014 			;			lcd_goto(LINE2);
00248C 0EC0       07015 	MOVLW 192
00248E EC83 F005  07016 	CALL  lcd_goto
                  07017 			;			if(hour > 99) lcd_puts(Over);
002492 0E63       07018 	MOVLW 99
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 118

ADDR   CODE       LINE  SOURCE

002494 642E       07019 	CPFSGT hour,0
002496 D007       07020 	BRA   m342
002498 0E79       07021 	MOVLW 121
00249A 6E14       07022 	MOVWF s,0
00249C 0E01       07023 	MOVLW 1
00249E 6E15       07024 	MOVWF s+1,0
0024A0 EC8C F005  07025 	CALL  lcd_puts
                  07026 			;			else 
0024A4 D00C       07027 	BRA   m343
                  07028 			;				{
                  07029 			;				lcd_puts(Space);
0024A6 0E0C       07030 m342	MOVLW 12
0024A8 6E14       07031 	MOVWF s,0
0024AA 6A15       07032 	CLRF  s+1,0
0024AC EC8C F005  07033 	CALL  lcd_puts
                  07034 			;				lcd_time();
0024B0 EC33 F006  07035 	CALL  lcd_time
                  07036 			;				lcd_puts(Space);
0024B4 0E0C       07037 	MOVLW 12
0024B6 6E14       07038 	MOVWF s,0
0024B8 6A15       07039 	CLRF  s+1,0
0024BA EC8C F005  07040 	CALL  lcd_puts
                  07041 			;				}
                  07042 			;			}
                  07043 			;			
                  07044 			;		if(!EBUT5 && pause == 0)
0024BE B283       07045 m343	BTFSC 0xF83,EBUT5,0
0024C0 D014       07046 	BRA   m345
0024C2 6654       07047 	TSTFSZ pause,0
0024C4 D012       07048 	BRA   m345
                  07049 			;			{
                  07050 			;			pause = 1;
0024C6 0E01       07051 	MOVLW 1
0024C8 6E54       07052 	MOVWF pause,0
                  07053 			;			pause_flag = 2;
0024CA 0E02       07054 	MOVLW 2
0024CC 6E08       07055 	MOVWF pause_flag,0
                  07056 			;			lcd_clear();
0024CE EC86 F005  07057 	CALL  lcd_clear
                  07058 			;			lcd_goto(LINE1);
0024D2 0E80       07059 	MOVLW 128
0024D4 EC83 F005  07060 	CALL  lcd_goto
                  07061 			;			lcd_puts_cyr(Pause_LCD_cyr);
0024D8 0E81       07062 	MOVLW 129
0024DA 6E11       07063 	MOVWF s_2,0
0024DC ECEC F005  07064 	CALL  lcd_puts_cyr
                  07065 			;			while (!EBUT5);
0024E0 A283       07066 m344	BTFSS 0xF83,EBUT5,0
0024E2 D7FE       07067 	BRA   m344
                  07068 			;			delay(100);
0024E4 0E64       07069 	MOVLW 100
0024E6 EC3D F001  07070 	CALL  delay
                  07071 			;			}
                  07072 			;
                  07073 			;		if(!EBUT5 && pause == 1 && pause_flag == 2)
0024EA B283       07074 m345	BTFSC 0xF83,EBUT5,0
0024EC D00C       07075 	BRA   m347
0024EE 2C54       07076 	DECFSZ pause,W,0
0024F0 D00A       07077 	BRA   m347
0024F2 0E02       07078 	MOVLW 2
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 119

ADDR   CODE       LINE  SOURCE

0024F4 6208       07079 	CPFSEQ pause_flag,0
0024F6 D007       07080 	BRA   m347
                  07081 			;			{
                  07082 			;			pause = 0;
0024F8 6A54       07083 	CLRF  pause,0
                  07084 			;			pause_flag = 0;
0024FA 6A08       07085 	CLRF  pause_flag,0
                  07086 			;			while (!EBUT5);
0024FC A283       07087 m346	BTFSS 0xF83,EBUT5,0
0024FE D7FE       07088 	BRA   m346
                  07089 			;			delay(100);
002500 0E64       07090 	MOVLW 100
002502 EC3D F001  07091 	CALL  delay
                  07092 			;			}	
                  07093 			;		}
                  07094 			;
                  07095 			;	if(vEN3 && (cred3 != 0))
002506 5238       07096 m347	MOVF  vEN3,1,0
002508 E052       07097 	BZ    m353
00250A 51A9       07098 	MOVF  cred3,W,1
00250C 11AA       07099 	IORWF cred3+1,W,1
00250E 11AB       07100 	IORWF cred3+2,W,1
002510 E04E       07101 	BZ    m353
                  07102 			;		{
                  07103 			;		if (pause == 0)
002512 6654       07104 	TSTFSZ pause,0
002514 D028       07105 	BRA   m349
                  07106 			;			{
                  07107 			;			lcd_goto(LINE1);
002516 0E80       07108 	MOVLW 128
002518 EC83 F005  07109 	CALL  lcd_goto
                  07110 			;			lcd_puts_cyr(Time3_cyr);
00251C 0E22       07111 	MOVLW 34
00251E 6E11       07112 	MOVWF s_2,0
002520 ECEC F005  07113 	CALL  lcd_puts_cyr
                  07114 			;//			lcd_goto(LINE2);
                  07115 			;//			lcd_puts(NOTH);
                  07116 			;			conv(cred3);
002524 C0A9 F012  07117 	MOVFF cred3,pr
002528 C0AA F013  07118 	MOVFF cred3+1,pr+1
00252C C0AB F014  07119 	MOVFF cred3+2,pr+2
002530 EC51 F001  07120 	CALL  conv
                  07121 			;			lcd_goto(LINE2);
002534 0EC0       07122 	MOVLW 192
002536 EC83 F005  07123 	CALL  lcd_goto
                  07124 			;			if(hour > 99) lcd_puts(Over);
00253A 0E63       07125 	MOVLW 99
00253C 642E       07126 	CPFSGT hour,0
00253E D007       07127 	BRA   m348
002540 0E79       07128 	MOVLW 121
002542 6E14       07129 	MOVWF s,0
002544 0E01       07130 	MOVLW 1
002546 6E15       07131 	MOVWF s+1,0
002548 EC8C F005  07132 	CALL  lcd_puts
                  07133 			;			else 
00254C D00C       07134 	BRA   m349
                  07135 			;				{
                  07136 			;				lcd_puts(Space);
00254E 0E0C       07137 m348	MOVLW 12
002550 6E14       07138 	MOVWF s,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 120

ADDR   CODE       LINE  SOURCE

002552 6A15       07139 	CLRF  s+1,0
002554 EC8C F005  07140 	CALL  lcd_puts
                  07141 			;				lcd_time();
002558 EC33 F006  07142 	CALL  lcd_time
                  07143 			;				lcd_puts(Space);
00255C 0E0C       07144 	MOVLW 12
00255E 6E14       07145 	MOVWF s,0
002560 6A15       07146 	CLRF  s+1,0
002562 EC8C F005  07147 	CALL  lcd_puts
                  07148 			;				}
                  07149 			;			}
                  07150 			;			
                  07151 			;		if(!EBUT5 && pause == 0)
002566 B283       07152 m349	BTFSC 0xF83,EBUT5,0
002568 D014       07153 	BRA   m351
00256A 6654       07154 	TSTFSZ pause,0
00256C D012       07155 	BRA   m351
                  07156 			;			{
                  07157 			;			pause = 1;
00256E 0E01       07158 	MOVLW 1
002570 6E54       07159 	MOVWF pause,0
                  07160 			;			pause_flag = 3;
002572 0E03       07161 	MOVLW 3
002574 6E08       07162 	MOVWF pause_flag,0
                  07163 			;			lcd_clear();
002576 EC86 F005  07164 	CALL  lcd_clear
                  07165 			;			lcd_goto(LINE1);
00257A 0E80       07166 	MOVLW 128
00257C EC83 F005  07167 	CALL  lcd_goto
                  07168 			;			lcd_puts_cyr(Pause_LCD_cyr);
002580 0E81       07169 	MOVLW 129
002582 6E11       07170 	MOVWF s_2,0
002584 ECEC F005  07171 	CALL  lcd_puts_cyr
                  07172 			;			while (!EBUT5);
002588 A283       07173 m350	BTFSS 0xF83,EBUT5,0
00258A D7FE       07174 	BRA   m350
                  07175 			;			delay(100);
00258C 0E64       07176 	MOVLW 100
00258E EC3D F001  07177 	CALL  delay
                  07178 			;			}
                  07179 			;
                  07180 			;		if(!EBUT5 && pause == 1  && pause_flag == 3)
002592 B283       07181 m351	BTFSC 0xF83,EBUT5,0
002594 D00C       07182 	BRA   m353
002596 2C54       07183 	DECFSZ pause,W,0
002598 D00A       07184 	BRA   m353
00259A 0E03       07185 	MOVLW 3
00259C 6208       07186 	CPFSEQ pause_flag,0
00259E D007       07187 	BRA   m353
                  07188 			;			{
                  07189 			;			pause = 0;
0025A0 6A54       07190 	CLRF  pause,0
                  07191 			;			pause_flag = 0;
0025A2 6A08       07192 	CLRF  pause_flag,0
                  07193 			;			while (!EBUT5);
0025A4 A283       07194 m352	BTFSS 0xF83,EBUT5,0
0025A6 D7FE       07195 	BRA   m352
                  07196 			;			delay(100);
0025A8 0E64       07197 	MOVLW 100
0025AA EC3D F001  07198 	CALL  delay
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 121

ADDR   CODE       LINE  SOURCE

                  07199 			;			}
                  07200 			;		}
                  07201 			;
                  07202 			;	if(vEN4 && (cred4 != 0))
0025AE 5239       07203 m353	MOVF  vEN4,1,0
0025B0 E052       07204 	BZ    m359
0025B2 51AC       07205 	MOVF  cred4,W,1
0025B4 11AD       07206 	IORWF cred4+1,W,1
0025B6 11AE       07207 	IORWF cred4+2,W,1
0025B8 E04E       07208 	BZ    m359
                  07209 			;		{
                  07210 			;		if (pause == 0)
0025BA 6654       07211 	TSTFSZ pause,0
0025BC D028       07212 	BRA   m355
                  07213 			;			{
                  07214 			;			lcd_goto(LINE1);
0025BE 0E80       07215 	MOVLW 128
0025C0 EC83 F005  07216 	CALL  lcd_goto
                  07217 			;			lcd_puts_cyr(Time4_cyr);
0025C4 0E33       07218 	MOVLW 51
0025C6 6E11       07219 	MOVWF s_2,0
0025C8 ECEC F005  07220 	CALL  lcd_puts_cyr
                  07221 			;//			lcd_goto(LINE2);
                  07222 			;//			lcd_puts(NOTH);
                  07223 			;			conv(cred4);
0025CC C0AC F012  07224 	MOVFF cred4,pr
0025D0 C0AD F013  07225 	MOVFF cred4+1,pr+1
0025D4 C0AE F014  07226 	MOVFF cred4+2,pr+2
0025D8 EC51 F001  07227 	CALL  conv
                  07228 			;			lcd_goto(LINE2);
0025DC 0EC0       07229 	MOVLW 192
0025DE EC83 F005  07230 	CALL  lcd_goto
                  07231 			;			if(hour > 99) lcd_puts(Over);
0025E2 0E63       07232 	MOVLW 99
0025E4 642E       07233 	CPFSGT hour,0
0025E6 D007       07234 	BRA   m354
0025E8 0E79       07235 	MOVLW 121
0025EA 6E14       07236 	MOVWF s,0
0025EC 0E01       07237 	MOVLW 1
0025EE 6E15       07238 	MOVWF s+1,0
0025F0 EC8C F005  07239 	CALL  lcd_puts
                  07240 			;			else 
0025F4 D00C       07241 	BRA   m355
                  07242 			;				{
                  07243 			;				lcd_puts(Space);
0025F6 0E0C       07244 m354	MOVLW 12
0025F8 6E14       07245 	MOVWF s,0
0025FA 6A15       07246 	CLRF  s+1,0
0025FC EC8C F005  07247 	CALL  lcd_puts
                  07248 			;				lcd_time();
002600 EC33 F006  07249 	CALL  lcd_time
                  07250 			;				lcd_puts(Space);
002604 0E0C       07251 	MOVLW 12
002606 6E14       07252 	MOVWF s,0
002608 6A15       07253 	CLRF  s+1,0
00260A EC8C F005  07254 	CALL  lcd_puts
                  07255 			;				}
                  07256 			;			}
                  07257 			;			
                  07258 			;		if(!EBUT5 && pause == 0)
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 122

ADDR   CODE       LINE  SOURCE

00260E B283       07259 m355	BTFSC 0xF83,EBUT5,0
002610 D014       07260 	BRA   m357
002612 6654       07261 	TSTFSZ pause,0
002614 D012       07262 	BRA   m357
                  07263 			;			{
                  07264 			;			pause = 1;
002616 0E01       07265 	MOVLW 1
002618 6E54       07266 	MOVWF pause,0
                  07267 			;			pause_flag = 4;
00261A 0E04       07268 	MOVLW 4
00261C 6E08       07269 	MOVWF pause_flag,0
                  07270 			;			lcd_clear();
00261E EC86 F005  07271 	CALL  lcd_clear
                  07272 			;			lcd_goto(LINE1);
002622 0E80       07273 	MOVLW 128
002624 EC83 F005  07274 	CALL  lcd_goto
                  07275 			;			lcd_puts_cyr(Pause_LCD_cyr);
002628 0E81       07276 	MOVLW 129
00262A 6E11       07277 	MOVWF s_2,0
00262C ECEC F005  07278 	CALL  lcd_puts_cyr
                  07279 			;			while (!EBUT5);
002630 A283       07280 m356	BTFSS 0xF83,EBUT5,0
002632 D7FE       07281 	BRA   m356
                  07282 			;			delay(100);
002634 0E64       07283 	MOVLW 100
002636 EC3D F001  07284 	CALL  delay
                  07285 			;			}
                  07286 			;
                  07287 			;		if(!EBUT5 && pause == 1 && pause_flag == 4)
00263A B283       07288 m357	BTFSC 0xF83,EBUT5,0
00263C D00C       07289 	BRA   m359
00263E 2C54       07290 	DECFSZ pause,W,0
002640 D00A       07291 	BRA   m359
002642 0E04       07292 	MOVLW 4
002644 6208       07293 	CPFSEQ pause_flag,0
002646 D007       07294 	BRA   m359
                  07295 			;			{
                  07296 			;			pause = 0;
002648 6A54       07297 	CLRF  pause,0
                  07298 			;			pause_flag = 0;
00264A 6A08       07299 	CLRF  pause_flag,0
                  07300 			;			while (!EBUT5);
00264C A283       07301 m358	BTFSS 0xF83,EBUT5,0
00264E D7FE       07302 	BRA   m358
                  07303 			;			delay(100);
002650 0E64       07304 	MOVLW 100
002652 EC3D F001  07305 	CALL  delay
                  07306 			;			}	
                  07307 			;		}
                  07308 			;
                  07309 			;	if(vEN6 && (cred6 != 0))
002656 523A       07310 m359	MOVF  vEN6,1,0
002658 E052       07311 	BZ    m365
00265A 51AF       07312 	MOVF  cred6,W,1
00265C 11B0       07313 	IORWF cred6+1,W,1
00265E 11B1       07314 	IORWF cred6+2,W,1
002660 E04E       07315 	BZ    m365
                  07316 			;		{
                  07317 			;		if (pause == 0)
002662 6654       07318 	TSTFSZ pause,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 123

ADDR   CODE       LINE  SOURCE

002664 D028       07319 	BRA   m361
                  07320 			;			{
                  07321 			;			lcd_goto(LINE1);
002666 0E80       07322 	MOVLW 128
002668 EC83 F005  07323 	CALL  lcd_goto
                  07324 			;			lcd_puts_cyr(Time6_cyr);
00266C 0E44       07325 	MOVLW 68
00266E 6E11       07326 	MOVWF s_2,0
002670 ECEC F005  07327 	CALL  lcd_puts_cyr
                  07328 			;//			lcd_goto(LINE2);
                  07329 			;//			lcd_puts(NOTH);
                  07330 			;			conv(cred6);
002674 C0AF F012  07331 	MOVFF cred6,pr
002678 C0B0 F013  07332 	MOVFF cred6+1,pr+1
00267C C0B1 F014  07333 	MOVFF cred6+2,pr+2
002680 EC51 F001  07334 	CALL  conv
                  07335 			;			lcd_goto(LINE2);
002684 0EC0       07336 	MOVLW 192
002686 EC83 F005  07337 	CALL  lcd_goto
                  07338 			;			if(hour > 99) lcd_puts(Over);
00268A 0E63       07339 	MOVLW 99
00268C 642E       07340 	CPFSGT hour,0
00268E D007       07341 	BRA   m360
002690 0E79       07342 	MOVLW 121
002692 6E14       07343 	MOVWF s,0
002694 0E01       07344 	MOVLW 1
002696 6E15       07345 	MOVWF s+1,0
002698 EC8C F005  07346 	CALL  lcd_puts
                  07347 			;			else 
00269C D00C       07348 	BRA   m361
                  07349 			;				{
                  07350 			;				lcd_puts(Space);
00269E 0E0C       07351 m360	MOVLW 12
0026A0 6E14       07352 	MOVWF s,0
0026A2 6A15       07353 	CLRF  s+1,0
0026A4 EC8C F005  07354 	CALL  lcd_puts
                  07355 			;				lcd_time();
0026A8 EC33 F006  07356 	CALL  lcd_time
                  07357 			;				lcd_puts(Space);
0026AC 0E0C       07358 	MOVLW 12
0026AE 6E14       07359 	MOVWF s,0
0026B0 6A15       07360 	CLRF  s+1,0
0026B2 EC8C F005  07361 	CALL  lcd_puts
                  07362 			;				}
                  07363 			;			}
                  07364 			;			
                  07365 			;		if(!EBUT5 && pause == 0)
0026B6 B283       07366 m361	BTFSC 0xF83,EBUT5,0
0026B8 D014       07367 	BRA   m363
0026BA 6654       07368 	TSTFSZ pause,0
0026BC D012       07369 	BRA   m363
                  07370 			;			{
                  07371 			;			pause = 1;
0026BE 0E01       07372 	MOVLW 1
0026C0 6E54       07373 	MOVWF pause,0
                  07374 			;			pause_flag = 6;
0026C2 0E06       07375 	MOVLW 6
0026C4 6E08       07376 	MOVWF pause_flag,0
                  07377 			;			lcd_clear();
0026C6 EC86 F005  07378 	CALL  lcd_clear
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 124

ADDR   CODE       LINE  SOURCE

                  07379 			;			lcd_goto(LINE1);
0026CA 0E80       07380 	MOVLW 128
0026CC EC83 F005  07381 	CALL  lcd_goto
                  07382 			;			lcd_puts_cyr(Pause_LCD_cyr);
0026D0 0E81       07383 	MOVLW 129
0026D2 6E11       07384 	MOVWF s_2,0
0026D4 ECEC F005  07385 	CALL  lcd_puts_cyr
                  07386 			;			while (!EBUT5);
0026D8 A283       07387 m362	BTFSS 0xF83,EBUT5,0
0026DA D7FE       07388 	BRA   m362
                  07389 			;			delay(100);
0026DC 0E64       07390 	MOVLW 100
0026DE EC3D F001  07391 	CALL  delay
                  07392 			;			}
                  07393 			;
                  07394 			;		if(!EBUT5 && pause == 1  && pause_flag == 6)
0026E2 B283       07395 m363	BTFSC 0xF83,EBUT5,0
0026E4 D00C       07396 	BRA   m365
0026E6 2C54       07397 	DECFSZ pause,W,0
0026E8 D00A       07398 	BRA   m365
0026EA 0E06       07399 	MOVLW 6
0026EC 6208       07400 	CPFSEQ pause_flag,0
0026EE D007       07401 	BRA   m365
                  07402 			;			{
                  07403 			;			pause = 0;
0026F0 6A54       07404 	CLRF  pause,0
                  07405 			;			pause_flag = 0;
0026F2 6A08       07406 	CLRF  pause_flag,0
                  07407 			;			while (!EBUT5);
0026F4 A283       07408 m364	BTFSS 0xF83,EBUT5,0
0026F6 D7FE       07409 	BRA   m364
                  07410 			;			delay(100);
0026F8 0E64       07411 	MOVLW 100
0026FA EC3D F001  07412 	CALL  delay
                  07413 			;			}
                  07414 			;		}
                  07415 			;		
                  07416 			;/*-------------------------------------------------------------*/
                  07417 			;		if(OUT_PC_count > 0)				/////PC_OUT_counter
0026FE 525F       07418 m365	MOVF  OUT_PC_count,1,0
002700 E010       07419 	BZ    m366
                  07420 			;			{
                  07421 			;			OUT_PC = 0;
002702 9882       07422 	BCF   0xF82,OUT_PC,0
                  07423 			;			delay(250);
002704 0EFA       07424 	MOVLW 250
002706 EC3D F001  07425 	CALL  delay
                  07426 			;			OUT_PC_count --;
00270A 065F       07427 	DECF  OUT_PC_count,1,0
                  07428 			;			if (!(OUT_PC_count % 4))
00270C 0E03       07429 	MOVLW 3
00270E 145F       07430 	ANDWF OUT_PC_count,W,0
002710 E109       07431 	BNZ   m367
                  07432 			;				{
                  07433 			;				OUT_PC = 1;
002712 8882       07434 	BSF   0xF82,OUT_PC,0
                  07435 			;				delay(250);
002714 0EFA       07436 	MOVLW 250
002716 EC3D F001  07437 	CALL  delay
                  07438 			;				delay(250);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 125

ADDR   CODE       LINE  SOURCE

00271A 0EFA       07439 	MOVLW 250
00271C EC3D F001  07440 	CALL  delay
                  07441 			;				}
                  07442 			;			} 
                  07443 			;		else OUT_PC = 1;
002720 D001       07444 	BRA   m367
002722 8882       07445 m366	BSF   0xF82,OUT_PC,0
                  07446 			;
                  07447 			;/*-------------------------------------------------------------*/
                  07448 			;	
                  07449 			;	}
                  07450 			;
                  07451 			;
                  07452 			;if((WORK == 0 || WORK == 1) && (((!EBUT1 && vEN1) && ((credit != 0) || rem1)) || (vComm != 0)))
002724 5255       07453 m367	MOVF  WORK,1,0
002726 E002       07454 	BZ    m368
002728 2C55       07455 	DECFSZ WORK,W,0
00272A D09D       07456 	BRA   m374
00272C BC83       07457 m368	BTFSC 0xF83,EBUT1,0
00272E D007       07458 	BRA   m369
002730 5236       07459 	MOVF  vEN1,1,0
002732 E005       07460 	BZ    m369
002734 519A       07461 	MOVF  credit,W,1
002736 119B       07462 	IORWF credit+1,W,1
002738 E105       07463 	BNZ   m370
00273A 6622       07464 	TSTFSZ rem1,0
00273C D003       07465 	BRA   m370
00273E 5235       07466 m369	MOVF  vComm,1,0
002740 B4D8       07467 	BTFSC 0xFD8,Zero_,0
002742 D091       07468 	BRA   m374
                  07469 			;	{
                  07470 			;	val_tmp = readEEPROM(0x00);	
002744 0E00       07471 m370	MOVLW 0
002746 EC57 F002  07472 	CALL  readEEPROM
00274A 6E04       07473 	MOVWF val_tmp,0
00274C 6A05       07474 	CLRF  val_tmp+1,0
                  07475 			;	x2_tmp = (uns16)val_tmp * 100;
00274E 0E64       07476 	MOVLW 100
002750 0204       07477 	MULWF val_tmp,0
002752 CFF3 F006  07478 	MOVFF PRODL,x2_tmp
002756 CFF4 F007  07479 	MOVFF PRODH,x2_tmp+1
00275A 0205       07480 	MULWF val_tmp+1,0
00275C 50F3       07481 	MOVF  PRODL,W,0
00275E 2607       07482 	ADDWF x2_tmp+1,1,0
                  07483 			;	val_tmp = readEEPROM(0x01);	
002760 0E01       07484 	MOVLW 1
002762 EC57 F002  07485 	CALL  readEEPROM
002766 6E04       07486 	MOVWF val_tmp,0
002768 6A05       07487 	CLRF  val_tmp+1,0
                  07488 			;	x2_tmp +=(uns16)val_tmp;
00276A 2606       07489 	ADDWF x2_tmp,1,0
00276C 5005       07490 	MOVF  val_tmp+1,W,0
00276E 2207       07491 	ADDWFC x2_tmp+1,1,0
                  07492 			;	if(x2_tmp<=credit)
002770 5006       07493 	MOVF  x2_tmp,W,0
002772 5D9A       07494 	SUBWF credit,W,1
002774 5007       07495 	MOVF  x2_tmp+1,W,0
002776 599B       07496 	SUBWFB credit+1,W,1
002778 E35F       07497 	BNC   m373
                  07498 			;		{
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 126

ADDR   CODE       LINE  SOURCE

                  07499 			;		WORK = 1;
00277A 0E01       07500 	MOVLW 1
00277C 6E55       07501 	MOVWF WORK,0
                  07502 			;		rem1 = 0;
00277E 6A22       07503 	CLRF  rem1,0
                  07504 			;		SECcount = 0;
002780 6B96       07505 	CLRF  SECcount,1
002782 6B97       07506 	CLRF  SECcount+1,1
                  07507 			;		cr_to_time(1);
002784 EC3E F003  07508 	CALL  cr_to_time
                  07509 			;		cred1 += value;
002788 51B2       07510 	MOVF  value,W,1
00278A 27A3       07511 	ADDWF cred1,1,1
00278C 51B3       07512 	MOVF  value+1,W,1
00278E 23A4       07513 	ADDWFC cred1+1,1,1
002790 51B4       07514 	MOVF  value+2,W,1
002792 23A5       07515 	ADDWFC cred1+2,1,1
                  07516 			;		total1 += credit;
002794 519A       07517 	MOVF  credit,W,1
002796 27B8       07518 	ADDWF total1,1,1
002798 519B       07519 	MOVF  credit+1,W,1
00279A 23B9       07520 	ADDWFC total1+1,1,1
00279C 0E00       07521 	MOVLW 0
00279E 23BA       07522 	ADDWFC total1+2,1,1
                  07523 			;		NONpay += credit;
0027A0 519A       07524 	MOVF  credit,W,1
0027A2 27CA       07525 	ADDWF NONpay,1,1
0027A4 519B       07526 	MOVF  credit+1,W,1
0027A6 23CB       07527 	ADDWFC NONpay+1,1,1
0027A8 0E00       07528 	MOVLW 0
0027AA 23CC       07529 	ADDWFC NONpay+2,1,1
                  07530 			;		value = 0;
0027AC 6BB2       07531 	CLRF  value,1
0027AE 6BB3       07532 	CLRF  value+1,1
0027B0 6BB4       07533 	CLRF  value+2,1
                  07534 			;		credit = 0;
0027B2 6B9A       07535 	CLRF  credit,1
0027B4 6B9B       07536 	CLRF  credit+1,1
                  07537 			;		if(cred1 != 0 && pause == 0)
0027B6 51A3       07538 	MOVF  cred1,W,1
0027B8 11A4       07539 	IORWF cred1+1,W,1
0027BA 11A5       07540 	IORWF cred1+2,W,1
0027BC E007       07541 	BZ    m371
0027BE 6654       07542 	TSTFSZ pause,0
0027C0 D005       07543 	BRA   m371
                  07544 			;			{
                  07545 			;			SECcount = 60;
0027C2 0E3C       07546 	MOVLW 60
0027C4 6F96       07547 	MOVWF SECcount,1
0027C6 6B97       07548 	CLRF  SECcount+1,1
                  07549 			;			REL1_ON(); 
0027C8 EC2D F002  07550 	CALL  REL1_ON
                  07551 			;			}
                  07552 			;		writeEEPROM(total1.high8,etotal1H); delay(10);
0027CC C0BA F014  07553 m371	MOVFF total1+2,smb_2
0027D0 0EEA       07554 	MOVLW 234
0027D2 EC61 F002  07555 	CALL  writeEEPROM
0027D6 0E0A       07556 	MOVLW 10
0027D8 EC3D F001  07557 	CALL  delay
                  07558 			;		writeEEPROM(total1.mid8,etotal1M);  delay(10);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 127

ADDR   CODE       LINE  SOURCE

0027DC C0B9 F014  07559 	MOVFF total1+1,smb_2
0027E0 0EEB       07560 	MOVLW 235
0027E2 EC61 F002  07561 	CALL  writeEEPROM
0027E6 0E0A       07562 	MOVLW 10
0027E8 EC3D F001  07563 	CALL  delay
                  07564 			;		writeEEPROM(total1.low8,etotal1L);  delay(10);
0027EC C0B8 F014  07565 	MOVFF total1,smb_2
0027F0 0EEC       07566 	MOVLW 236
0027F2 EC61 F002  07567 	CALL  writeEEPROM
0027F6 0E0A       07568 	MOVLW 10
0027F8 EC3D F001  07569 	CALL  delay
                  07570 			;	
                  07571 			;		writeEEPROM(NONpay.high8,eNONpayH); delay(10);
0027FC C0CC F014  07572 	MOVFF NONpay+2,smb_2
002800 0EE4       07573 	MOVLW 228
002802 EC61 F002  07574 	CALL  writeEEPROM
002806 0E0A       07575 	MOVLW 10
002808 EC3D F001  07576 	CALL  delay
                  07577 			;		writeEEPROM(NONpay.mid8,eNONpayM); delay(10);
00280C C0CB F014  07578 	MOVFF NONpay+1,smb_2
002810 0EE5       07579 	MOVLW 229
002812 EC61 F002  07580 	CALL  writeEEPROM
002816 0E0A       07581 	MOVLW 10
002818 EC3D F001  07582 	CALL  delay
                  07583 			;		writeEEPROM(NONpay.low8,eNONpayL); delay(10);
00281C C0CA F014  07584 	MOVFF NONpay,smb_2
002820 0EE6       07585 	MOVLW 230
002822 EC61 F002  07586 	CALL  writeEEPROM
002826 0E0A       07587 	MOVLW 10
002828 EC3D F001  07588 	CALL  delay
                  07589 			;		while(!EBUT1);
00282C AC83       07590 m372	BTFSS 0xF83,EBUT1,0
00282E D7FE       07591 	BRA   m372
                  07592 			;		delay(100);
002830 0E64       07593 	MOVLW 100
002832 EC3D F001  07594 	CALL  delay
                  07595 			;		}
                  07596 			;	else 
002836 D017       07597 	BRA   m374
                  07598 			;		{
                  07599 			;		lcd_clear();
002838 EC86 F005  07600 m373	CALL  lcd_clear
                  07601 			;		lcd_goto(LINE1);
00283C 0E80       07602 	MOVLW 128
00283E EC83 F005  07603 	CALL  lcd_goto
                  07604 			;		lcd_puts_cyr(Credit_cyr);
002842 0E66       07605 	MOVLW 102
002844 6E11       07606 	MOVWF s_2,0
002846 ECEC F005  07607 	CALL  lcd_puts_cyr
                  07608 			;		lcd_puts(": ");
00284A 0E17       07609 	MOVLW 23
00284C 6E14       07610 	MOVWF s,0
00284E 6A15       07611 	CLRF  s+1,0
002850 EC8C F005  07612 	CALL  lcd_puts
                  07613 			;//		lcd_goto(LINE2);
                  07614 			;//		lcd_puts(Space);
                  07615 			;		lcd_credit();
002854 ECFB F005  07616 	CALL  lcd_credit
                  07617 			;		lcd_goto(LINE2);
002858 0EC0       07618 	MOVLW 192
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 128

ADDR   CODE       LINE  SOURCE

00285A EC83 F005  07619 	CALL  lcd_goto
                  07620 			;		lcd_puts_cyr(Choice_cyr);
00285E 0E6D       07621 	MOVLW 109
002860 6E11       07622 	MOVWF s_2,0
002862 ECEC F005  07623 	CALL  lcd_puts_cyr
                  07624 			;		}
                  07625 			;	}
                  07626 			;
                  07627 			;if((WORK == 0 || WORK == 2) && (((!EBUT2 && vEN2)  && ((credit != 0) || rem2)) || (vComm != 0))) 
002866 5255       07628 m374	MOVF  WORK,1,0
002868 E003       07629 	BZ    m375
00286A 0E02       07630 	MOVLW 2
00286C 6255       07631 	CPFSEQ WORK,0
00286E D09D       07632 	BRA   m381
002870 BE83       07633 m375	BTFSC 0xF83,EBUT2,0
002872 D007       07634 	BRA   m376
002874 5237       07635 	MOVF  vEN2,1,0
002876 E005       07636 	BZ    m376
002878 519A       07637 	MOVF  credit,W,1
00287A 119B       07638 	IORWF credit+1,W,1
00287C E105       07639 	BNZ   m377
00287E 6623       07640 	TSTFSZ rem2,0
002880 D003       07641 	BRA   m377
002882 5235       07642 m376	MOVF  vComm,1,0
002884 B4D8       07643 	BTFSC 0xFD8,Zero_,0
002886 D091       07644 	BRA   m381
                  07645 			;	{
                  07646 			;	val_tmp = readEEPROM(0x05);	
002888 0E05       07647 m377	MOVLW 5
00288A EC57 F002  07648 	CALL  readEEPROM
00288E 6E04       07649 	MOVWF val_tmp,0
002890 6A05       07650 	CLRF  val_tmp+1,0
                  07651 			;	x2_tmp = (uns16)val_tmp * 100;
002892 0E64       07652 	MOVLW 100
002894 0204       07653 	MULWF val_tmp,0
002896 CFF3 F006  07654 	MOVFF PRODL,x2_tmp
00289A CFF4 F007  07655 	MOVFF PRODH,x2_tmp+1
00289E 0205       07656 	MULWF val_tmp+1,0
0028A0 50F3       07657 	MOVF  PRODL,W,0
0028A2 2607       07658 	ADDWF x2_tmp+1,1,0
                  07659 			;	val_tmp = readEEPROM(0x06);	
0028A4 0E06       07660 	MOVLW 6
0028A6 EC57 F002  07661 	CALL  readEEPROM
0028AA 6E04       07662 	MOVWF val_tmp,0
0028AC 6A05       07663 	CLRF  val_tmp+1,0
                  07664 			;	x2_tmp +=(uns16)val_tmp;
0028AE 2606       07665 	ADDWF x2_tmp,1,0
0028B0 5005       07666 	MOVF  val_tmp+1,W,0
0028B2 2207       07667 	ADDWFC x2_tmp+1,1,0
                  07668 			;	if(x2_tmp<=credit)
0028B4 5006       07669 	MOVF  x2_tmp,W,0
0028B6 5D9A       07670 	SUBWF credit,W,1
0028B8 5007       07671 	MOVF  x2_tmp+1,W,0
0028BA 599B       07672 	SUBWFB credit+1,W,1
0028BC E35F       07673 	BNC   m380
                  07674 			;		{
                  07675 			;		WORK = 2;
0028BE 0E02       07676 	MOVLW 2
0028C0 6E55       07677 	MOVWF WORK,0
                  07678 			;		rem2 = 0;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 129

ADDR   CODE       LINE  SOURCE

0028C2 6A23       07679 	CLRF  rem2,0
                  07680 			;		SECcount = 0;
0028C4 6B96       07681 	CLRF  SECcount,1
0028C6 6B97       07682 	CLRF  SECcount+1,1
                  07683 			;		cr_to_time(2);
0028C8 EC3E F003  07684 	CALL  cr_to_time
                  07685 			;		cred2 += value;
0028CC 51B2       07686 	MOVF  value,W,1
0028CE 27A6       07687 	ADDWF cred2,1,1
0028D0 51B3       07688 	MOVF  value+1,W,1
0028D2 23A7       07689 	ADDWFC cred2+1,1,1
0028D4 51B4       07690 	MOVF  value+2,W,1
0028D6 23A8       07691 	ADDWFC cred2+2,1,1
                  07692 			;		total2 += credit;
0028D8 519A       07693 	MOVF  credit,W,1
0028DA 27BB       07694 	ADDWF total2,1,1
0028DC 519B       07695 	MOVF  credit+1,W,1
0028DE 23BC       07696 	ADDWFC total2+1,1,1
0028E0 0E00       07697 	MOVLW 0
0028E2 23BD       07698 	ADDWFC total2+2,1,1
                  07699 			;		NONpay += credit;
0028E4 519A       07700 	MOVF  credit,W,1
0028E6 27CA       07701 	ADDWF NONpay,1,1
0028E8 519B       07702 	MOVF  credit+1,W,1
0028EA 23CB       07703 	ADDWFC NONpay+1,1,1
0028EC 0E00       07704 	MOVLW 0
0028EE 23CC       07705 	ADDWFC NONpay+2,1,1
                  07706 			;		value = 0;
0028F0 6BB2       07707 	CLRF  value,1
0028F2 6BB3       07708 	CLRF  value+1,1
0028F4 6BB4       07709 	CLRF  value+2,1
                  07710 			;		credit = 0;
0028F6 6B9A       07711 	CLRF  credit,1
0028F8 6B9B       07712 	CLRF  credit+1,1
                  07713 			;		if(cred2 != 0 && pause == 0)
0028FA 51A6       07714 	MOVF  cred2,W,1
0028FC 11A7       07715 	IORWF cred2+1,W,1
0028FE 11A8       07716 	IORWF cred2+2,W,1
002900 E007       07717 	BZ    m378
002902 6654       07718 	TSTFSZ pause,0
002904 D005       07719 	BRA   m378
                  07720 			;			{
                  07721 			;			SECcount = 60;
002906 0E3C       07722 	MOVLW 60
002908 6F96       07723 	MOVWF SECcount,1
00290A 6B97       07724 	CLRF  SECcount+1,1
                  07725 			;			REL2_ON(); 
00290C EC34 F002  07726 	CALL  REL2_ON
                  07727 			;			}
                  07728 			;		writeEEPROM(total2.high8,etotal2H); delay(10);
002910 C0BD F014  07729 m378	MOVFF total2+2,smb_2
002914 0EED       07730 	MOVLW 237
002916 EC61 F002  07731 	CALL  writeEEPROM
00291A 0E0A       07732 	MOVLW 10
00291C EC3D F001  07733 	CALL  delay
                  07734 			;		writeEEPROM(total2.mid8,etotal2M);  delay(10);
002920 C0BC F014  07735 	MOVFF total2+1,smb_2
002924 0EEE       07736 	MOVLW 238
002926 EC61 F002  07737 	CALL  writeEEPROM
00292A 0E0A       07738 	MOVLW 10
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 130

ADDR   CODE       LINE  SOURCE

00292C EC3D F001  07739 	CALL  delay
                  07740 			;		writeEEPROM(total2.low8,etotal2L);  delay(10);
002930 C0BB F014  07741 	MOVFF total2,smb_2
002934 0EEF       07742 	MOVLW 239
002936 EC61 F002  07743 	CALL  writeEEPROM
00293A 0E0A       07744 	MOVLW 10
00293C EC3D F001  07745 	CALL  delay
                  07746 			;	
                  07747 			;		writeEEPROM(NONpay.high8,eNONpayH); delay(10);
002940 C0CC F014  07748 	MOVFF NONpay+2,smb_2
002944 0EE4       07749 	MOVLW 228
002946 EC61 F002  07750 	CALL  writeEEPROM
00294A 0E0A       07751 	MOVLW 10
00294C EC3D F001  07752 	CALL  delay
                  07753 			;		writeEEPROM(NONpay.mid8,eNONpayM); delay(10);
002950 C0CB F014  07754 	MOVFF NONpay+1,smb_2
002954 0EE5       07755 	MOVLW 229
002956 EC61 F002  07756 	CALL  writeEEPROM
00295A 0E0A       07757 	MOVLW 10
00295C EC3D F001  07758 	CALL  delay
                  07759 			;		writeEEPROM(NONpay.low8,eNONpayL); delay(10);
002960 C0CA F014  07760 	MOVFF NONpay,smb_2
002964 0EE6       07761 	MOVLW 230
002966 EC61 F002  07762 	CALL  writeEEPROM
00296A 0E0A       07763 	MOVLW 10
00296C EC3D F001  07764 	CALL  delay
                  07765 			;		while(!EBUT2);
002970 AE83       07766 m379	BTFSS 0xF83,EBUT2,0
002972 D7FE       07767 	BRA   m379
                  07768 			;		delay(100);
002974 0E64       07769 	MOVLW 100
002976 EC3D F001  07770 	CALL  delay
                  07771 			;		}
                  07772 			;	else 
00297A D017       07773 	BRA   m381
                  07774 			;		{
                  07775 			;		lcd_clear();
00297C EC86 F005  07776 m380	CALL  lcd_clear
                  07777 			;		lcd_goto(LINE1);
002980 0E80       07778 	MOVLW 128
002982 EC83 F005  07779 	CALL  lcd_goto
                  07780 			;		lcd_puts_cyr(Credit_cyr);
002986 0E66       07781 	MOVLW 102
002988 6E11       07782 	MOVWF s_2,0
00298A ECEC F005  07783 	CALL  lcd_puts_cyr
                  07784 			;		lcd_puts(": ");
00298E 0E17       07785 	MOVLW 23
002990 6E14       07786 	MOVWF s,0
002992 6A15       07787 	CLRF  s+1,0
002994 EC8C F005  07788 	CALL  lcd_puts
                  07789 			;//		lcd_goto(LINE2);
                  07790 			;//		lcd_puts(Space);
                  07791 			;		lcd_credit();
002998 ECFB F005  07792 	CALL  lcd_credit
                  07793 			;		lcd_goto(LINE2);
00299C 0EC0       07794 	MOVLW 192
00299E EC83 F005  07795 	CALL  lcd_goto
                  07796 			;		lcd_puts_cyr(Choice_cyr);
0029A2 0E6D       07797 	MOVLW 109
0029A4 6E11       07798 	MOVWF s_2,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 131

ADDR   CODE       LINE  SOURCE

0029A6 ECEC F005  07799 	CALL  lcd_puts_cyr
                  07800 			;		}
                  07801 			;	}
                  07802 			;
                  07803 			;if((WORK == 0 || WORK == 3) && (((!EBUT3 && vEN3) && ((credit != 0) || rem3)) || (vComm != 0)))
0029AA 5255       07804 m381	MOVF  WORK,1,0
0029AC E003       07805 	BZ    m382
0029AE 0E03       07806 	MOVLW 3
0029B0 6255       07807 	CPFSEQ WORK,0
0029B2 D09D       07808 	BRA   m388
0029B4 B280       07809 m382	BTFSC 0xF80,EBUT3,0
0029B6 D007       07810 	BRA   m383
0029B8 5238       07811 	MOVF  vEN3,1,0
0029BA E005       07812 	BZ    m383
0029BC 519A       07813 	MOVF  credit,W,1
0029BE 119B       07814 	IORWF credit+1,W,1
0029C0 E105       07815 	BNZ   m384
0029C2 6624       07816 	TSTFSZ rem3,0
0029C4 D003       07817 	BRA   m384
0029C6 5235       07818 m383	MOVF  vComm,1,0
0029C8 B4D8       07819 	BTFSC 0xFD8,Zero_,0
0029CA D091       07820 	BRA   m388
                  07821 			;	{
                  07822 			;	val_tmp = readEEPROM(0x60);	
0029CC 0E60       07823 m384	MOVLW 96
0029CE EC57 F002  07824 	CALL  readEEPROM
0029D2 6E04       07825 	MOVWF val_tmp,0
0029D4 6A05       07826 	CLRF  val_tmp+1,0
                  07827 			;	x2_tmp = (uns16)val_tmp * 100;
0029D6 0E64       07828 	MOVLW 100
0029D8 0204       07829 	MULWF val_tmp,0
0029DA CFF3 F006  07830 	MOVFF PRODL,x2_tmp
0029DE CFF4 F007  07831 	MOVFF PRODH,x2_tmp+1
0029E2 0205       07832 	MULWF val_tmp+1,0
0029E4 50F3       07833 	MOVF  PRODL,W,0
0029E6 2607       07834 	ADDWF x2_tmp+1,1,0
                  07835 			;	val_tmp = readEEPROM(0x61);	
0029E8 0E61       07836 	MOVLW 97
0029EA EC57 F002  07837 	CALL  readEEPROM
0029EE 6E04       07838 	MOVWF val_tmp,0
0029F0 6A05       07839 	CLRF  val_tmp+1,0
                  07840 			;	x2_tmp +=(uns16)val_tmp;
0029F2 2606       07841 	ADDWF x2_tmp,1,0
0029F4 5005       07842 	MOVF  val_tmp+1,W,0
0029F6 2207       07843 	ADDWFC x2_tmp+1,1,0
                  07844 			;	if(x2_tmp<=credit)
0029F8 5006       07845 	MOVF  x2_tmp,W,0
0029FA 5D9A       07846 	SUBWF credit,W,1
0029FC 5007       07847 	MOVF  x2_tmp+1,W,0
0029FE 599B       07848 	SUBWFB credit+1,W,1
002A00 E35F       07849 	BNC   m387
                  07850 			;		{
                  07851 			;		WORK = 3;
002A02 0E03       07852 	MOVLW 3
002A04 6E55       07853 	MOVWF WORK,0
                  07854 			;		rem3 = 0;
002A06 6A24       07855 	CLRF  rem3,0
                  07856 			;		SECcount = 0;
002A08 6B96       07857 	CLRF  SECcount,1
002A0A 6B97       07858 	CLRF  SECcount+1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 132

ADDR   CODE       LINE  SOURCE

                  07859 			;		cr_to_time(3);
002A0C EC3E F003  07860 	CALL  cr_to_time
                  07861 			;		cred3 += value;
002A10 51B2       07862 	MOVF  value,W,1
002A12 27A9       07863 	ADDWF cred3,1,1
002A14 51B3       07864 	MOVF  value+1,W,1
002A16 23AA       07865 	ADDWFC cred3+1,1,1
002A18 51B4       07866 	MOVF  value+2,W,1
002A1A 23AB       07867 	ADDWFC cred3+2,1,1
                  07868 			;		total3 += credit;
002A1C 519A       07869 	MOVF  credit,W,1
002A1E 27BE       07870 	ADDWF total3,1,1
002A20 519B       07871 	MOVF  credit+1,W,1
002A22 23BF       07872 	ADDWFC total3+1,1,1
002A24 0E00       07873 	MOVLW 0
002A26 23C0       07874 	ADDWFC total3+2,1,1
                  07875 			;		NONpay += credit;
002A28 519A       07876 	MOVF  credit,W,1
002A2A 27CA       07877 	ADDWF NONpay,1,1
002A2C 519B       07878 	MOVF  credit+1,W,1
002A2E 23CB       07879 	ADDWFC NONpay+1,1,1
002A30 0E00       07880 	MOVLW 0
002A32 23CC       07881 	ADDWFC NONpay+2,1,1
                  07882 			;		value = 0;
002A34 6BB2       07883 	CLRF  value,1
002A36 6BB3       07884 	CLRF  value+1,1
002A38 6BB4       07885 	CLRF  value+2,1
                  07886 			;		credit = 0;
002A3A 6B9A       07887 	CLRF  credit,1
002A3C 6B9B       07888 	CLRF  credit+1,1
                  07889 			;		if(cred3 != 0 && pause == 0)
002A3E 51A9       07890 	MOVF  cred3,W,1
002A40 11AA       07891 	IORWF cred3+1,W,1
002A42 11AB       07892 	IORWF cred3+2,W,1
002A44 E007       07893 	BZ    m385
002A46 6654       07894 	TSTFSZ pause,0
002A48 D005       07895 	BRA   m385
                  07896 			;			{
                  07897 			;			SECcount = 60;
002A4A 0E3C       07898 	MOVLW 60
002A4C 6F96       07899 	MOVWF SECcount,1
002A4E 6B97       07900 	CLRF  SECcount+1,1
                  07901 			;			REL3_ON(); 
002A50 EC3B F002  07902 	CALL  REL3_ON
                  07903 			;			}
                  07904 			;		writeEEPROM(total3.high8,etotal3H); delay(10);
002A54 C0C0 F014  07905 m385	MOVFF total3+2,smb_2
002A58 0ECA       07906 	MOVLW 202
002A5A EC61 F002  07907 	CALL  writeEEPROM
002A5E 0E0A       07908 	MOVLW 10
002A60 EC3D F001  07909 	CALL  delay
                  07910 			;		writeEEPROM(total3.mid8,etotal3M);  delay(10);
002A64 C0BF F014  07911 	MOVFF total3+1,smb_2
002A68 0ECB       07912 	MOVLW 203
002A6A EC61 F002  07913 	CALL  writeEEPROM
002A6E 0E0A       07914 	MOVLW 10
002A70 EC3D F001  07915 	CALL  delay
                  07916 			;		writeEEPROM(total3.low8,etotal3L);  delay(10);
002A74 C0BE F014  07917 	MOVFF total3,smb_2
002A78 0ECC       07918 	MOVLW 204
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 133

ADDR   CODE       LINE  SOURCE

002A7A EC61 F002  07919 	CALL  writeEEPROM
002A7E 0E0A       07920 	MOVLW 10
002A80 EC3D F001  07921 	CALL  delay
                  07922 			;	
                  07923 			;		writeEEPROM(NONpay.high8,eNONpayH); delay(10);
002A84 C0CC F014  07924 	MOVFF NONpay+2,smb_2
002A88 0EE4       07925 	MOVLW 228
002A8A EC61 F002  07926 	CALL  writeEEPROM
002A8E 0E0A       07927 	MOVLW 10
002A90 EC3D F001  07928 	CALL  delay
                  07929 			;		writeEEPROM(NONpay.mid8,eNONpayM); delay(10);
002A94 C0CB F014  07930 	MOVFF NONpay+1,smb_2
002A98 0EE5       07931 	MOVLW 229
002A9A EC61 F002  07932 	CALL  writeEEPROM
002A9E 0E0A       07933 	MOVLW 10
002AA0 EC3D F001  07934 	CALL  delay
                  07935 			;		writeEEPROM(NONpay.low8,eNONpayL); delay(10);
002AA4 C0CA F014  07936 	MOVFF NONpay,smb_2
002AA8 0EE6       07937 	MOVLW 230
002AAA EC61 F002  07938 	CALL  writeEEPROM
002AAE 0E0A       07939 	MOVLW 10
002AB0 EC3D F001  07940 	CALL  delay
                  07941 			;		while(!EBUT3);
002AB4 A280       07942 m386	BTFSS 0xF80,EBUT3,0
002AB6 D7FE       07943 	BRA   m386
                  07944 			;		delay(100);
002AB8 0E64       07945 	MOVLW 100
002ABA EC3D F001  07946 	CALL  delay
                  07947 			;		}
                  07948 			;	else 
002ABE D017       07949 	BRA   m388
                  07950 			;		{
                  07951 			;		lcd_clear();
002AC0 EC86 F005  07952 m387	CALL  lcd_clear
                  07953 			;		lcd_goto(LINE1);
002AC4 0E80       07954 	MOVLW 128
002AC6 EC83 F005  07955 	CALL  lcd_goto
                  07956 			;		lcd_puts_cyr(Credit_cyr);
002ACA 0E66       07957 	MOVLW 102
002ACC 6E11       07958 	MOVWF s_2,0
002ACE ECEC F005  07959 	CALL  lcd_puts_cyr
                  07960 			;		lcd_puts(": ");
002AD2 0E17       07961 	MOVLW 23
002AD4 6E14       07962 	MOVWF s,0
002AD6 6A15       07963 	CLRF  s+1,0
002AD8 EC8C F005  07964 	CALL  lcd_puts
                  07965 			;//		lcd_goto(LINE2);
                  07966 			;//		lcd_puts(Space);
                  07967 			;		lcd_credit();
002ADC ECFB F005  07968 	CALL  lcd_credit
                  07969 			;		lcd_goto(LINE2);
002AE0 0EC0       07970 	MOVLW 192
002AE2 EC83 F005  07971 	CALL  lcd_goto
                  07972 			;		lcd_puts_cyr(Choice_cyr);
002AE6 0E6D       07973 	MOVLW 109
002AE8 6E11       07974 	MOVWF s_2,0
002AEA ECEC F005  07975 	CALL  lcd_puts_cyr
                  07976 			;		}
                  07977 			;	}
                  07978 			;
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 134

ADDR   CODE       LINE  SOURCE

                  07979 			;if((WORK == 0 || WORK == 4) && (((!EBUT4 && vEN4)  && ((credit != 0) || rem4)) || (vComm != 0))) 
002AEE 5255       07980 m388	MOVF  WORK,1,0
002AF0 E003       07981 	BZ    m389
002AF2 0E04       07982 	MOVLW 4
002AF4 6255       07983 	CPFSEQ WORK,0
002AF6 D09D       07984 	BRA   m395
002AF8 B080       07985 m389	BTFSC 0xF80,EBUT4,0
002AFA D007       07986 	BRA   m390
002AFC 5239       07987 	MOVF  vEN4,1,0
002AFE E005       07988 	BZ    m390
002B00 519A       07989 	MOVF  credit,W,1
002B02 119B       07990 	IORWF credit+1,W,1
002B04 E105       07991 	BNZ   m391
002B06 6625       07992 	TSTFSZ rem4,0
002B08 D003       07993 	BRA   m391
002B0A 5235       07994 m390	MOVF  vComm,1,0
002B0C B4D8       07995 	BTFSC 0xFD8,Zero_,0
002B0E D091       07996 	BRA   m395
                  07997 			;	{
                  07998 			;	val_tmp = readEEPROM(0x65);	
002B10 0E65       07999 m391	MOVLW 101
002B12 EC57 F002  08000 	CALL  readEEPROM
002B16 6E04       08001 	MOVWF val_tmp,0
002B18 6A05       08002 	CLRF  val_tmp+1,0
                  08003 			;	x2_tmp = (uns16)val_tmp * 100;
002B1A 0E64       08004 	MOVLW 100
002B1C 0204       08005 	MULWF val_tmp,0
002B1E CFF3 F006  08006 	MOVFF PRODL,x2_tmp
002B22 CFF4 F007  08007 	MOVFF PRODH,x2_tmp+1
002B26 0205       08008 	MULWF val_tmp+1,0
002B28 50F3       08009 	MOVF  PRODL,W,0
002B2A 2607       08010 	ADDWF x2_tmp+1,1,0
                  08011 			;	val_tmp = readEEPROM(0x66);	
002B2C 0E66       08012 	MOVLW 102
002B2E EC57 F002  08013 	CALL  readEEPROM
002B32 6E04       08014 	MOVWF val_tmp,0
002B34 6A05       08015 	CLRF  val_tmp+1,0
                  08016 			;	x2_tmp +=(uns16)val_tmp;
002B36 2606       08017 	ADDWF x2_tmp,1,0
002B38 5005       08018 	MOVF  val_tmp+1,W,0
002B3A 2207       08019 	ADDWFC x2_tmp+1,1,0
                  08020 			;	if(x2_tmp<=credit)
002B3C 5006       08021 	MOVF  x2_tmp,W,0
002B3E 5D9A       08022 	SUBWF credit,W,1
002B40 5007       08023 	MOVF  x2_tmp+1,W,0
002B42 599B       08024 	SUBWFB credit+1,W,1
002B44 E35F       08025 	BNC   m394
                  08026 			;		{
                  08027 			;		WORK = 4;
002B46 0E04       08028 	MOVLW 4
002B48 6E55       08029 	MOVWF WORK,0
                  08030 			;		rem4 = 0;
002B4A 6A25       08031 	CLRF  rem4,0
                  08032 			;		SECcount = 0;
002B4C 6B96       08033 	CLRF  SECcount,1
002B4E 6B97       08034 	CLRF  SECcount+1,1
                  08035 			;		cr_to_time(4);
002B50 EC3E F003  08036 	CALL  cr_to_time
                  08037 			;		cred4 += value;
002B54 51B2       08038 	MOVF  value,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 135

ADDR   CODE       LINE  SOURCE

002B56 27AC       08039 	ADDWF cred4,1,1
002B58 51B3       08040 	MOVF  value+1,W,1
002B5A 23AD       08041 	ADDWFC cred4+1,1,1
002B5C 51B4       08042 	MOVF  value+2,W,1
002B5E 23AE       08043 	ADDWFC cred4+2,1,1
                  08044 			;		total4 += credit;
002B60 519A       08045 	MOVF  credit,W,1
002B62 27C1       08046 	ADDWF total4,1,1
002B64 519B       08047 	MOVF  credit+1,W,1
002B66 23C2       08048 	ADDWFC total4+1,1,1
002B68 0E00       08049 	MOVLW 0
002B6A 23C3       08050 	ADDWFC total4+2,1,1
                  08051 			;		NONpay += credit;
002B6C 519A       08052 	MOVF  credit,W,1
002B6E 27CA       08053 	ADDWF NONpay,1,1
002B70 519B       08054 	MOVF  credit+1,W,1
002B72 23CB       08055 	ADDWFC NONpay+1,1,1
002B74 0E00       08056 	MOVLW 0
002B76 23CC       08057 	ADDWFC NONpay+2,1,1
                  08058 			;		value = 0;
002B78 6BB2       08059 	CLRF  value,1
002B7A 6BB3       08060 	CLRF  value+1,1
002B7C 6BB4       08061 	CLRF  value+2,1
                  08062 			;		credit = 0;
002B7E 6B9A       08063 	CLRF  credit,1
002B80 6B9B       08064 	CLRF  credit+1,1
                  08065 			;		if(cred4 != 0 && pause == 0)
002B82 51AC       08066 	MOVF  cred4,W,1
002B84 11AD       08067 	IORWF cred4+1,W,1
002B86 11AE       08068 	IORWF cred4+2,W,1
002B88 E007       08069 	BZ    m392
002B8A 6654       08070 	TSTFSZ pause,0
002B8C D005       08071 	BRA   m392
                  08072 			;			{
                  08073 			;			SECcount = 60;
002B8E 0E3C       08074 	MOVLW 60
002B90 6F96       08075 	MOVWF SECcount,1
002B92 6B97       08076 	CLRF  SECcount+1,1
                  08077 			;			REL4_ON(); 
002B94 EC42 F002  08078 	CALL  REL4_ON
                  08079 			;			}
                  08080 			;		writeEEPROM(total4.high8,etotal4H); delay(10);
002B98 C0C3 F014  08081 m392	MOVFF total4+2,smb_2
002B9C 0ECD       08082 	MOVLW 205
002B9E EC61 F002  08083 	CALL  writeEEPROM
002BA2 0E0A       08084 	MOVLW 10
002BA4 EC3D F001  08085 	CALL  delay
                  08086 			;		writeEEPROM(total4.mid8,etotal4M);  delay(10);
002BA8 C0C2 F014  08087 	MOVFF total4+1,smb_2
002BAC 0ECE       08088 	MOVLW 206
002BAE EC61 F002  08089 	CALL  writeEEPROM
002BB2 0E0A       08090 	MOVLW 10
002BB4 EC3D F001  08091 	CALL  delay
                  08092 			;		writeEEPROM(total4.low8,etotal4L);  delay(10);
002BB8 C0C1 F014  08093 	MOVFF total4,smb_2
002BBC 0ECF       08094 	MOVLW 207
002BBE EC61 F002  08095 	CALL  writeEEPROM
002BC2 0E0A       08096 	MOVLW 10
002BC4 EC3D F001  08097 	CALL  delay
                  08098 			;	
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 136

ADDR   CODE       LINE  SOURCE

                  08099 			;		writeEEPROM(NONpay.high8,eNONpayH); delay(10);
002BC8 C0CC F014  08100 	MOVFF NONpay+2,smb_2
002BCC 0EE4       08101 	MOVLW 228
002BCE EC61 F002  08102 	CALL  writeEEPROM
002BD2 0E0A       08103 	MOVLW 10
002BD4 EC3D F001  08104 	CALL  delay
                  08105 			;		writeEEPROM(NONpay.mid8,eNONpayM); delay(10);
002BD8 C0CB F014  08106 	MOVFF NONpay+1,smb_2
002BDC 0EE5       08107 	MOVLW 229
002BDE EC61 F002  08108 	CALL  writeEEPROM
002BE2 0E0A       08109 	MOVLW 10
002BE4 EC3D F001  08110 	CALL  delay
                  08111 			;		writeEEPROM(NONpay.low8,eNONpayL); delay(10);
002BE8 C0CA F014  08112 	MOVFF NONpay,smb_2
002BEC 0EE6       08113 	MOVLW 230
002BEE EC61 F002  08114 	CALL  writeEEPROM
002BF2 0E0A       08115 	MOVLW 10
002BF4 EC3D F001  08116 	CALL  delay
                  08117 			;		while(!EBUT4);
002BF8 A080       08118 m393	BTFSS 0xF80,EBUT4,0
002BFA D7FE       08119 	BRA   m393
                  08120 			;		delay(100);
002BFC 0E64       08121 	MOVLW 100
002BFE EC3D F001  08122 	CALL  delay
                  08123 			;		}
                  08124 			;	else 
002C02 D017       08125 	BRA   m395
                  08126 			;		{
                  08127 			;		lcd_clear();
002C04 EC86 F005  08128 m394	CALL  lcd_clear
                  08129 			;		lcd_goto(LINE1);
002C08 0E80       08130 	MOVLW 128
002C0A EC83 F005  08131 	CALL  lcd_goto
                  08132 			;		lcd_puts_cyr(Credit_cyr);
002C0E 0E66       08133 	MOVLW 102
002C10 6E11       08134 	MOVWF s_2,0
002C12 ECEC F005  08135 	CALL  lcd_puts_cyr
                  08136 			;		lcd_puts(": ");
002C16 0E17       08137 	MOVLW 23
002C18 6E14       08138 	MOVWF s,0
002C1A 6A15       08139 	CLRF  s+1,0
002C1C EC8C F005  08140 	CALL  lcd_puts
                  08141 			;//		lcd_goto(LINE2);
                  08142 			;//		lcd_puts(Space);
                  08143 			;		lcd_credit();
002C20 ECFB F005  08144 	CALL  lcd_credit
                  08145 			;		lcd_goto(LINE2);
002C24 0EC0       08146 	MOVLW 192
002C26 EC83 F005  08147 	CALL  lcd_goto
                  08148 			;		lcd_puts_cyr(Choice_cyr);
002C2A 0E6D       08149 	MOVLW 109
002C2C 6E11       08150 	MOVWF s_2,0
002C2E ECEC F005  08151 	CALL  lcd_puts_cyr
                  08152 			;		}
                  08153 			;	}
                  08154 			;
                  08155 			;if((WORK == 0 || WORK == 6) && (((!EBUT6 && vEN6)  && ((credit != 0) || rem6)) || (vComm != 0))) 
002C32 5255       08156 m395	MOVF  WORK,1,0
002C34 E003       08157 	BZ    m396
002C36 0E06       08158 	MOVLW 6
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 137

ADDR   CODE       LINE  SOURCE

002C38 6255       08159 	CPFSEQ WORK,0
002C3A D09D       08160 	BRA   m402
002C3C BA82       08161 m396	BTFSC 0xF82,EBUT6,0
002C3E D007       08162 	BRA   m397
002C40 523A       08163 	MOVF  vEN6,1,0
002C42 E005       08164 	BZ    m397
002C44 519A       08165 	MOVF  credit,W,1
002C46 119B       08166 	IORWF credit+1,W,1
002C48 E105       08167 	BNZ   m398
002C4A 6626       08168 	TSTFSZ rem6,0
002C4C D003       08169 	BRA   m398
002C4E 5235       08170 m397	MOVF  vComm,1,0
002C50 B4D8       08171 	BTFSC 0xFD8,Zero_,0
002C52 D091       08172 	BRA   m402
                  08173 			;	{
                  08174 			;	val_tmp = readEEPROM(0x0B);	//new
002C54 0E0B       08175 m398	MOVLW 11
002C56 EC57 F002  08176 	CALL  readEEPROM
002C5A 6E04       08177 	MOVWF val_tmp,0
002C5C 6A05       08178 	CLRF  val_tmp+1,0
                  08179 			;	x2_tmp = (uns16)val_tmp * 100;
002C5E 0E64       08180 	MOVLW 100
002C60 0204       08181 	MULWF val_tmp,0
002C62 CFF3 F006  08182 	MOVFF PRODL,x2_tmp
002C66 CFF4 F007  08183 	MOVFF PRODH,x2_tmp+1
002C6A 0205       08184 	MULWF val_tmp+1,0
002C6C 50F3       08185 	MOVF  PRODL,W,0
002C6E 2607       08186 	ADDWF x2_tmp+1,1,0
                  08187 			;	val_tmp = readEEPROM(0x0C);	 //new
002C70 0E0C       08188 	MOVLW 12
002C72 EC57 F002  08189 	CALL  readEEPROM
002C76 6E04       08190 	MOVWF val_tmp,0
002C78 6A05       08191 	CLRF  val_tmp+1,0
                  08192 			;	x2_tmp +=(uns16)val_tmp;
002C7A 2606       08193 	ADDWF x2_tmp,1,0
002C7C 5005       08194 	MOVF  val_tmp+1,W,0
002C7E 2207       08195 	ADDWFC x2_tmp+1,1,0
                  08196 			;	if(x2_tmp<=credit)
002C80 5006       08197 	MOVF  x2_tmp,W,0
002C82 5D9A       08198 	SUBWF credit,W,1
002C84 5007       08199 	MOVF  x2_tmp+1,W,0
002C86 599B       08200 	SUBWFB credit+1,W,1
002C88 E35F       08201 	BNC   m401
                  08202 			;		{
                  08203 			;		WORK = 6;
002C8A 0E06       08204 	MOVLW 6
002C8C 6E55       08205 	MOVWF WORK,0
                  08206 			;		rem6 = 0;
002C8E 6A26       08207 	CLRF  rem6,0
                  08208 			;		SECcount = 0;
002C90 6B96       08209 	CLRF  SECcount,1
002C92 6B97       08210 	CLRF  SECcount+1,1
                  08211 			;		cr_to_time(6);
002C94 EC3E F003  08212 	CALL  cr_to_time
                  08213 			;		cred6 += value;
002C98 51B2       08214 	MOVF  value,W,1
002C9A 27AF       08215 	ADDWF cred6,1,1
002C9C 51B3       08216 	MOVF  value+1,W,1
002C9E 23B0       08217 	ADDWFC cred6+1,1,1
002CA0 51B4       08218 	MOVF  value+2,W,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 138

ADDR   CODE       LINE  SOURCE

002CA2 23B1       08219 	ADDWFC cred6+2,1,1
                  08220 			;		total6 += credit;
002CA4 519A       08221 	MOVF  credit,W,1
002CA6 27C4       08222 	ADDWF total6,1,1
002CA8 519B       08223 	MOVF  credit+1,W,1
002CAA 23C5       08224 	ADDWFC total6+1,1,1
002CAC 0E00       08225 	MOVLW 0
002CAE 23C6       08226 	ADDWFC total6+2,1,1
                  08227 			;		NONpay += credit;
002CB0 519A       08228 	MOVF  credit,W,1
002CB2 27CA       08229 	ADDWF NONpay,1,1
002CB4 519B       08230 	MOVF  credit+1,W,1
002CB6 23CB       08231 	ADDWFC NONpay+1,1,1
002CB8 0E00       08232 	MOVLW 0
002CBA 23CC       08233 	ADDWFC NONpay+2,1,1
                  08234 			;		value = 0;
002CBC 6BB2       08235 	CLRF  value,1
002CBE 6BB3       08236 	CLRF  value+1,1
002CC0 6BB4       08237 	CLRF  value+2,1
                  08238 			;		credit = 0;
002CC2 6B9A       08239 	CLRF  credit,1
002CC4 6B9B       08240 	CLRF  credit+1,1
                  08241 			;		if(cred6 != 0 && pause == 0)
002CC6 51AF       08242 	MOVF  cred6,W,1
002CC8 11B0       08243 	IORWF cred6+1,W,1
002CCA 11B1       08244 	IORWF cred6+2,W,1
002CCC E007       08245 	BZ    m399
002CCE 6654       08246 	TSTFSZ pause,0
002CD0 D005       08247 	BRA   m399
                  08248 			;			{
                  08249 			;			SECcount = 60;
002CD2 0E3C       08250 	MOVLW 60
002CD4 6F96       08251 	MOVWF SECcount,1
002CD6 6B97       08252 	CLRF  SECcount+1,1
                  08253 			;			REL6_ON(); 
002CD8 EC49 F002  08254 	CALL  REL6_ON
                  08255 			;			}
                  08256 			;		writeEEPROM(total6.high8,etotal6H); delay(10);
002CDC C0C6 F014  08257 m399	MOVFF total6+2,smb_2
002CE0 0EBA       08258 	MOVLW 186
002CE2 EC61 F002  08259 	CALL  writeEEPROM
002CE6 0E0A       08260 	MOVLW 10
002CE8 EC3D F001  08261 	CALL  delay
                  08262 			;		writeEEPROM(total6.mid8,etotal6M);  delay(10);
002CEC C0C5 F014  08263 	MOVFF total6+1,smb_2
002CF0 0EBB       08264 	MOVLW 187
002CF2 EC61 F002  08265 	CALL  writeEEPROM
002CF6 0E0A       08266 	MOVLW 10
002CF8 EC3D F001  08267 	CALL  delay
                  08268 			;		writeEEPROM(total6.low8,etotal6L);  delay(10);
002CFC C0C4 F014  08269 	MOVFF total6,smb_2
002D00 0EBC       08270 	MOVLW 188
002D02 EC61 F002  08271 	CALL  writeEEPROM
002D06 0E0A       08272 	MOVLW 10
002D08 EC3D F001  08273 	CALL  delay
                  08274 			;	
                  08275 			;		writeEEPROM(NONpay.high8,eNONpayH); delay(10);
002D0C C0CC F014  08276 	MOVFF NONpay+2,smb_2
002D10 0EE4       08277 	MOVLW 228
002D12 EC61 F002  08278 	CALL  writeEEPROM
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 139

ADDR   CODE       LINE  SOURCE

002D16 0E0A       08279 	MOVLW 10
002D18 EC3D F001  08280 	CALL  delay
                  08281 			;		writeEEPROM(NONpay.mid8,eNONpayM); delay(10);
002D1C C0CB F014  08282 	MOVFF NONpay+1,smb_2
002D20 0EE5       08283 	MOVLW 229
002D22 EC61 F002  08284 	CALL  writeEEPROM
002D26 0E0A       08285 	MOVLW 10
002D28 EC3D F001  08286 	CALL  delay
                  08287 			;		writeEEPROM(NONpay.low8,eNONpayL); delay(10);
002D2C C0CA F014  08288 	MOVFF NONpay,smb_2
002D30 0EE6       08289 	MOVLW 230
002D32 EC61 F002  08290 	CALL  writeEEPROM
002D36 0E0A       08291 	MOVLW 10
002D38 EC3D F001  08292 	CALL  delay
                  08293 			;		while(!EBUT6);
002D3C AA82       08294 m400	BTFSS 0xF82,EBUT6,0
002D3E D7FE       08295 	BRA   m400
                  08296 			;		delay(100);
002D40 0E64       08297 	MOVLW 100
002D42 EC3D F001  08298 	CALL  delay
                  08299 			;		}
                  08300 			;	else 
002D46 D017       08301 	BRA   m402
                  08302 			;		{
                  08303 			;		lcd_clear();
002D48 EC86 F005  08304 m401	CALL  lcd_clear
                  08305 			;		lcd_goto(LINE1);
002D4C 0E80       08306 	MOVLW 128
002D4E EC83 F005  08307 	CALL  lcd_goto
                  08308 			;		lcd_puts_cyr(Credit_cyr);
002D52 0E66       08309 	MOVLW 102
002D54 6E11       08310 	MOVWF s_2,0
002D56 ECEC F005  08311 	CALL  lcd_puts_cyr
                  08312 			;		lcd_puts(": ");
002D5A 0E17       08313 	MOVLW 23
002D5C 6E14       08314 	MOVWF s,0
002D5E 6A15       08315 	CLRF  s+1,0
002D60 EC8C F005  08316 	CALL  lcd_puts
                  08317 			;//		lcd_goto(LINE2);
                  08318 			;//		lcd_puts(Space);
                  08319 			;		lcd_credit();
002D64 ECFB F005  08320 	CALL  lcd_credit
                  08321 			;		lcd_goto(LINE2);
002D68 0EC0       08322 	MOVLW 192
002D6A EC83 F005  08323 	CALL  lcd_goto
                  08324 			;		lcd_puts_cyr(Choice_cyr);
002D6E 0E6D       08325 	MOVLW 109
002D70 6E11       08326 	MOVWF s_2,0
002D72 ECEC F005  08327 	CALL  lcd_puts_cyr
                  08328 			;		}
                  08329 			;	}
                  08330 			;
                  08331 			;if((WORK != 0))				// prehvarlqne ot 1 BUT na dr.
002D76 5255       08332 m402	MOVF  WORK,1,0
002D78 B4D8       08333 	BTFSC 0xFD8,Zero_,0
002D7A D149       08334 	BRA   m427
                  08335 			;	{
                  08336 			;	if((!EBUT1) && WORK !=1)
002D7C BC83       08337 	BTFSC 0xF83,EBUT1,0
002D7E D039       08338 	BRA   m406
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 140

ADDR   CODE       LINE  SOURCE

002D80 4C55       08339 	DCFSNZ WORK,W,0
002D82 D037       08340 	BRA   m406
                  08341 			;		{
                  08342 			;		if (pause == 1)
002D84 2C54       08343 	DECFSZ pause,W,0
002D86 D002       08344 	BRA   m403
                  08345 			;			{
                  08346 			;			pause = 0;
002D88 6A54       08347 	CLRF  pause,0
                  08348 			;			pause_flag = 0;
002D8A 6A08       08349 	CLRF  pause_flag,0
                  08350 			;			}
                  08351 			;		credit_tmp = credit;
002D8C C09A F05C  08352 m403	MOVFF credit,credit_tmp
002D90 C09B F05D  08353 	MOVFF credit+1,credit_tmp+1
002D94 6A5E       08354 	CLRF  credit_tmp+2,0
                  08355 			;		credit = 0;
002D96 6B9A       08356 	CLRF  credit,1
002D98 6B9B       08357 	CLRF  credit+1,1
                  08358 			;		time_to_cr(WORK);
002D9A 5055       08359 	MOVF  WORK,W,0
002D9C EC37 F004  08360 	CALL  time_to_cr
                  08361 			;		if (credit_tmp!=0) credit+=credit_tmp;
002DA0 505C       08362 	MOVF  credit_tmp,W,0
002DA2 105D       08363 	IORWF credit_tmp+1,W,0
002DA4 105E       08364 	IORWF credit_tmp+2,W,0
002DA6 E004       08365 	BZ    m404
002DA8 505C       08366 	MOVF  credit_tmp,W,0
002DAA 279A       08367 	ADDWF credit,1,1
002DAC 505D       08368 	MOVF  credit_tmp+1,W,0
002DAE 239B       08369 	ADDWFC credit+1,1,1
                  08370 			;		cr_to_time(1);
002DB0 0E01       08371 m404	MOVLW 1
002DB2 EC3E F003  08372 	CALL  cr_to_time
                  08373 			;		cred1 = value;
002DB6 C0B2 F0A3  08374 	MOVFF value,cred1
002DBA C0B3 F0A4  08375 	MOVFF value+1,cred1+1
002DBE C0B4 F0A5  08376 	MOVFF value+2,cred1+2
                  08377 			;		WORK = 1;
002DC2 0E01       08378 	MOVLW 1
002DC4 6E55       08379 	MOVWF WORK,0
                  08380 			;		value = 0;
002DC6 6BB2       08381 	CLRF  value,1
002DC8 6BB3       08382 	CLRF  value+1,1
002DCA 6BB4       08383 	CLRF  value+2,1
                  08384 			;		credit = 0;
002DCC 6B9A       08385 	CLRF  credit,1
002DCE 6B9B       08386 	CLRF  credit+1,1
                  08387 			;		if(cred1 != 0 && pause == 0)
002DD0 51A3       08388 	MOVF  cred1,W,1
002DD2 11A4       08389 	IORWF cred1+1,W,1
002DD4 11A5       08390 	IORWF cred1+2,W,1
002DD6 E007       08391 	BZ    m405
002DD8 6654       08392 	TSTFSZ pause,0
002DDA D005       08393 	BRA   m405
                  08394 			;			{
                  08395 			;			SECcount = 60;
002DDC 0E3C       08396 	MOVLW 60
002DDE 6F96       08397 	MOVWF SECcount,1
002DE0 6B97       08398 	CLRF  SECcount+1,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 141

ADDR   CODE       LINE  SOURCE

                  08399 			;			REL1_ON(); 
002DE2 EC2D F002  08400 	CALL  REL1_ON
                  08401 			;			}
                  08402 			;		while(!EBUT1);
002DE6 AC83       08403 m405	BTFSS 0xF83,EBUT1,0
002DE8 D7FE       08404 	BRA   m405
                  08405 			;		delay(100);		
002DEA 0E64       08406 	MOVLW 100
002DEC EC3D F001  08407 	CALL  delay
                  08408 			;		}
                  08409 			;	else 
002DF0 D006       08410 	BRA   m407
                  08411 			;		if((!EBUT1) && pause == 1)
002DF2 BC83       08412 m406	BTFSC 0xF83,EBUT1,0
002DF4 D004       08413 	BRA   m407
002DF6 2C54       08414 	DECFSZ pause,W,0
002DF8 D002       08415 	BRA   m407
                  08416 			;		{
                  08417 			;		pause = 0;
002DFA 6A54       08418 	CLRF  pause,0
                  08419 			;		pause_flag = 0;
002DFC 6A08       08420 	CLRF  pause_flag,0
                  08421 			;		}
                  08422 			;
                  08423 			;	if((!EBUT2) && WORK !=2)
002DFE BE83       08424 m407	BTFSC 0xF83,EBUT2,0
002E00 D03A       08425 	BRA   m411
002E02 5055       08426 	MOVF  WORK,W,0
002E04 0A02       08427 	XORLW 2
002E06 E037       08428 	BZ    m411
                  08429 			;		{
                  08430 			;		if (pause == 1)
002E08 2C54       08431 	DECFSZ pause,W,0
002E0A D002       08432 	BRA   m408
                  08433 			;			{
                  08434 			;			pause = 0;
002E0C 6A54       08435 	CLRF  pause,0
                  08436 			;			pause_flag = 0;
002E0E 6A08       08437 	CLRF  pause_flag,0
                  08438 			;			}
                  08439 			;		credit_tmp = credit;
002E10 C09A F05C  08440 m408	MOVFF credit,credit_tmp
002E14 C09B F05D  08441 	MOVFF credit+1,credit_tmp+1
002E18 6A5E       08442 	CLRF  credit_tmp+2,0
                  08443 			;		credit = 0;
002E1A 6B9A       08444 	CLRF  credit,1
002E1C 6B9B       08445 	CLRF  credit+1,1
                  08446 			;		time_to_cr(WORK);
002E1E 5055       08447 	MOVF  WORK,W,0
002E20 EC37 F004  08448 	CALL  time_to_cr
                  08449 			;		if (credit_tmp!=0) credit+=credit_tmp;
002E24 505C       08450 	MOVF  credit_tmp,W,0
002E26 105D       08451 	IORWF credit_tmp+1,W,0
002E28 105E       08452 	IORWF credit_tmp+2,W,0
002E2A E004       08453 	BZ    m409
002E2C 505C       08454 	MOVF  credit_tmp,W,0
002E2E 279A       08455 	ADDWF credit,1,1
002E30 505D       08456 	MOVF  credit_tmp+1,W,0
002E32 239B       08457 	ADDWFC credit+1,1,1
                  08458 			;		cr_to_time(2);
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 142

ADDR   CODE       LINE  SOURCE

002E34 0E02       08459 m409	MOVLW 2
002E36 EC3E F003  08460 	CALL  cr_to_time
                  08461 			;		cred2 = value;
002E3A C0B2 F0A6  08462 	MOVFF value,cred2
002E3E C0B3 F0A7  08463 	MOVFF value+1,cred2+1
002E42 C0B4 F0A8  08464 	MOVFF value+2,cred2+2
                  08465 			;		WORK = 2;
002E46 0E02       08466 	MOVLW 2
002E48 6E55       08467 	MOVWF WORK,0
                  08468 			;		value = 0;
002E4A 6BB2       08469 	CLRF  value,1
002E4C 6BB3       08470 	CLRF  value+1,1
002E4E 6BB4       08471 	CLRF  value+2,1
                  08472 			;		credit = 0;
002E50 6B9A       08473 	CLRF  credit,1
002E52 6B9B       08474 	CLRF  credit+1,1
                  08475 			;		if(cred2 != 0 && pause == 0)
002E54 51A6       08476 	MOVF  cred2,W,1
002E56 11A7       08477 	IORWF cred2+1,W,1
002E58 11A8       08478 	IORWF cred2+2,W,1
002E5A E007       08479 	BZ    m410
002E5C 6654       08480 	TSTFSZ pause,0
002E5E D005       08481 	BRA   m410
                  08482 			;			{
                  08483 			;			SECcount = 60;
002E60 0E3C       08484 	MOVLW 60
002E62 6F96       08485 	MOVWF SECcount,1
002E64 6B97       08486 	CLRF  SECcount+1,1
                  08487 			;			REL2_ON(); 
002E66 EC34 F002  08488 	CALL  REL2_ON
                  08489 			;			}
                  08490 			;		while(!EBUT2);
002E6A AE83       08491 m410	BTFSS 0xF83,EBUT2,0
002E6C D7FE       08492 	BRA   m410
                  08493 			;		delay(100);		
002E6E 0E64       08494 	MOVLW 100
002E70 EC3D F001  08495 	CALL  delay
                  08496 			;		}
                  08497 			;	else 
002E74 D006       08498 	BRA   m412
                  08499 			;		if((!EBUT2) && pause == 1)
002E76 BE83       08500 m411	BTFSC 0xF83,EBUT2,0
002E78 D004       08501 	BRA   m412
002E7A 2C54       08502 	DECFSZ pause,W,0
002E7C D002       08503 	BRA   m412
                  08504 			;		{
                  08505 			;		pause = 0;
002E7E 6A54       08506 	CLRF  pause,0
                  08507 			;		pause_flag = 0;
002E80 6A08       08508 	CLRF  pause_flag,0
                  08509 			;		}
                  08510 			;
                  08511 			;
                  08512 			;	if((!EBUT3) && WORK !=3)
002E82 B280       08513 m412	BTFSC 0xF80,EBUT3,0
002E84 D03A       08514 	BRA   m416
002E86 5055       08515 	MOVF  WORK,W,0
002E88 0A03       08516 	XORLW 3
002E8A E037       08517 	BZ    m416
                  08518 			;		{
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 143

ADDR   CODE       LINE  SOURCE

                  08519 			;		if (pause == 1)
002E8C 2C54       08520 	DECFSZ pause,W,0
002E8E D002       08521 	BRA   m413
                  08522 			;			{
                  08523 			;			pause = 0;
002E90 6A54       08524 	CLRF  pause,0
                  08525 			;			pause_flag = 0;
002E92 6A08       08526 	CLRF  pause_flag,0
                  08527 			;			}
                  08528 			;		credit_tmp = credit;
002E94 C09A F05C  08529 m413	MOVFF credit,credit_tmp
002E98 C09B F05D  08530 	MOVFF credit+1,credit_tmp+1
002E9C 6A5E       08531 	CLRF  credit_tmp+2,0
                  08532 			;		credit = 0;
002E9E 6B9A       08533 	CLRF  credit,1
002EA0 6B9B       08534 	CLRF  credit+1,1
                  08535 			;		time_to_cr(WORK);
002EA2 5055       08536 	MOVF  WORK,W,0
002EA4 EC37 F004  08537 	CALL  time_to_cr
                  08538 			;		if (credit_tmp!=0) credit+=credit_tmp;
002EA8 505C       08539 	MOVF  credit_tmp,W,0
002EAA 105D       08540 	IORWF credit_tmp+1,W,0
002EAC 105E       08541 	IORWF credit_tmp+2,W,0
002EAE E004       08542 	BZ    m414
002EB0 505C       08543 	MOVF  credit_tmp,W,0
002EB2 279A       08544 	ADDWF credit,1,1
002EB4 505D       08545 	MOVF  credit_tmp+1,W,0
002EB6 239B       08546 	ADDWFC credit+1,1,1
                  08547 			;		cr_to_time(3);
002EB8 0E03       08548 m414	MOVLW 3
002EBA EC3E F003  08549 	CALL  cr_to_time
                  08550 			;		cred3 = value;
002EBE C0B2 F0A9  08551 	MOVFF value,cred3
002EC2 C0B3 F0AA  08552 	MOVFF value+1,cred3+1
002EC6 C0B4 F0AB  08553 	MOVFF value+2,cred3+2
                  08554 			;		WORK = 3;
002ECA 0E03       08555 	MOVLW 3
002ECC 6E55       08556 	MOVWF WORK,0
                  08557 			;		value = 0;
002ECE 6BB2       08558 	CLRF  value,1
002ED0 6BB3       08559 	CLRF  value+1,1
002ED2 6BB4       08560 	CLRF  value+2,1
                  08561 			;		credit = 0;
002ED4 6B9A       08562 	CLRF  credit,1
002ED6 6B9B       08563 	CLRF  credit+1,1
                  08564 			;		if(cred3 != 0 && pause == 0)
002ED8 51A9       08565 	MOVF  cred3,W,1
002EDA 11AA       08566 	IORWF cred3+1,W,1
002EDC 11AB       08567 	IORWF cred3+2,W,1
002EDE E007       08568 	BZ    m415
002EE0 6654       08569 	TSTFSZ pause,0
002EE2 D005       08570 	BRA   m415
                  08571 			;			{
                  08572 			;			SECcount = 60;
002EE4 0E3C       08573 	MOVLW 60
002EE6 6F96       08574 	MOVWF SECcount,1
002EE8 6B97       08575 	CLRF  SECcount+1,1
                  08576 			;			REL3_ON(); 
002EEA EC3B F002  08577 	CALL  REL3_ON
                  08578 			;			}
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 144

ADDR   CODE       LINE  SOURCE

                  08579 			;		while(!EBUT3);
002EEE A280       08580 m415	BTFSS 0xF80,EBUT3,0
002EF0 D7FE       08581 	BRA   m415
                  08582 			;		delay(100);		
002EF2 0E64       08583 	MOVLW 100
002EF4 EC3D F001  08584 	CALL  delay
                  08585 			;		}
                  08586 			;	else 
002EF8 D006       08587 	BRA   m417
                  08588 			;		if((!EBUT3) && pause == 1)
002EFA B280       08589 m416	BTFSC 0xF80,EBUT3,0
002EFC D004       08590 	BRA   m417
002EFE 2C54       08591 	DECFSZ pause,W,0
002F00 D002       08592 	BRA   m417
                  08593 			;		{
                  08594 			;		pause = 0;
002F02 6A54       08595 	CLRF  pause,0
                  08596 			;		pause_flag = 0;
002F04 6A08       08597 	CLRF  pause_flag,0
                  08598 			;		}
                  08599 			;
                  08600 			;
                  08601 			;	if((!EBUT4) && WORK !=4)
002F06 B080       08602 m417	BTFSC 0xF80,EBUT4,0
002F08 D03A       08603 	BRA   m421
002F0A 5055       08604 	MOVF  WORK,W,0
002F0C 0A04       08605 	XORLW 4
002F0E E037       08606 	BZ    m421
                  08607 			;		{
                  08608 			;		if (pause == 1)
002F10 2C54       08609 	DECFSZ pause,W,0
002F12 D002       08610 	BRA   m418
                  08611 			;			{
                  08612 			;			pause = 0;
002F14 6A54       08613 	CLRF  pause,0
                  08614 			;			pause_flag = 0;
002F16 6A08       08615 	CLRF  pause_flag,0
                  08616 			;			}
                  08617 			;		credit_tmp = credit;
002F18 C09A F05C  08618 m418	MOVFF credit,credit_tmp
002F1C C09B F05D  08619 	MOVFF credit+1,credit_tmp+1
002F20 6A5E       08620 	CLRF  credit_tmp+2,0
                  08621 			;		credit = 0;
002F22 6B9A       08622 	CLRF  credit,1
002F24 6B9B       08623 	CLRF  credit+1,1
                  08624 			;		time_to_cr(WORK);
002F26 5055       08625 	MOVF  WORK,W,0
002F28 EC37 F004  08626 	CALL  time_to_cr
                  08627 			;		if (credit_tmp!=0) credit+=credit_tmp;
002F2C 505C       08628 	MOVF  credit_tmp,W,0
002F2E 105D       08629 	IORWF credit_tmp+1,W,0
002F30 105E       08630 	IORWF credit_tmp+2,W,0
002F32 E004       08631 	BZ    m419
002F34 505C       08632 	MOVF  credit_tmp,W,0
002F36 279A       08633 	ADDWF credit,1,1
002F38 505D       08634 	MOVF  credit_tmp+1,W,0
002F3A 239B       08635 	ADDWFC credit+1,1,1
                  08636 			;		cr_to_time(4);
002F3C 0E04       08637 m419	MOVLW 4
002F3E EC3E F003  08638 	CALL  cr_to_time
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 145

ADDR   CODE       LINE  SOURCE

                  08639 			;		cred4 = value;
002F42 C0B2 F0AC  08640 	MOVFF value,cred4
002F46 C0B3 F0AD  08641 	MOVFF value+1,cred4+1
002F4A C0B4 F0AE  08642 	MOVFF value+2,cred4+2
                  08643 			;		WORK = 4;
002F4E 0E04       08644 	MOVLW 4
002F50 6E55       08645 	MOVWF WORK,0
                  08646 			;		value = 0;
002F52 6BB2       08647 	CLRF  value,1
002F54 6BB3       08648 	CLRF  value+1,1
002F56 6BB4       08649 	CLRF  value+2,1
                  08650 			;		credit = 0;
002F58 6B9A       08651 	CLRF  credit,1
002F5A 6B9B       08652 	CLRF  credit+1,1
                  08653 			;		if(cred4 != 0 && pause == 0)
002F5C 51AC       08654 	MOVF  cred4,W,1
002F5E 11AD       08655 	IORWF cred4+1,W,1
002F60 11AE       08656 	IORWF cred4+2,W,1
002F62 E007       08657 	BZ    m420
002F64 6654       08658 	TSTFSZ pause,0
002F66 D005       08659 	BRA   m420
                  08660 			;			{
                  08661 			;			SECcount = 60;
002F68 0E3C       08662 	MOVLW 60
002F6A 6F96       08663 	MOVWF SECcount,1
002F6C 6B97       08664 	CLRF  SECcount+1,1
                  08665 			;			REL4_ON(); 
002F6E EC42 F002  08666 	CALL  REL4_ON
                  08667 			;			}
                  08668 			;		while(!EBUT4);
002F72 A080       08669 m420	BTFSS 0xF80,EBUT4,0
002F74 D7FE       08670 	BRA   m420
                  08671 			;		delay(100);		
002F76 0E64       08672 	MOVLW 100
002F78 EC3D F001  08673 	CALL  delay
                  08674 			;		}
                  08675 			;	else 
002F7C D006       08676 	BRA   m422
                  08677 			;		if((!EBUT4) && pause == 1)
002F7E B080       08678 m421	BTFSC 0xF80,EBUT4,0
002F80 D004       08679 	BRA   m422
002F82 2C54       08680 	DECFSZ pause,W,0
002F84 D002       08681 	BRA   m422
                  08682 			;		{
                  08683 			;		pause = 0;
002F86 6A54       08684 	CLRF  pause,0
                  08685 			;		pause_flag = 0;
002F88 6A08       08686 	CLRF  pause_flag,0
                  08687 			;		}
                  08688 			;
                  08689 			;
                  08690 			;	if((!EBUT6) && WORK !=6)
002F8A BA82       08691 m422	BTFSC 0xF82,EBUT6,0
002F8C D03A       08692 	BRA   m426
002F8E 5055       08693 	MOVF  WORK,W,0
002F90 0A06       08694 	XORLW 6
002F92 E037       08695 	BZ    m426
                  08696 			;		{
                  08697 			;		if (pause == 1)
002F94 2C54       08698 	DECFSZ pause,W,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 146

ADDR   CODE       LINE  SOURCE

002F96 D002       08699 	BRA   m423
                  08700 			;			{
                  08701 			;			pause = 0;
002F98 6A54       08702 	CLRF  pause,0
                  08703 			;			pause_flag = 0;
002F9A 6A08       08704 	CLRF  pause_flag,0
                  08705 			;			}
                  08706 			;		credit_tmp = credit;
002F9C C09A F05C  08707 m423	MOVFF credit,credit_tmp
002FA0 C09B F05D  08708 	MOVFF credit+1,credit_tmp+1
002FA4 6A5E       08709 	CLRF  credit_tmp+2,0
                  08710 			;		credit = 0;
002FA6 6B9A       08711 	CLRF  credit,1
002FA8 6B9B       08712 	CLRF  credit+1,1
                  08713 			;		time_to_cr(WORK);
002FAA 5055       08714 	MOVF  WORK,W,0
002FAC EC37 F004  08715 	CALL  time_to_cr
                  08716 			;		if (credit_tmp!=0) credit+=credit_tmp;
002FB0 505C       08717 	MOVF  credit_tmp,W,0
002FB2 105D       08718 	IORWF credit_tmp+1,W,0
002FB4 105E       08719 	IORWF credit_tmp+2,W,0
002FB6 E004       08720 	BZ    m424
002FB8 505C       08721 	MOVF  credit_tmp,W,0
002FBA 279A       08722 	ADDWF credit,1,1
002FBC 505D       08723 	MOVF  credit_tmp+1,W,0
002FBE 239B       08724 	ADDWFC credit+1,1,1
                  08725 			;		cr_to_time(6);
002FC0 0E06       08726 m424	MOVLW 6
002FC2 EC3E F003  08727 	CALL  cr_to_time
                  08728 			;		cred6 = value;
002FC6 C0B2 F0AF  08729 	MOVFF value,cred6
002FCA C0B3 F0B0  08730 	MOVFF value+1,cred6+1
002FCE C0B4 F0B1  08731 	MOVFF value+2,cred6+2
                  08732 			;		WORK = 6;
002FD2 0E06       08733 	MOVLW 6
002FD4 6E55       08734 	MOVWF WORK,0
                  08735 			;		value = 0;
002FD6 6BB2       08736 	CLRF  value,1
002FD8 6BB3       08737 	CLRF  value+1,1
002FDA 6BB4       08738 	CLRF  value+2,1
                  08739 			;		credit = 0;
002FDC 6B9A       08740 	CLRF  credit,1
002FDE 6B9B       08741 	CLRF  credit+1,1
                  08742 			;		if(cred6 != 0 && pause == 0)
002FE0 51AF       08743 	MOVF  cred6,W,1
002FE2 11B0       08744 	IORWF cred6+1,W,1
002FE4 11B1       08745 	IORWF cred6+2,W,1
002FE6 E007       08746 	BZ    m425
002FE8 6654       08747 	TSTFSZ pause,0
002FEA D005       08748 	BRA   m425
                  08749 			;			{
                  08750 			;			SECcount = 60;
002FEC 0E3C       08751 	MOVLW 60
002FEE 6F96       08752 	MOVWF SECcount,1
002FF0 6B97       08753 	CLRF  SECcount+1,1
                  08754 			;			REL6_ON(); 
002FF2 EC49 F002  08755 	CALL  REL6_ON
                  08756 			;			}
                  08757 			;		while(!EBUT6);
002FF6 AA82       08758 m425	BTFSS 0xF82,EBUT6,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 147

ADDR   CODE       LINE  SOURCE

002FF8 D7FE       08759 	BRA   m425
                  08760 			;		delay(100);		
002FFA 0E64       08761 	MOVLW 100
002FFC EC3D F001  08762 	CALL  delay
                  08763 			;		}
                  08764 			;	else 
003000 D006       08765 	BRA   m427
                  08766 			;		if((!EBUT6) && pause == 1)
003002 BA82       08767 m426	BTFSC 0xF82,EBUT6,0
003004 D004       08768 	BRA   m427
003006 2C54       08769 	DECFSZ pause,W,0
003008 D002       08770 	BRA   m427
                  08771 			;		{
                  08772 			;		pause = 0;
00300A 6A54       08773 	CLRF  pause,0
                  08774 			;		pause_flag = 0;
00300C 6A08       08775 	CLRF  pause_flag,0
                  08776 			;		}
                  08777 			;
                  08778 			;	}
                  08779 			;
                  08780 			;
                  08781 			;/*
                  08782 			;
                  08783 			;if((SECcount > 60) && ((cred1 != 0) || (cred2 != 0) || (cred3 != 0) || (cred4 != 0) || (cred6 != 0)))
                  08784 			;	{
                  08785 			;	SECcount = 0;
                  08786 			;	if(vEN1)
                  08787 			;		{
                  08788 			;		conv(cred1);
                  08789 			;		writeEEPROM(hour,etime1H); delay(10);
                  08790 			;		writeEEPROM(min,etime1M);  delay(10);
                  08791 			;		}
                  08792 			;	if(vEN2)
                  08793 			;		{
                  08794 			;		conv(cred2);
                  08795 			;		writeEEPROM(hour,etime2H); delay(10);
                  08796 			;		writeEEPROM(min,etime2M);  delay(10);
                  08797 			;		}
                  08798 			;	if(vEN3)
                  08799 			;		{
                  08800 			;		conv(cred3);
                  08801 			;		writeEEPROM(hour,etime3H); delay(10);
                  08802 			;		writeEEPROM(min,etime3M);  delay(10);
                  08803 			;		}
                  08804 			;	if(vEN4)
                  08805 			;		{
                  08806 			;		conv(cred4);
                  08807 			;		writeEEPROM(hour,etime4H); delay(10);
                  08808 			;		writeEEPROM(min,etime4M);  delay(10);
                  08809 			;		}
                  08810 			;	if(vEN6)
                  08811 			;		{
                  08812 			;		conv(cred6);
                  08813 			;		writeEEPROM(hour,etime6H); delay(10);
                  08814 			;		writeEEPROM(min,etime6M);  delay(10);
                  08815 			;		}
                  08816 			;	}
                  08817 			;
                  08818 			;*/
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 148

ADDR   CODE       LINE  SOURCE

                  08819 			;
                  08820 			;if(wTIME > 3600)
00300E 0E11       08821 m427	MOVLW 17
003010 5C50       08822 	SUBWF wTIME,W,0
003012 0E0E       08823 	MOVLW 14
003014 5851       08824 	SUBWFB wTIME+1,W,0
003016 E31E       08825 	BNC   m428
                  08826 			;	{
                  08827 			;	wHour ++;
003018 2BDC       08828 	INCF  wHour,1,1
00301A 0E00       08829 	MOVLW 0
00301C 23DD       08830 	ADDWFC wHour+1,1,1
00301E 23DE       08831 	ADDWFC wHour+2,1,1
                  08832 			;	wTIME = 0;
003020 6A50       08833 	CLRF  wTIME,0
003022 6A51       08834 	CLRF  wTIME+1,0
                  08835 			;	writeEEPROM(wHour.high8,eHour);  delay(10);
003024 C0DE F014  08836 	MOVFF wHour+2,smb_2
003028 0EDC       08837 	MOVLW 220
00302A EC61 F002  08838 	CALL  writeEEPROM
00302E 0E0A       08839 	MOVLW 10
003030 EC3D F001  08840 	CALL  delay
                  08841 			;	writeEEPROM(wHour.mid8,eHour+1); delay(10);
003034 C0DD F014  08842 	MOVFF wHour+1,smb_2
003038 0EDD       08843 	MOVLW 221
00303A EC61 F002  08844 	CALL  writeEEPROM
00303E 0E0A       08845 	MOVLW 10
003040 EC3D F001  08846 	CALL  delay
                  08847 			;	writeEEPROM(wHour.low8,eHour+2); delay(10);
003044 C0DC F014  08848 	MOVFF wHour,smb_2
003048 0EDE       08849 	MOVLW 222
00304A EC61 F002  08850 	CALL  writeEEPROM
00304E 0E0A       08851 	MOVLW 10
003050 EC3D F001  08852 	CALL  delay
                  08853 			;	}
                  08854 			;
                  08855 			;M:
                  08856 			;if(!ENTER)
003054 BA83       08857 m428	BTFSC 0xF83,ENTER,0
003056 EF42 F010  08858 	GOTO  m301
                  08859 			;	{
                  08860 			;	lcd_clear();
00305A EC86 F005  08861 	CALL  lcd_clear
                  08862 			;	while(!ENTER);
00305E AA83       08863 m429	BTFSS 0xF83,ENTER,0
003060 D7FE       08864 	BRA   m429
                  08865 			;	delay(100);
003062 0E64       08866 	MOVLW 100
003064 EC3D F001  08867 	CALL  delay
                  08868 			;	pp = 0;
003068 6A03       08869 	CLRF  pp,0
                  08870 			;	SECcount = 0;
00306A 6B96       08871 	CLRF  SECcount,1
00306C 6B97       08872 	CLRF  SECcount+1,1
                  08873 			;	while(SECcount < 120)
00306E 5197       08874 m430	MOVF  SECcount+1,W,1
003070 A4D8       08875 	BTFSS 0xFD8,Zero_,0
003072 EF42 F010  08876 	GOTO  m301
003076 0E78       08877 	MOVLW 120
003078 6196       08878 	CPFSLT SECcount,1
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 149

ADDR   CODE       LINE  SOURCE

00307A EF42 F010  08879 	GOTO  m301
                  08880 			;		{
                  08881 			;		lcd_goto(LINE1);
00307E 0E80       08882 	MOVLW 128
003080 EC83 F005  08883 	CALL  lcd_goto
                  08884 			;		lcd_puts(Menu[pp].com);
003084 90D8       08885 	BCF   0xFD8,Carry,0
003086 3403       08886 	RLCF  pp,W,0
003088 0F09       08887 	ADDLW 9
00308A DAD0       08888 	RCALL _const3
00308C 6E14       08889 	MOVWF s,0
00308E 000B       08890 	TBLRD +*
003090 50F5       08891 	MOVF  TABLAT,W,0
003092 6E15       08892 	MOVWF s+1,0
003094 EC8C F005  08893 	CALL  lcd_puts
                  08894 			;		lcd_goto(LINE2);
003098 0EC0       08895 	MOVLW 192
00309A EC83 F005  08896 	CALL  lcd_goto
                  08897 			;		lcd_puts(NOTH);
00309E 0EB5       08898 	MOVLW 181
0030A0 6E14       08899 	MOVWF s,0
0030A2 6A15       08900 	CLRF  s+1,0
0030A4 EC8C F005  08901 	CALL  lcd_puts
                  08902 			;		if(!DOWN)		// Press DOWN
0030A8 B683       08903 	BTFSC 0xF83,DOWN,0
0030AA D00A       08904 	BRA   m432
                  08905 			;			{
                  08906 			;			if(pp < 52) pp ++;
0030AC 0E33       08907 	MOVLW 51
0030AE 6403       08908 	CPFSGT pp,0
0030B0 2A03       08909 	INCF  pp,1,0
                  08910 			;			while(!DOWN);
0030B2 A683       08911 m431	BTFSS 0xF83,DOWN,0
0030B4 D7FE       08912 	BRA   m431
                  08913 			;			delay(200);
0030B6 0EC8       08914 	MOVLW 200
0030B8 EC3D F001  08915 	CALL  delay
                  08916 			;			SECcount = 0;
0030BC 6B96       08917 	CLRF  SECcount,1
0030BE 6B97       08918 	CLRF  SECcount+1,1
                  08919 			;			}
                  08920 			;		if(!UP)			// Press UP
0030C0 B883       08921 m432	BTFSC 0xF83,UP,0
0030C2 D009       08922 	BRA   m434
                  08923 			;			{
                  08924 			;			if(pp > 0) pp --;
0030C4 6603       08925 	TSTFSZ pp,0
0030C6 0603       08926 	DECF  pp,1,0
                  08927 			;			while(!UP);
0030C8 A883       08928 m433	BTFSS 0xF83,UP,0
0030CA D7FE       08929 	BRA   m433
                  08930 			;			delay(200);
0030CC 0EC8       08931 	MOVLW 200
0030CE EC3D F001  08932 	CALL  delay
                  08933 			;			SECcount = 0;
0030D2 6B96       08934 	CLRF  SECcount,1
0030D4 6B97       08935 	CLRF  SECcount+1,1
                  08936 			;			}
                  08937 			;		if(!ESC) 		// Press ESC
0030D6 B483       08938 m434	BTFSC 0xF83,ESC,0
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 150

ADDR   CODE       LINE  SOURCE

0030D8 D009       08939 	BRA   m436
                  08940 			;			{
                  08941 			;			while(!ESC);
0030DA A483       08942 m435	BTFSS 0xF83,ESC,0
0030DC D7FE       08943 	BRA   m435
                  08944 			;			delay(200);
0030DE 0EC8       08945 	MOVLW 200
0030E0 EC3D F001  08946 	CALL  delay
                  08947 			;			lcd_clear();
0030E4 EC86 F005  08948 	CALL  lcd_clear
                  08949 			;			break;
0030E8 EF42 F010  08950 	GOTO  m301
                  08951 			;			}
                  08952 			;		if(!ENTER)		// Press Enter
0030EC BA83       08953 m436	BTFSC 0xF83,ENTER,0
0030EE D7BF       08954 	BRA   m430
                  08955 			;			{
                  08956 			;			while(!ENTER);
0030F0 AA83       08957 m437	BTFSS 0xF83,ENTER,0
0030F2 D7FE       08958 	BRA   m437
                  08959 			;			delay(200);
0030F4 0EC8       08960 	MOVLW 200
0030F6 EC3D F001  08961 	CALL  delay
                  08962 			;			scan_menu(pp);
0030FA 5003       08963 	MOVF  pp,W,0
0030FC EC2B F007  08964 	CALL  scan_menu
                  08965 			;			SECcount = 0;
003100 6B96       08966 	CLRF  SECcount,1
003102 6B97       08967 	CLRF  SECcount+1,1
                  08968 			;			}
                  08969 			;		}	// end while
003104 D7B4       08970 	BRA   m430
                  08971 			;	}	// end if
                  08972 			;
                  08973 			;goto MODE;
                  08974 _const1
003106 0C00       08975 	RETLW 0
                  08976 _const2
003108 5016       08977 	MOVF  ci_2,W,0
00310A 0F1C       08978 	ADDLW 28
00310C 6EF6       08979 	MOVWF TBLPTR,0
00310E 0E31       08980 	MOVLW 49
003110 2017       08981 	ADDWFC ci_2+1,W,0
003112 6EF7       08982 	MOVWF TBLPTR+1,0
003114 6AF8       08983 	CLRF  TBLPTR+2,0
003116 0008       08984 	TBLRD *
003118 50F5       08985 	MOVF  TABLAT,W,0
00311A 0012       08986 	RETURN
00311C 2020       08987 	DW    0x2020
00311E 4520       08988 	DW    0x4520
003120 5341       08989 	DW    0x5341
003122 2059       08990 	DW    0x2059
003124 4157       08991 	DW    0x4157
003126 4853       08992 	DW    0x4853
003128 2020       08993 	DW    0x2020
00312A 2020       08994 	DW    0x2020
00312C 4300       08995 	DW    0x4300
00312E 6572       08996 	DW    0x6572
003130 6964       08997 	DW    0x6964
003132 3A74       08998 	DW    0x3A74
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 151

ADDR   CODE       LINE  SOURCE

003134 0020       08999 	DW    0x20
003136 6954       09000 	DW    0x6954
003138 656D       09001 	DW    0x656D
00313A 203A       09002 	DW    0x203A
00313C 5400       09003 	DW    0x5400
00313E 6D69       09004 	DW    0x6D69
003140 3165       09005 	DW    0x3165
003142 203A       09006 	DW    0x203A
003144 5400       09007 	DW    0x5400
003146 6D69       09008 	DW    0x6D69
003148 3265       09009 	DW    0x3265
00314A 203A       09010 	DW    0x203A
00314C 5400       09011 	DW    0x5400
00314E 6D69       09012 	DW    0x6D69
003150 3365       09013 	DW    0x3365
003152 203A       09014 	DW    0x203A
003154 5400       09015 	DW    0x5400
003156 6D69       09016 	DW    0x6D69
003158 3465       09017 	DW    0x3465
00315A 203A       09018 	DW    0x203A
00315C 5400       09019 	DW    0x5400
00315E 6D69       09020 	DW    0x6D69
003160 3565       09021 	DW    0x3565
003162 203A       09022 	DW    0x203A
003164 4C00       09023 	DW    0x4C00
003166 0056       09024 	DW    0x56
003168 754F       09025 	DW    0x754F
00316A 2074       09026 	DW    0x2074
00316C 666F       09027 	DW    0x666F
00316E 7320       09028 	DW    0x7320
003170 7265       09029 	DW    0x7265
003172 6976       09030 	DW    0x6976
003174 6563       09031 	DW    0x6563
003176 2020       09032 	DW    0x2020
003178 5400       09033 	DW    0x5400
00317A 7365       09034 	DW    0x7365
00317C 2074       09035 	DW    0x2074
00317E 7473       09036 	DW    0x7473
003180 7261       09037 	DW    0x7261
003182 6574       09038 	DW    0x6574
003184 2064       09039 	DW    0x2064
003186 2020       09040 	DW    0x2020
003188 0020       09041 	DW    0x20
00318A 6554       09042 	DW    0x6554
00318C 7473       09043 	DW    0x7473
00318E 6620       09044 	DW    0x6620
003190 6E69       09045 	DW    0x6E69
003192 7369       09046 	DW    0x7369
003194 6568       09047 	DW    0x6568
003196 2064       09048 	DW    0x2064
003198 2020       09049 	DW    0x2020
00319A 4300       09050 	DW    0x4300
00319C 656C       09051 	DW    0x656C
00319E 7261       09052 	DW    0x7261
0031A0 6465       09053 	DW    0x6465
0031A2 4300       09054 	DW    0x4300
0031A4 7361       09055 	DW    0x7361
0031A6 3A68       09056 	DW    0x3A68
0031A8 0020       09057 	DW    0x20
0031AA 6553       09058 	DW    0x6553
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 152

ADDR   CODE       LINE  SOURCE

0031AC 4E72       09059 	DW    0x4E72
0031AE 6D75       09060 	DW    0x6D75
0031B0 203A       09061 	DW    0x203A
0031B2 4900       09062 	DW    0x4900
0031B4 736E       09063 	DW    0x736E
0031B6 7265       09064 	DW    0x7265
0031B8 2074       09065 	DW    0x2074
0031BA 6F63       09066 	DW    0x6F63
0031BC 6E69       09067 	DW    0x6E69
0031BE 003A       09068 	DW    0x3A
0031C0 6553       09069 	DW    0x6553
0031C2 7474       09070 	DW    0x7474
0031C4 6E69       09071 	DW    0x6E69
0031C6 7367       09072 	DW    0x7367
0031C8 7320       09073 	DW    0x7320
0031CA 7661       09074 	DW    0x7661
0031CC 6465       09075 	DW    0x6465
0031CE 2020       09076 	DW    0x2020
0031D0 2000       09077 	DW    0x2000
0031D2 2020       09078 	DW    0x2020
0031D4 2020       09079 	DW    0x2020
0031D6 2020       09080 	DW    0x2020
0031D8 2020       09081 	DW    0x2020
0031DA 2020       09082 	DW    0x2020
0031DC 2020       09083 	DW    0x2020
0031DE 2020       09084 	DW    0x2020
0031E0 0020       09085 	DW    0x20
0031E2 6E45       09086 	DW    0x6E45
0031E4 6261       09087 	DW    0x6261
0031E6 656C       09088 	DW    0x656C
0031E8 2064       09089 	DW    0x2064
0031EA 2020       09090 	DW    0x2020
0031EC 2020       09091 	DW    0x2020
0031EE 2020       09092 	DW    0x2020
0031F0 2020       09093 	DW    0x2020
0031F2 4400       09094 	DW    0x4400
0031F4 7369       09095 	DW    0x7369
0031F6 6261       09096 	DW    0x6261
0031F8 656C       09097 	DW    0x656C
0031FA 2064       09098 	DW    0x2064
0031FC 2020       09099 	DW    0x2020
0031FE 2020       09100 	DW    0x2020
003200 2020       09101 	DW    0x2020
003202 0020       09102 	DW    0x20
003204 6E45       09103 	DW    0x6E45
003206 6261       09104 	DW    0x6261
003208 656C       09105 	DW    0x656C
00320A 2F64       09106 	DW    0x2F64
00320C 6944       09107 	DW    0x6944
00320E 6173       09108 	DW    0x6173
003210 6C62       09109 	DW    0x6C62
003212 3F65       09110 	DW    0x3F65
003214 4400       09111 	DW    0x4400
003216 7369       09112 	DW    0x7369
003218 6261       09113 	DW    0x6261
00321A 656C       09114 	DW    0x656C
00321C 2F64       09115 	DW    0x2F64
00321E 6E45       09116 	DW    0x6E45
003220 6261       09117 	DW    0x6261
003222 656C       09118 	DW    0x656C
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 153

ADDR   CODE       LINE  SOURCE

003224 003F       09119 	DW    0x3F
003226 5245       09120 	DW    0x5245
003228 4F52       09121 	DW    0x4F52
00322A 2052       09122 	DW    0x2052
00322C 2020       09123 	DW    0x2020
00322E 2020       09124 	DW    0x2020
003230 2020       09125 	DW    0x2020
003232 2020       09126 	DW    0x2020
003234 2020       09127 	DW    0x2020
003236 4E00       09128 	DW    0x4E00
003238 204F       09129 	DW    0x204F
00323A 5245       09130 	DW    0x5245
00323C 4F52       09131 	DW    0x4F52
00323E 5352       09132 	DW    0x5352
003240 2020       09133 	DW    0x2020
003242 2020       09134 	DW    0x2020
003244 2020       09135 	DW    0x2020
003246 0020       09136 	DW    0x20
003248 6F43       09137 	DW    0x6F43
00324A 746E       09138 	DW    0x746E
00324C 6E69       09139 	DW    0x6E69
00324E 6575       09140 	DW    0x6575
003250 203F       09141 	DW    0x203F
003252 2020       09142 	DW    0x2020
003254 2020       09143 	DW    0x2020
003256 2020       09144 	DW    0x2020
003258 4300       09145 	DW    0x4300
00325A 6168       09146 	DW    0x6168
00325C 6E6E       09147 	DW    0x6E6E
00325E 6C65       09148 	DW    0x6C65
003260 3120       09149 	DW    0x3120
003262 203A       09150 	DW    0x203A
003264 4300       09151 	DW    0x4300
003266 6168       09152 	DW    0x6168
003268 6E6E       09153 	DW    0x6E6E
00326A 6C65       09154 	DW    0x6C65
00326C 3220       09155 	DW    0x3220
00326E 203A       09156 	DW    0x203A
003270 4300       09157 	DW    0x4300
003272 6168       09158 	DW    0x6168
003274 6E6E       09159 	DW    0x6E6E
003276 6C65       09160 	DW    0x6C65
003278 3320       09161 	DW    0x3320
00327A 203A       09162 	DW    0x203A
00327C 4300       09163 	DW    0x4300
00327E 6168       09164 	DW    0x6168
003280 6E6E       09165 	DW    0x6E6E
003282 6C65       09166 	DW    0x6C65
003284 3420       09167 	DW    0x3420
003286 203A       09168 	DW    0x203A
003288 4300       09169 	DW    0x4300
00328A 6168       09170 	DW    0x6168
00328C 6E6E       09171 	DW    0x6E6E
00328E 6C65       09172 	DW    0x6C65
003290 3520       09173 	DW    0x3520
003292 203A       09174 	DW    0x203A
003294 2000       09175 	DW    0x2000
003296 6954       09176 	DW    0x6954
003298 656D       09177 	DW    0x656D
00329A 6F20       09178 	DW    0x6F20
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 154

ADDR   CODE       LINE  SOURCE

00329C 6576       09179 	DW    0x6576
00329E 2072       09180 	DW    0x2072
0032A0 3031       09181 	DW    0x3031
0032A2 6830       09182 	DW    0x6830
0032A4 0020       09183 	DW    0x20
0032A6 2D2D       09184 	DW    0x2D2D
0032A8 4D2D       09185 	DW    0x4D2D
0032AA 4E45       09186 	DW    0x4E45
0032AC 2055       09187 	DW    0x2055
0032AE 5453       09188 	DW    0x5453
0032B0 5241       09189 	DW    0x5241
0032B2 2D54       09190 	DW    0x2D54
0032B4 2D2D       09191 	DW    0x2D2D
0032B6 5600       09192 	DW    0x5600
0032B8 2054       09193 	DW    0x2054
0032BA 6F63       09194 	DW    0x6F63
0032BC 6564       09195 	DW    0x6564
0032BE 2020       09196 	DW    0x2020
0032C0 2020       09197 	DW    0x2020
0032C2 2020       09198 	DW    0x2020
0032C4 2020       09199 	DW    0x2020
0032C6 0020       09200 	DW    0x20
0032C8 7542       09201 	DW    0x7542
0032CA 7474       09202 	DW    0x7474
0032CC 6E6F       09203 	DW    0x6E6F
0032CE 3120       09204 	DW    0x3120
0032D0 4120       09205 	DW    0x4120
0032D2 7463       09206 	DW    0x7463
0032D4 7669       09207 	DW    0x7669
0032D6 203F       09208 	DW    0x203F
0032D8 4200       09209 	DW    0x4200
0032DA 7475       09210 	DW    0x7475
0032DC 6F74       09211 	DW    0x6F74
0032DE 206E       09212 	DW    0x206E
0032E0 2032       09213 	DW    0x2032
0032E2 6341       09214 	DW    0x6341
0032E4 6974       09215 	DW    0x6974
0032E6 3F76       09216 	DW    0x3F76
0032E8 0020       09217 	DW    0x20
0032EA 7542       09218 	DW    0x7542
0032EC 7474       09219 	DW    0x7474
0032EE 6E6F       09220 	DW    0x6E6F
0032F0 3320       09221 	DW    0x3320
0032F2 4120       09222 	DW    0x4120
0032F4 7463       09223 	DW    0x7463
0032F6 7669       09224 	DW    0x7669
0032F8 203F       09225 	DW    0x203F
0032FA 4200       09226 	DW    0x4200
0032FC 7475       09227 	DW    0x7475
0032FE 6F74       09228 	DW    0x6F74
003300 206E       09229 	DW    0x206E
003302 2034       09230 	DW    0x2034
003304 6341       09231 	DW    0x6341
003306 6974       09232 	DW    0x6974
003308 3F76       09233 	DW    0x3F76
00330A 0020       09234 	DW    0x20
00330C 7542       09235 	DW    0x7542
00330E 7474       09236 	DW    0x7474
003310 6E6F       09237 	DW    0x6E6F
003312 3520       09238 	DW    0x3520
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 155

ADDR   CODE       LINE  SOURCE

003314 4120       09239 	DW    0x4120
003316 7463       09240 	DW    0x7463
003318 7669       09241 	DW    0x7669
00331A 203F       09242 	DW    0x203F
00331C 5400       09243 	DW    0x5400
00331E 7365       09244 	DW    0x7365
003320 2074       09245 	DW    0x2074
003322 6552       09246 	DW    0x6552
003324 616C       09247 	DW    0x616C
003326 2079       09248 	DW    0x2079
003328 2031       09249 	DW    0x2031
00332A 2020       09250 	DW    0x2020
00332C 0020       09251 	DW    0x20
00332E 6554       09252 	DW    0x6554
003330 7473       09253 	DW    0x7473
003332 5220       09254 	DW    0x5220
003334 6C65       09255 	DW    0x6C65
003336 7961       09256 	DW    0x7961
003338 3220       09257 	DW    0x3220
00333A 2020       09258 	DW    0x2020
00333C 2020       09259 	DW    0x2020
00333E 5400       09260 	DW    0x5400
003340 7365       09261 	DW    0x7365
003342 2074       09262 	DW    0x2074
003344 6552       09263 	DW    0x6552
003346 616C       09264 	DW    0x616C
003348 2079       09265 	DW    0x2079
00334A 2033       09266 	DW    0x2033
00334C 2020       09267 	DW    0x2020
00334E 0020       09268 	DW    0x20
003350 6554       09269 	DW    0x6554
003352 7473       09270 	DW    0x7473
003354 5220       09271 	DW    0x5220
003356 6C65       09272 	DW    0x6C65
003358 7961       09273 	DW    0x7961
00335A 3420       09274 	DW    0x3420
00335C 2020       09275 	DW    0x2020
00335E 2020       09276 	DW    0x2020
003360 5400       09277 	DW    0x5400
003362 7365       09278 	DW    0x7365
003364 2074       09279 	DW    0x2074
003366 6552       09280 	DW    0x6552
003368 616C       09281 	DW    0x616C
00336A 2079       09282 	DW    0x2079
00336C 2035       09283 	DW    0x2035
00336E 2020       09284 	DW    0x2020
003370 0020       09285 	DW    0x20
003372 6153       09286 	DW    0x6153
003374 656C       09287 	DW    0x656C
003376 7020       09288 	DW    0x7020
003378 6572       09289 	DW    0x6572
00337A 6170       09290 	DW    0x6170
00337C 6172       09291 	DW    0x6172
00337E 2074       09292 	DW    0x2074
003380 2020       09293 	DW    0x2020
003382 5300       09294 	DW    0x5300
003384 6C61       09295 	DW    0x6C61
003386 2065       09296 	DW    0x2065
003388 6F76       09297 	DW    0x6F76
00338A 6F64       09298 	DW    0x6F64
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 156

ADDR   CODE       LINE  SOURCE

00338C 7473       09299 	DW    0x7473
00338E 7572       09300 	DW    0x7572
003390 6B69       09301 	DW    0x6B69
003392 0061       09302 	DW    0x61
003394 6153       09303 	DW    0x6153
003396 656C       09304 	DW    0x656C
003398 7020       09305 	DW    0x7020
00339A 7261       09306 	DW    0x7261
00339C 736F       09307 	DW    0x736F
00339E 7274       09308 	DW    0x7274
0033A0 6975       09309 	DW    0x6975
0033A2 616B       09310 	DW    0x616B
0033A4 5300       09311 	DW    0x5300
0033A6 6C61       09312 	DW    0x6C61
0033A8 2065       09313 	DW    0x2065
0033AA 6863       09314 	DW    0x6863
0033AC 7465       09315 	DW    0x7465
0033AE 616B       09316 	DW    0x616B
0033B0 2020       09317 	DW    0x2020
0033B2 2020       09318 	DW    0x2020
0033B4 0020       09319 	DW    0x20
0033B6 6153       09320 	DW    0x6153
0033B8 656C       09321 	DW    0x656C
0033BA 7020       09322 	DW    0x7020
0033BC 6E71       09323 	DW    0x6E71
0033BE 2061       09324 	DW    0x2061
0033C0 2020       09325 	DW    0x2020
0033C2 2020       09326 	DW    0x2020
0033C4 2020       09327 	DW    0x2020
0033C6 5300       09328 	DW    0x5300
0033C8 6C61       09329 	DW    0x6C61
0033CA 2065       09330 	DW    0x2065
0033CC 6C61       09331 	DW    0x6C61
0033CE 3A6C       09332 	DW    0x3A6C
0033D0 2020       09333 	DW    0x2020
0033D2 2020       09334 	DW    0x2020
0033D4 2020       09335 	DW    0x2020
0033D6 0020       09336 	DW    0x20
0033D8 764F       09337 	DW    0x764F
0033DA 7265       09338 	DW    0x7265
0033DC 6170       09339 	DW    0x6170
0033DE 3A79       09340 	DW    0x3A79
0033E0 2020       09341 	DW    0x2020
0033E2 2020       09342 	DW    0x2020
0033E4 2020       09343 	DW    0x2020
0033E6 2020       09344 	DW    0x2020
0033E8 5400       09345 	DW    0x5400
0033EA 746F       09346 	DW    0x746F
0033EC 6C61       09347 	DW    0x6C61
0033EE 6320       09348 	DW    0x6320
0033F0 756F       09349 	DW    0x756F
0033F2 746E       09350 	DW    0x746E
0033F4 7265       09351 	DW    0x7265
0033F6 2020       09352 	DW    0x2020
0033F8 0020       09353 	DW    0x20
0033FA 6C43       09354 	DW    0x6C43
0033FC 6165       09355 	DW    0x6165
0033FE 2072       09356 	DW    0x2072
003400 5453       09357 	DW    0x5453
003402 5441       09358 	DW    0x5441
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 157

ADDR   CODE       LINE  SOURCE

003404 4320       09359 	DW    0x4320
003406 3148       09360 	DW    0x3148
003408 203F       09361 	DW    0x203F
00340A 4300       09362 	DW    0x4300
00340C 656C       09363 	DW    0x656C
00340E 7261       09364 	DW    0x7261
003410 5320       09365 	DW    0x5320
003412 4154       09366 	DW    0x4154
003414 2054       09367 	DW    0x2054
003416 4843       09368 	DW    0x4843
003418 3F32       09369 	DW    0x3F32
00341A 0020       09370 	DW    0x20
00341C 6C43       09371 	DW    0x6C43
00341E 6165       09372 	DW    0x6165
003420 2072       09373 	DW    0x2072
003422 5453       09374 	DW    0x5453
003424 5441       09375 	DW    0x5441
003426 4320       09376 	DW    0x4320
003428 3348       09377 	DW    0x3348
00342A 203F       09378 	DW    0x203F
00342C 4300       09379 	DW    0x4300
00342E 656C       09380 	DW    0x656C
003430 7261       09381 	DW    0x7261
003432 5320       09382 	DW    0x5320
003434 4154       09383 	DW    0x4154
003436 2054       09384 	DW    0x2054
003438 4843       09385 	DW    0x4843
00343A 3F34       09386 	DW    0x3F34
00343C 0020       09387 	DW    0x20
00343E 6C43       09388 	DW    0x6C43
003440 6165       09389 	DW    0x6165
003442 2072       09390 	DW    0x2072
003444 5453       09391 	DW    0x5453
003446 5441       09392 	DW    0x5441
003448 4320       09393 	DW    0x4320
00344A 3548       09394 	DW    0x3548
00344C 203F       09395 	DW    0x203F
00344E 4300       09396 	DW    0x4300
003450 656C       09397 	DW    0x656C
003452 7261       09398 	DW    0x7261
003454 4120       09399 	DW    0x4120
003456 6C6C       09400 	DW    0x6C6C
003458 5320       09401 	DW    0x5320
00345A 4154       09402 	DW    0x4154
00345C 3F54       09403 	DW    0x3F54
00345E 0020       09404 	DW    0x20
003460 5541       09405 	DW    0x5541
003462 4944       09406 	DW    0x4944
003464 2054       09407 	DW    0x2054
003466 2D20       09408 	DW    0x2D20
003468 203E       09409 	DW    0x203E
00346A 4D4D       09410 	DW    0x4D4D
00346C 2F43       09411 	DW    0x2F43
00346E 4453       09412 	DW    0x4453
003470 4D00       09413 	DW    0x4D00
003472 434D       09414 	DW    0x434D
003474 532F       09415 	DW    0x532F
003476 2044       09416 	DW    0x2044
003478 3E2D       09417 	DW    0x3E2D
00347A 4520       09418 	DW    0x4520
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 158

ADDR   CODE       LINE  SOURCE

00347C 5045       09419 	DW    0x5045
00347E 4F52       09420 	DW    0x4F52
003480 004D       09421 	DW    0x4D
003482 4545       09422 	DW    0x4545
003484 5250       09423 	DW    0x5250
003486 4D4F       09424 	DW    0x4D4F
003488 2D20       09425 	DW    0x2D20
00348A 203E       09426 	DW    0x203E
00348C 4F43       09427 	DW    0x4F43
00348E 464E       09428 	DW    0x464E
003490 4749       09429 	DW    0x4749
003492 5300       09430 	DW    0x5300
003494 7465       09431 	DW    0x7465
003496 6320       09432 	DW    0x6320
003498 696F       09433 	DW    0x696F
00349A 206E       09434 	DW    0x206E
00349C 6174       09435 	DW    0x6174
00349E 6C62       09436 	DW    0x6C62
0034A0 2065       09437 	DW    0x2065
0034A2 0020       09438 	DW    0x20
0034A4 6552       09439 	DW    0x6552
0034A6 6461       09440 	DW    0x6461
0034A8 7020       09441 	DW    0x7020
0034AA 6572       09442 	DW    0x6572
0034AC 6170       09443 	DW    0x6170
0034AE 6172       09444 	DW    0x6172
0034B0 2074       09445 	DW    0x2074
0034B2 2020       09446 	DW    0x2020
0034B4 5200       09447 	DW    0x5200
0034B6 6165       09448 	DW    0x6165
0034B8 2064       09449 	DW    0x2064
0034BA 6F76       09450 	DW    0x6F76
0034BC 6F64       09451 	DW    0x6F64
0034BE 7473       09452 	DW    0x7473
0034C0 7572       09453 	DW    0x7572
0034C2 6B69       09454 	DW    0x6B69
0034C4 0061       09455 	DW    0x61
0034C6 6552       09456 	DW    0x6552
0034C8 6461       09457 	DW    0x6461
0034CA 7020       09458 	DW    0x7020
0034CC 7261       09459 	DW    0x7261
0034CE 736F       09460 	DW    0x736F
0034D0 7274       09461 	DW    0x7274
0034D2 6975       09462 	DW    0x6975
0034D4 616B       09463 	DW    0x616B
0034D6 5200       09464 	DW    0x5200
0034D8 6165       09465 	DW    0x6165
0034DA 2064       09466 	DW    0x2064
0034DC 6863       09467 	DW    0x6863
0034DE 7465       09468 	DW    0x7465
0034E0 616B       09469 	DW    0x616B
0034E2 2020       09470 	DW    0x2020
0034E4 2020       09471 	DW    0x2020
0034E6 0020       09472 	DW    0x20
0034E8 6552       09473 	DW    0x6552
0034EA 6461       09474 	DW    0x6461
0034EC 7020       09475 	DW    0x7020
0034EE 6E71       09476 	DW    0x6E71
0034F0 2061       09477 	DW    0x2061
0034F2 2020       09478 	DW    0x2020
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 159

ADDR   CODE       LINE  SOURCE

0034F4 2020       09479 	DW    0x2020
0034F6 2020       09480 	DW    0x2020
0034F8 5300       09481 	DW    0x5300
0034FA 7465       09482 	DW    0x7465
0034FC 7020       09483 	DW    0x7020
0034FE 6572       09484 	DW    0x6572
003500 6170       09485 	DW    0x6170
003502 6172       09486 	DW    0x6172
003504 2074       09487 	DW    0x2074
003506 2020       09488 	DW    0x2020
003508 0020       09489 	DW    0x20
00350A 6553       09490 	DW    0x6553
00350C 2074       09491 	DW    0x2074
00350E 6F76       09492 	DW    0x6F76
003510 6F64       09493 	DW    0x6F64
003512 7473       09494 	DW    0x7473
003514 7572       09495 	DW    0x7572
003516 696B       09496 	DW    0x696B
003518 2061       09497 	DW    0x2061
00351A 5300       09498 	DW    0x5300
00351C 7465       09499 	DW    0x7465
00351E 7020       09500 	DW    0x7020
003520 7261       09501 	DW    0x7261
003522 736F       09502 	DW    0x736F
003524 7274       09503 	DW    0x7274
003526 6B75       09504 	DW    0x6B75
003528 6169       09505 	DW    0x6169
00352A 0020       09506 	DW    0x20
00352C 6553       09507 	DW    0x6553
00352E 2074       09508 	DW    0x2074
003530 6863       09509 	DW    0x6863
003532 7465       09510 	DW    0x7465
003534 616B       09511 	DW    0x616B
003536 2020       09512 	DW    0x2020
003538 2020       09513 	DW    0x2020
00353A 2020       09514 	DW    0x2020
00353C 5300       09515 	DW    0x5300
00353E 7465       09516 	DW    0x7465
003540 7020       09517 	DW    0x7020
003542 6E71       09518 	DW    0x6E71
003544 2061       09519 	DW    0x2061
003546 2020       09520 	DW    0x2020
003548 2020       09521 	DW    0x2020
00354A 2020       09522 	DW    0x2020
00354C 0020       09523 	DW    0x20
00354E 6E49       09524 	DW    0x6E49
003550 6968       09525 	DW    0x6968
003552 6962       09526 	DW    0x6962
003554 2074       09527 	DW    0x2074
003556 6573       09528 	DW    0x6573
003558 7474       09529 	DW    0x7474
00355A 6E69       09530 	DW    0x6E69
00355C 7367       09531 	DW    0x7367
00355E 5300       09532 	DW    0x5300
003560 6174       09533 	DW    0x6174
003562 7472       09534 	DW    0x7472
003564 7320       09535 	DW    0x7320
003566 7465       09536 	DW    0x7465
003568 6974       09537 	DW    0x6974
00356A 676E       09538 	DW    0x676E
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 160

ADDR   CODE       LINE  SOURCE

00356C 2073       09539 	DW    0x2073
00356E 0020       09540 	DW    0x20
003570 4C42       09541 	DW    0x4C42
003572 7320       09542 	DW    0x7320
003574 7465       09543 	DW    0x7465
003576 6974       09544 	DW    0x6974
003578 676E       09545 	DW    0x676E
00357A 2073       09546 	DW    0x2073
00357C 2020       09547 	DW    0x2020
00357E 2020       09548 	DW    0x2020
003580 4100       09549 	DW    0x4100
003582 5455       09550 	DW    0x5455
003584 534F       09551 	DW    0x534F
003586 4154       09552 	DW    0x4154
003588 5452       09553 	DW    0x5452
00358A 7620       09554 	DW    0x7620
00358C 6C61       09555 	DW    0x6C61
00358E 6575       09556 	DW    0x6575
003590 0020       09557 	DW    0x20
003592 7245       09558 	DW    0x7245
003594 6F72       09559 	DW    0x6F72
003596 2072       09560 	DW    0x2072
003598 6F6C       09561 	DW    0x6F6C
00359A 2067       09562 	DW    0x2067
00359C 2020       09563 	DW    0x2020
00359E 2020       09564 	DW    0x2020
0035A0 2020       09565 	DW    0x2020
0035A2 4300       09566 	DW    0x4300
0035A4 656C       09567 	DW    0x656C
0035A6 7261       09568 	DW    0x7261
0035A8 4520       09569 	DW    0x4520
0035AA 7272       09570 	DW    0x7272
0035AC 726F       09571 	DW    0x726F
0035AE 6C20       09572 	DW    0x6C20
0035B0 676F       09573 	DW    0x676F
0035B2 0020       09574 	DW    0x20
0035B4 6C43       09575 	DW    0x6C43
0035B6 6165       09576 	DW    0x6165
0035B8 2072       09577 	DW    0x2072
0035BA 7263       09578 	DW    0x7263
0035BC 6465       09579 	DW    0x6465
0035BE 7469       09580 	DW    0x7469
0035C0 3120       09581 	DW    0x3120
0035C2 2020       09582 	DW    0x2020
0035C4 4300       09583 	DW    0x4300
0035C6 656C       09584 	DW    0x656C
0035C8 7261       09585 	DW    0x7261
0035CA 6320       09586 	DW    0x6320
0035CC 6572       09587 	DW    0x6572
0035CE 6964       09588 	DW    0x6964
0035D0 2074       09589 	DW    0x2074
0035D2 2032       09590 	DW    0x2032
0035D4 0020       09591 	DW    0x20
0035D6 6C43       09592 	DW    0x6C43
0035D8 6165       09593 	DW    0x6165
0035DA 2072       09594 	DW    0x2072
0035DC 7263       09595 	DW    0x7263
0035DE 6465       09596 	DW    0x6465
0035E0 7469       09597 	DW    0x7469
0035E2 3320       09598 	DW    0x3320
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 161

ADDR   CODE       LINE  SOURCE

0035E4 2020       09599 	DW    0x2020
0035E6 4300       09600 	DW    0x4300
0035E8 656C       09601 	DW    0x656C
0035EA 7261       09602 	DW    0x7261
0035EC 6320       09603 	DW    0x6320
0035EE 6572       09604 	DW    0x6572
0035F0 6964       09605 	DW    0x6964
0035F2 2074       09606 	DW    0x2074
0035F4 2034       09607 	DW    0x2034
0035F6 0020       09608 	DW    0x20
0035F8 6C43       09609 	DW    0x6C43
0035FA 6165       09610 	DW    0x6165
0035FC 2072       09611 	DW    0x2072
0035FE 7263       09612 	DW    0x7263
003600 6465       09613 	DW    0x6465
003602 7469       09614 	DW    0x7469
003604 3520       09615 	DW    0x3520
003606 2020       09616 	DW    0x2020
003608 4300       09617 	DW    0x4300
00360A 656C       09618 	DW    0x656C
00360C 7261       09619 	DW    0x7261
00360E 6F20       09620 	DW    0x6F20
003610 6576       09621 	DW    0x6576
003612 7072       09622 	DW    0x7072
003614 7961       09623 	DW    0x7961
003616 2020       09624 	DW    0x2020
003618 0020       09625 	DW    0x20
00361A 2D2D       09626 	DW    0x2D2D
00361C 2D2D       09627 	DW    0x2D2D
00361E 454D       09628 	DW    0x454D
003620 554E       09629 	DW    0x554E
003622 4520       09630 	DW    0x4520
003624 444E       09631 	DW    0x444E
003626 2D2D       09632 	DW    0x2D2D
003628 2D2D       09633 	DW    0x2D2D
00362A 0000       09634 	DW    0x0
                  09635 _const3
00362C 6E16       09636 	MOVWF ci_3,0
00362E 0F40       09637 	ADDLW 64
003630 6EF6       09638 	MOVWF TBLPTR,0
003632 0E36       09639 	MOVLW 54
003634 6AF7       09640 	CLRF  TBLPTR+1,0
003636 22F7       09641 	ADDWFC TBLPTR+1,1,0
003638 6AF8       09642 	CLRF  TBLPTR+2,0
00363A 0008       09643 	TBLRD *
00363C 50F5       09644 	MOVF  TABLAT,W,0
00363E 0012       09645 	RETURN
003640 3631       09646 	DW    0x3631
003642 3330       09647 	DW    0x3330
003644 3431       09648 	DW    0x3431
003646 3630       09649 	DW    0x3630
003648 8A00       09650 	DW    0x8A00
00364A 9B01       09651 	DW    0x9B01
00364C AC01       09652 	DW    0xAC01
00364E BD01       09653 	DW    0xBD01
003650 CE01       09654 	DW    0xCE01
003652 DF01       09655 	DW    0xDF01
003654 F001       09656 	DW    0xF001
003656 0101       09657 	DW    0x101
003658 1202       09658 	DW    0x1202
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 162

ADDR   CODE       LINE  SOURCE

00365A 2302       09659 	DW    0x2302
00365C 3402       09660 	DW    0x3402
00365E 4502       09661 	DW    0x4502
003660 5602       09662 	DW    0x5602
003662 6702       09663 	DW    0x6702
003664 7802       09664 	DW    0x7802
003666 8902       09665 	DW    0x8902
003668 9A02       09666 	DW    0x9A02
00366A AB02       09667 	DW    0xAB02
00366C BC02       09668 	DW    0xBC02
00366E CD02       09669 	DW    0xCD02
003670 DE02       09670 	DW    0xDE02
003672 EF02       09671 	DW    0xEF02
003674 0002       09672 	DW    0x2
003676 1103       09673 	DW    0x1103
003678 2203       09674 	DW    0x2203
00367A 3303       09675 	DW    0x3303
00367C 4403       09676 	DW    0x4403
00367E 5503       09677 	DW    0x5503
003680 6603       09678 	DW    0x6603
003682 7703       09679 	DW    0x7703
003684 8803       09680 	DW    0x8803
003686 9903       09681 	DW    0x9903
003688 AA03       09682 	DW    0xAA03
00368A BB03       09683 	DW    0xBB03
00368C CC03       09684 	DW    0xCC03
00368E DD03       09685 	DW    0xDD03
003690 EE03       09686 	DW    0xEE03
003692 FF03       09687 	DW    0xFF03
003694 1003       09688 	DW    0x1003
003696 2104       09689 	DW    0x2104
003698 3204       09690 	DW    0x3204
00369A 4304       09691 	DW    0x4304
00369C 5404       09692 	DW    0x5404
00369E 6504       09693 	DW    0x6504
0036A0 7604       09694 	DW    0x7604
0036A2 8704       09695 	DW    0x8704
0036A4 9804       09696 	DW    0x9804
0036A6 A904       09697 	DW    0xA904
0036A8 BA04       09698 	DW    0xBA04
0036AA CB04       09699 	DW    0xCB04
0036AC DC04       09700 	DW    0xDC04
0036AE ED04       09701 	DW    0xED04
0036B0 FE04       09702 	DW    0xFE04
0036B2 4104       09703 	DW    0x4104
0036B4 E1A0       09704 	DW    0xE1A0
0036B6 45E0       09705 	DW    0x45E0
0036B8 A1AA       09706 	DW    0xA1AA
0036BA A558       09707 	DW    0xA558
0036BC 4BA3       09708 	DW    0x4BA3
0036BE 4DA7       09709 	DW    0x4DA7
0036C0 4F48       09710 	DW    0x4F48
0036C2 B0A8       09711 	DW    0xB0A8
0036C4 4350       09712 	DW    0x4350
0036C6 A954       09713 	DW    0xA954
0036C8 B142       09714 	DW    0xB142
0036CA ABAD       09715 	DW    0xABAD
0036CC 61A4       09716 	DW    0x61A4
0036CE E5B2       09717 	DW    0xE5B2
0036D0 65E3       09718 	DW    0x65E3
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 163

ADDR   CODE       LINE  SOURCE

0036D2 B4E4       09719 	DW    0xB4E4
0036D4 B878       09720 	DW    0xB878
0036D6 BAB6       09721 	DW    0xBAB6
0036D8 BCBB       09722 	DW    0xBCBB
0036DA 6FBD       09723 	DW    0x6FBD
0036DC C6BE       09724 	DW    0xC6BE
0036DE 6370       09725 	DW    0x6370
0036E0 79BF       09726 	DW    0x79BF
0036E2 C7B3       09727 	DW    0xC7B3
0036E4 C0C2       09728 	DW    0xC0C2
0036E6 00B7       09729 	DW    0xB7
                  09730 _const5
0036E8 6E13       09731 	MOVWF ci_4,0
0036EA 0FFC       09732 	ADDLW 252
0036EC 6EF6       09733 	MOVWF TBLPTR,0
0036EE 0E36       09734 	MOVLW 54
0036F0 6AF7       09735 	CLRF  TBLPTR+1,0
0036F2 22F7       09736 	ADDWFC TBLPTR+1,1,0
0036F4 6AF8       09737 	CLRF  TBLPTR+2,0
0036F6 0008       09738 	TBLRD *
0036F8 50F5       09739 	MOVF  TABLAT,W,0
0036FA 0012       09740 	RETURN
0036FC 2020       09741 	DW    0x2020
0036FE 2020       09742 	DW    0x2020
003700 7250       09743 	DW    0x7250
003702 7065       09744 	DW    0x7065
003704 7261       09745 	DW    0x7261
003706 7461       09746 	DW    0x7461
003708 2020       09747 	DW    0x2020
00370A 2020       09748 	DW    0x2020
00370C 2000       09749 	DW    0x2000
00370E 2020       09750 	DW    0x2020
003710 6F56       09751 	DW    0x6F56
003712 6F64       09752 	DW    0x6F64
003714 7473       09753 	DW    0x7473
003716 7572       09754 	DW    0x7572
003718 6B3E       09755 	DW    0x6B3E
00371A 2061       09756 	DW    0x2061
00371C 0020       09757 	DW    0x20
00371E 2020       09758 	DW    0x2020
003720 5020       09759 	DW    0x5020
003722 7261       09760 	DW    0x7261
003724 736F       09761 	DW    0x736F
003726 7274       09762 	DW    0x7274
003728 3E75       09763 	DW    0x3E75
00372A 616B       09764 	DW    0x616B
00372C 2020       09765 	DW    0x2020
00372E 2000       09766 	DW    0x2000
003730 2020       09767 	DW    0x2020
003732 2020       09768 	DW    0x2020
003734 6559       09769 	DW    0x6559
003736 6B74       09770 	DW    0x6B74
003738 2061       09771 	DW    0x2061
00373A 2020       09772 	DW    0x2020
00373C 2020       09773 	DW    0x2020
00373E 0020       09774 	DW    0x20
003740 2020       09775 	DW    0x2020
003742 2020       09776 	DW    0x2020
003744 5020       09777 	DW    0x5020
003746 6E77       09778 	DW    0x6E77
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 164

ADDR   CODE       LINE  SOURCE

003748 2061       09779 	DW    0x2061
00374A 2020       09780 	DW    0x2020
00374C 2020       09781 	DW    0x2020
00374E 2020       09782 	DW    0x2020
003750 2000       09783 	DW    0x2000
003752 5550       09784 	DW    0x5550
003754 4E53       09785 	DW    0x4E53
003756 5445       09786 	DW    0x5445
003758 2045       09787 	DW    0x2045
00375A 454A       09788 	DW    0x454A
00375C 4F54       09789 	DW    0x4F54
00375E 204E       09790 	DW    0x204E
003760 0020       09791 	DW    0x20
003762 524B       09792 	DW    0x524B
003764 4445       09793 	DW    0x4445
003766 5449       09794 	DW    0x5449
003768 4E00       09795 	DW    0x4E00
00376A 5041       09796 	DW    0x5041
00376C 4152       09797 	DW    0x4152
00376E 4556       09798 	DW    0x4556
003770 4554       09799 	DW    0x4554
003772 4920       09800 	DW    0x4920
003774 425A       09801 	DW    0x425A
003776 524F       09802 	DW    0x524F
003778 0020       09803 	DW    0x20
00377A 564C       09804 	DW    0x564C
00377C 2000       09805 	DW    0x2000
00377E 2020       09806 	DW    0x2020
003780 2020       09807 	DW    0x2020
003782 4150       09808 	DW    0x4150
003784 5A55       09809 	DW    0x5A55
003786 2041       09810 	DW    0x2041
003788 2020       09811 	DW    0x2020
00378A 2020       09812 	DW    0x2020
00378C 0020       09813 	DW    0x20
                  09814 
                  09815 	END
                  09816 
                  09817 
                  09818 ; *** KEY INFO ***
                  09819 
                  09820 ; 0x0001D6   87 word(s)  0 % : scan
                  09821 ; 0x00022D    7 word(s)  0 % : REL1_ON
                  09822 ; 0x000234    7 word(s)  0 % : REL2_ON
                  09823 ; 0x00023B    7 word(s)  0 % : REL3_ON
                  09824 ; 0x000242    7 word(s)  0 % : REL4_ON
                  09825 ; 0x000249    7 word(s)  0 % : REL6_ON
                  09826 ; 0x000250    7 word(s)  0 % : REL_OFF
                  09827 ; 0x0000A4    4 word(s)  0 % : _highPriorityInt
                  09828 ; 0x000004    2 word(s)  0 % : highPriorityIntServer
                  09829 ; 0x00000C  152 word(s)  0 % : lowPriorityIntServer
                  09830 ; 0x0000A8    7 word(s)  0 % : SPI_Send
                  09831 ; 0x0000AF    7 word(s)  0 % : SPI_setup
                  09832 ; 0x0000B6   12 word(s)  0 % : PCcmd
                  09833 ; 0x0000C2    4 word(s)  0 % : terminate
                  09834 ; 0x0000C6    6 word(s)  0 % : PC_TX
                  09835 ; 0x001883    1 word(s)  0 % : _const1
                  09836 ; 0x0000CC   19 word(s)  0 % : _divU16_8
                  09837 ; 0x0000DF   18 word(s)  0 % : _remU16_8
                  09838 ; 0x0000F1   43 word(s)  0 % : SYSTEM_setup
CC8E Version 1.1E,   File: system.c            17. Mar 2016   2:04   Page 165

ADDR   CODE       LINE  SOURCE

                  09839 ; 0x00011C   15 word(s)  0 % : ini
                  09840 ; 0x00012B   18 word(s)  0 % : ADC
                  09841 ; 0x00013D    8 word(s)  0 % : delay
                  09842 ; 0x000145   12 word(s)  0 % : delaySec
                  09843 ; 0x000151  104 word(s)  0 % : conv
                  09844 ; 0x0001B9    7 word(s)  0 % : start_int
                  09845 ; 0x0001C0    8 word(s)  0 % : ESCbut
                  09846 ; 0x0001C8   14 word(s)  0 % : hex2dec
                  09847 ; 0x000257   10 word(s)  0 % : readEEPROM
                  09848 ; 0x000261   16 word(s)  0 % : writeEEPROM
                  09849 ; 0x000271  205 word(s)  1 % : Load
                  09850 ; 0x00033E  249 word(s)  1 % : cr_to_time
                  09851 ; 0x000437  280 word(s)  1 % : time_to_cr
                  09852 ; 0x00054F   30 word(s)  0 % : lcd_write
                  09853 ; 0x00056D   22 word(s)  0 % : lcd_setup
                  09854 ; 0x000583    3 word(s)  0 % : lcd_goto
                  09855 ; 0x000586    6 word(s)  0 % : lcd_clear
                  09856 ; 0x00058C   21 word(s)  0 % : lcd_puts
                  09857 ; 0x0005FB   56 word(s)  0 % : lcd_credit
                  09858 ; 0x000633   55 word(s)  0 % : lcd_time
                  09859 ; 0x00066A  158 word(s)  0 % : lcd_money
                  09860 ; 0x000708   14 word(s)  0 % : lcd_out
                  09861 ; 0x000716    8 word(s)  0 % : st_clear
                  09862 ; 0x00071E   13 word(s)  0 % : print_total
                  09863 ; 0x0005EC   15 word(s)  0 % : lcd_puts_cyr
                  09864 ; 0x0005A1   75 word(s)  0 % : lat2cyr
                  09865 ; 0x001884  658 word(s)  4 % : _const2
                  09866 ; 0x001B16   94 word(s)  0 % : _const3
                  09867 ; 0x001B74   83 word(s)  0 % : _const5
                  09868 ; 0x00072B 1929 word(s) 11 % : scan_menu
                  09869 ; 0x000EB4   64 word(s)  0 % : en_to_dis
                  09870 ; 0x000EF4  219 word(s)  1 % : test
                  09871 ; 0x000FCF 2228 word(s) 13 % : main
                  09872 
                  09873 ; RAM usage: 706 bytes (34 local), 830 bytes free
                  09874 ; Maximum call level: 4 (+2 for interrupt)
                  09875 ; Total of 7103 code words (43 %)
